{
    "version": "https://jsonfeed.org/version/1",
    "title": "hexo-blog",
    "description": "record some markdown",
    "home_page_url": "https://ceilzcx.github.io/hexo-blog",
    "items": [
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2022/07/29/database/elasticsearch8/",
            "url": "https://ceilzcx.github.io/hexo-blog/2022/07/29/database/elasticsearch8/",
            "title": "elasticsearch8",
            "date_published": "2022-07-29T16:11:24.000Z",
            "content_html": "<h1 id=\"elasticsearch8\"><a class=\"markdownIt-Anchor\" href=\"#elasticsearch8\">#</a> Elasticsearch8+</h1>\n<blockquote>\n<p>ECE 认证工程师备考</p>\n</blockquote>\n<h2 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h2>\n<p>使用  <code>Ubuntu16 </code> 系统</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install elasticsearch</span><br><span class=\"line\">/etc/elasticsearch | /var/log/elasticsearch | /usr/share/elasticsearch</span><br><span class=\"line\">wget https://xxxx/elasticsearch.tar.gz</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">===================================================================================</span><br><span class=\"line\">elasticsearch.keystore 密文文件，不小心误删</span><br><span class=\"line\">===================================================================================</span><br><span class=\"line\">./bin/elasticsearch-keystore create</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./elasticsearch-setup-passwords interactive</span><br><span class=\"line\"></span><br><span class=\"line\">=====================================================================================</span><br><span class=\"line\">Failed to authenticate user &#x27;elastic&#x27; against http://10.0.16.8:9200/_security/_authenticate?pretty</span><br><span class=\"line\">Possible causes include:</span><br><span class=\"line\"> * The password for the &#x27;elastic&#x27; user has already been changed on this cluster</span><br><span class=\"line\"> * Your elasticsearch node is running against a different keystore</span><br><span class=\"line\">   This tool used the keystore at /home/ubuntu/elasticsearch-8.3.2/config/elasticsearch.keystore</span><br><span class=\"line\"></span><br><span class=\"line\">You can use the `elasticsearch-reset-password` CLI tool to reset the password of the &#x27;elastic&#x27; user</span><br><span class=\"line\">=====================================================================================</span><br><span class=\"line\"></span><br><span class=\"line\">修改 elasticsearch.yml 的 xpack.security.enabled: false</span><br><span class=\"line\">删除 .security-7 索引</span><br><span class=\"line\">重新设置 xpack.security.enabled: true</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">===================================================================================</span><br><span class=\"line\">kibana.yml配置不支持使用elastic用户名，使用其他用户名</span><br><span class=\"line\">===================================================================================</span><br><span class=\"line\">比较合理的 elasticsearch-setup-password 脚本会设置 kibana_system 的用户和密码</span><br><span class=\"line\"></span><br><span class=\"line\">elasticsearch.username: &quot;kibana_system&quot;</span><br><span class=\"line\">elasticsearch.password: &quot;xxx&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"data-management\"><a class=\"markdownIt-Anchor\" href=\"#data-management\">#</a> <strong>Data Management</strong></h2>\n<h3 id=\"define-an-index-that-satisfies-a-given-set-of-requirements-定义一个满足条件的索引\"><a class=\"markdownIt-Anchor\" href=\"#define-an-index-that-satisfies-a-given-set-of-requirements-定义一个满足条件的索引\">#</a> Define an index that satisfies a given set of requirements —— 定义一个满足条件的索引</h3>\n<ul>\n<li>analysis</li>\n<li>setting</li>\n<li>mapper</li>\n</ul>\n<h3 id=\"define-and-use-an-index-template-for-a-given-pattern-that-satisfies-a-given-set-of-requirements\"><a class=\"markdownIt-Anchor\" href=\"#define-and-use-an-index-template-for-a-given-pattern-that-satisfies-a-given-set-of-requirements\">#</a> Define and use an index template for a given pattern that satisfies a given set of requirements</h3>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PUT index-test</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;mappings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  \t<span class=\"comment\">// 默认为true</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;date_detection&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">false</span></span></span><br><span class=\"line\">    <span class=\"comment\">// 设置时间格式</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dynamic_date_formats&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;MM/dd/yyyy&quot;</span><span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"comment\">// 开启number类型检测，整数检测为long类型，浮点数检测为float类型</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;numeric_detection&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PUT test_index</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;mappings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dynamic_templates&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      \t<span class=\"comment\">// 自定义名称</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;my_template&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"comment\">// 匹配条件(match_mapping_type、match、unmatch、path:e.g 类似对象、path_unmatch)</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;match&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;name*&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;mapping&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;keyword&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">]</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"define-and-use-a-dynamic-template-that-satisfies-a-given-set-of-requirements\"><a class=\"markdownIt-Anchor\" href=\"#define-and-use-a-dynamic-template-that-satisfies-a-given-set-of-requirements\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L2R5bmFtaWMtdGVtcGxhdGVzLmh0bWw=\">Define and use a dynamic template that satisfies a given set of requirements</span></h3>\n<blockquote>\n<p>8 + 版本后  <code>_template</code>  逐渐被废弃，改为  <code>_component_template</code>  和  <code>_index_template</code></p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PUT _index_template/my_template_name</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;template&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;mappings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;settings&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">\t<span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"define-an-index-lifecycle-management-policy-for-a-time-series-index\"><a class=\"markdownIt-Anchor\" href=\"#define-an-index-lifecycle-management-policy-for-a-time-series-index\">#</a> Define an Index Lifecycle Management policy for a time-series index</h3>\n<blockquote>\n<p>kibana： Stack Management &gt;&gt;&gt; Index Lifecycle Management</p>\n</blockquote>\n<h3 id=\"define-an-index-template-that-creates-a-new-data-stream\"><a class=\"markdownIt-Anchor\" href=\"#define-an-index-template-that-creates-a-new-data-stream\">#</a> Define an index template that creates a new data stream</h3>\n<p>类似 ILM</p>\n<p>need</p>\n<ul>\n<li>\n<p>a matching index template</p>\n</li>\n<li>\n<p>a  <code>@timestamp</code>  field</p>\n</li>\n<li></li>\n</ul>\n<p>原理：read all indices (now + back) /write now/newest index</p>\n<p>索引格式： <code>.ds-&lt;data-stream&gt;-&lt;yyyy.MM.dd&gt;-000001</code></p>\n<p>add a new document： not use  <code>PUT /&lt;target&gt;/_doc/&lt;_id&gt;</code>  ，use  <code>PUT /&lt;target&gt;/_create/&lt;_id&gt;</code></p>\n<h3 id=\"use-the-data-visualizer-to-upload-a-text-file-into-elasticsearch不考\"><a class=\"markdownIt-Anchor\" href=\"#use-the-data-visualizer-to-upload-a-text-file-into-elasticsearch不考\">#</a> Use the Data Visualizer to upload a text file into Elasticsearch（不考）</h3>\n<p>kibana &gt;&gt;&gt; machine learning  &gt;&gt;&gt; data visualizer</p>\n<h2 id=\"searching-data\"><a class=\"markdownIt-Anchor\" href=\"#searching-data\">#</a> Searching Data</h2>\n<h3 id=\"write-and-execute-a-search-query-for-terms-andor-phrases-in-one-or-more-fields-of-an-index\"><a class=\"markdownIt-Anchor\" href=\"#write-and-execute-a-search-query-for-terms-andor-phrases-in-one-or-more-fields-of-an-index\">#</a> Write and execute a search query for terms and/or phrases in one or more fields of an index</h3>\n<p><strong>match、term、match_phrase 的区别</strong></p>\n<ul>\n<li><code>match</code>  查询会进行分词，匹配到单个即可</li>\n<li><code>term</code>  查询不会分词，必须完全匹配（适用 keyword 类型，类似 like）</li>\n<li><code>match_phrase</code>  查询会分词，必须完全匹配（适用 text 类型，类似 like）</li>\n</ul>\n<h5 id=\"boolean-query\"><a class=\"markdownIt-Anchor\" href=\"#boolean-query\">#</a> Boolean query</h5>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST _search</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;bool&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;must&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;term&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;field&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;value&quot;</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;filter&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;term&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;field&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;value&quot;</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;must_not&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;range&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;age&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;gte&quot;</span> <span class=\"punctuation\">:</span> <span class=\"number\">10</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;lte&quot;</span> <span class=\"punctuation\">:</span> <span class=\"number\">20</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;should&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;term&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;field1&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;value1&quot;</span> <span class=\"punctuation\">&#125;</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;term&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;field2&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;value2&quot;</span> <span class=\"punctuation\">&#125;</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;minimum_should_match&quot;</span> <span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;boost&quot;</span> <span class=\"punctuation\">:</span> <span class=\"number\">1.0</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><code>minimum_should_match</code>  存在 should 时默认为 1，否则默认为 0</p>\n<p><code>boost</code> ：计算分数时使用</p>\n<p><code>bool.filter</code> ：不计算分数</p>\n<p><code>_name</code> ：每一个 top query 都可以添加，response 的 <code>matched_queries</code>  查看结果满足哪个 query。</p>\n<h5 id=\"boosting-query-constant-score-query\"><a class=\"markdownIt-Anchor\" href=\"#boosting-query-constant-score-query\">#</a> Boosting query &amp; Constant score query</h5>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /_search</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;boosting&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;positive&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;term&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;text&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;apple&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"comment\">// 匹配的document减negative_boost的分数</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;negative&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;term&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;text&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;pie tart fruit crumble tree&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;negative_boost&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0.5</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;constant_score&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"comment\">// 只有 filter 这一种</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;filter&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;term&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;user.id&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;kimchy&quot;</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"comment\">// 匹配到数据分数指定为boost值</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;boost&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1.2</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"disjunction-max-query\"><a class=\"markdownIt-Anchor\" href=\"#disjunction-max-query\">#</a> Disjunction max query</h5>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /_search</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;dis_max&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"comment\">// 满足多个 query 匹配的文档，根据 tie_breaker 增加分数</span></span><br><span class=\"line\">      <span class=\"comment\">// 0 &lt;= tie_breaker &lt;= 1</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;tie_breaker&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0.4</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;boost&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1.2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;queries&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;match&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;match&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        ...</span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"intervals-query\"><a class=\"markdownIt-Anchor\" href=\"#intervals-query\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS84LjMvcXVlcnktZHNsLWludGVydmFscy1xdWVyeS5odG1s\">Intervals query</span></h5>\n<p>精确控制查询的 terms 顺序、terms 之间的距离以及包含关系的灵活控制</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /_search</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;intervals&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;all_of&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"comment\">// 按顺序匹配 xxxvalue1xxxvalue2xxx可以被查询到，xxxvalue2xxxvalue1xxx的文档不能配查询</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;ordered&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"comment\">// value1和value2的间距，0代表只能匹配xxxvalue1value2xxx的文档</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;max_gaps&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;intervals&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;match&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;value1&quot;</span></span><br><span class=\"line\">              <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;match&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;value2&quot;</span></span><br><span class=\"line\">              <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">          <span class=\"punctuation\">]</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"match-query\"><a class=\"markdownIt-Anchor\" href=\"#match-query\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS84LjMvcXVlcnktZHNsLW1hdGNoLXF1ZXJ5Lmh0bWw=\">Match query</span></h5>\n<blockquote>\n<p>匹配 text、number、date or boolean value</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET _search</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;match&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;cuury&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"comment\">// 模糊匹配 cuury 可以匹配到 curry</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;fuzziness&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"comment\">// fuzzy前缀n位不更改</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;prefix_length&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">2</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"comment\">// &quot;a b&quot; &gt;&gt;&gt; or &gt;&gt;&gt; a or b </span></span><br><span class=\"line\">        <span class=\"comment\">// &quot;a b&quot; &gt;&gt;&gt; and &gt;&gt;&gt; a and b</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;operator&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;or/and&quot;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"match-boolean-prefix\"><a class=\"markdownIt-Anchor\" href=\"#match-boolean-prefix\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS84LjMvcXVlcnktZHNsLW1hdGNoLWJvb2wtcHJlZml4LXF1ZXJ5Lmh0bWw=\">Match boolean prefix</span></h5>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /_search</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;match_bool_prefix&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;message&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;quick brown f&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">等价于</span><br><span class=\"line\">GET /_search</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;bool&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;should&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;term&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;quick&quot;</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;term&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;brown&quot;</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;prefix&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;message&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;f&quot;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"match-phrase-query-match-phrase-prefix-query\"><a class=\"markdownIt-Anchor\" href=\"#match-phrase-query-match-phrase-prefix-query\">#</a> match phrase query &amp; match phrase prefix query</h5>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET my-index<span class=\"number\">-00002</span>/_search</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;match_phrase&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;value&quot;</span>     </span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"combined-fields\"><a class=\"markdownIt-Anchor\" href=\"#combined-fields\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS84LjMvcXVlcnktZHNsLWNvbWJpbmVkLWZpZWxkcy1xdWVyeS5odG1s\">Combined fields</span></h5>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET _search</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;combined_fields&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;quility.com Brogan Dante&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"comment\">// 查询 city 和 email 字段，^2代表匹配这个字段的boost=2</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;fields&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;city^2&quot;</span><span class=\"punctuation\">,</span> <span class=\"string\">&quot;email&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"comment\">// 默认为 or，or/and</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;operator&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;or&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>nested query</p>\n<h3 id=\"write-and-execute-a-search-query-that-is-a-boolean-combination-of-multiple-queries-and-filters\"><a class=\"markdownIt-Anchor\" href=\"#write-and-execute-a-search-query-that-is-a-boolean-combination-of-multiple-queries-and-filters\">#</a> Write and execute a search query that is a Boolean combination of multiple queries and filters</h3>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET my-index<span class=\"number\">-000001</span>/_msearch</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;query&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;match_all&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;from&quot;</span> <span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;size&quot;</span> <span class=\"punctuation\">:</span> <span class=\"number\">10</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;query&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;match_all&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;index&quot;</span> <span class=\"punctuation\">:</span> <span class=\"string\">&quot;my-index-000002&quot;</span><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;query&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;match_all&quot;</span> <span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p>返回的 response 数组结果集，每个元素为一个查询结果</p>\n<h3 id=\"search-template\"><a class=\"markdownIt-Anchor\" href=\"#search-template\">#</a> search template</h3>\n<h3 id=\"write-an-asynchronous-search\"><a class=\"markdownIt-Anchor\" href=\"#write-an-asynchronous-search\">#</a> Write an asynchronous search</h3>\n<p>异步搜索</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST  my_index/_async_search</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\">GET _sql/async/&lt;id&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"write-and-execute-metric-and-bucket-aggregations\"><a class=\"markdownIt-Anchor\" href=\"#write-and-execute-metric-and-bucket-aggregations\">#</a> Write and execute metric and bucket aggregations</h3>\n<ul>\n<li>\n<p>前置条件：【doc_values: true】</p>\n</li>\n<li>\n<p>不能用于 <code>text</code>  类型</p>\n</li>\n<li>\n<p>缓存，aggs 执行会将高频率的数据进行缓存，使用 <code>&quot;size&quot;:0</code>  有效减少不必要的缓存，缓存适用于相同的 <code>preference string</code></p>\n</li>\n</ul>\n<p>demo search aggs 如下</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// typed_keys: 原本return name, 现在return type#name</span></span><br><span class=\"line\">GET my_index/_search?typed_keys</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;size&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0</span><span class=\"punctuation\">,</span>\t<span class=\"comment\">// 只返回 aggs 结果</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;aggs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;my-first-agg-name&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;type (terms)&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;my-field&quot;</span></span><br><span class=\"line\">\t\t\t<span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// 元数据：元数据也会带上这个field</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;meta&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">       \t \t\t<span class=\"attr\">&quot;my-metadata-field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;foo&quot;</span></span><br><span class=\"line\">      \t\t<span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">// sub aggs</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">&quot;aggs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">&quot;my-first-sub-agg-name&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">\t\t\t<span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">\t\t<span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\t\t<span class=\"comment\">// 多个 aggs, 返回多个 result</span></span><br><span class=\"line\">\t\t<span class=\"attr\">&quot;my-second-agg-name&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t\t<span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">\t<span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"metric-aggs\"><a class=\"markdownIt-Anchor\" href=\"#metric-aggs\">#</a> metric aggs</h4>\n<p>计算指标：Max/Min、Average、Sum</p>\n<p>不支持 sub-aggregations</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L3NlYXJjaC1hZ2dyZWdhdGlvbnMtbWV0cmljcy1ib3hwbG90LWFnZ3JlZ2F0aW9uLmh0bWw=\">Boxplot</span></p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;boxplot&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;load_time&quot;</span> </span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// response</span></span><br><span class=\"line\"><span class=\"attr\">&quot;aggregations&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;load_time_boxplot&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;min&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0.0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;max&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">990.0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 第一个四分位数（前一半数据的中位数）</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;q1&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">165.0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 第二个四分位数（中位数）</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;q2&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">445.0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">// 第三个四分位数（后一半数据的中位数）</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;q3&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">725.0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;lower&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0.0</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;upper&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">990.0</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li></li>\n</ul>\n<h4 id=\"bucket-aggs\"><a class=\"markdownIt-Anchor\" href=\"#bucket-aggs\">#</a> bucket aggs</h4>\n<p>支持 sub-aggregations</p>\n<ul>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS84LjMvc2VhcmNoLWFnZ3JlZ2F0aW9ucy1idWNrZXQtYWRqYWNlbmN5LW1hdHJpeC1hZ2dyZWdhdGlvbi5odG1s\">Adjacency matrix</span></p>\n<p>【向量】filter A B C -&gt; return A B C A&amp;B A&amp;C B&amp;C</p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS84LjMvc2VhcmNoLWFnZ3JlZ2F0aW9ucy1idWNrZXQtYXV0b2RhdGVoaXN0b2dyYW0tYWdncmVnYXRpb24uaHRtbA==\">Auto-interval date histogram</span></p>\n<p>自定义 <code>buckets</code> ，es 自动划分需要区间</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;auto_date_histogram&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;date&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;buckets&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">10</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS84LjMvc2VhcmNoLWFnZ3JlZ2F0aW9ucy1idWNrZXQtY2hpbGRyZW4tYWdncmVnYXRpb24uaHRtbA==\">Children</span></p>\n<p>适用于 <code>join</code>  类型</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;aggs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;join-aggs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;children&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;answer&quot;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS84LjMvc2VhcmNoLWFnZ3JlZ2F0aW9ucy1idWNrZXQtY29tcG9zaXRlLWFnZ3JlZ2F0aW9uLmh0bWw=\">Composite</span></p>\n<p>组合，合并多个 aggs 查询，source1：A1、A2，source2：B1、B2 -&gt; A1B1、A1B2、A2B1、A2B2 的查询结果</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;aggs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;my-aggs-name&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;composite&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;sources&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name01&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                <span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;field-name&quot;</span></span><br><span class=\"line\">              <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;name02&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">              <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">                <span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;field-name&quot;</span></span><br><span class=\"line\">              <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">            <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">]</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS84LjMvc2VhcmNoLWFnZ3JlZ2F0aW9ucy1idWNrZXQtaGlzdG9ncmFtLWFnZ3JlZ2F0aW9uLmh0bWw=\">Histogram</span></p>\n<blockquote>\n<p>直方图 / 柱状图</p>\n<p>bucket_key = Math.floor((value - offset) / interval) * interval + offset</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;histogram&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;field-name&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// 间隔</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;interval&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">5</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"comment\">// 过滤 count &lt; min_doc_count 的区间</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;min_doc_count&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">1</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L3NlYXJjaC1hZ2dyZWdhdGlvbnMtYnVja2V0LWRhdGVoaXN0b2dyYW0tYWdncmVnYXRpb24uaHRtbA==\">Date histogram</span></p>\n<blockquote>\n<p>date 作为 field type 的特殊 histogram</p>\n<p>bucket_key = Math.floor(value / interval) * interval</p>\n</blockquote>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L3NlYXJjaC1hZ2dyZWdhdGlvbnMtYnVja2V0LXJhbmdlLWFnZ3JlZ2F0aW9uLmh0bWw=\">Range</span></p>\n<blockquote>\n<p>范围聚合查询，from &lt;= value &lt; to</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;aggs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;price_ranges&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;range&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;keyed&quot;</span><span class=\"punctuation\">:</span> <span class=\"literal\"><span class=\"keyword\">true</span></span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"comment\">// 可以查询script field</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;price&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;ranges&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">        <span class=\"comment\">// 可以没有to，也可以没有from</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;to&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">100.0</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"comment\">// 范围可以重叠</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;from&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">80.0</span><span class=\"punctuation\">,</span> <span class=\"attr\">&quot;to&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">200.0</span> <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;from&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">200.0</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">]</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L3NlYXJjaC1hZ2dyZWdhdGlvbnMtYnVja2V0LWRhdGVyYW5nZS1hZ2dyZWdhdGlvbi5odG1s\">Date range</span></p>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L3NlYXJjaC1hZ2dyZWdhdGlvbnMtYnVja2V0LWdsb2JhbC1hZ2dyZWdhdGlvbi5odG1s\">Global</span></p>\n<blockquote>\n<p>定义一个单独包含全部数据的 bucket，使得当前聚合不受 query 查询的影响（全部数据作为聚合目标）</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST /sales/_search?size=<span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;query&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;match&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;type&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;t-shirt&quot;</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;aggs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"comment\">// 全部商品平均价格（match_all）</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;all_products&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;global&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span> </span><br><span class=\"line\">      <span class=\"attr\">&quot;aggs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span>     </span><br><span class=\"line\">      <span class=\"attr\">&quot;avg_price&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;avg&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;price&quot;</span> <span class=\"punctuation\">&#125;</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"comment\">//  t-shirt商品平均价格（query有关）</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;t_shirts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;avg&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;price&quot;</span> <span class=\"punctuation\">&#125;</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L3NlYXJjaC1hZ2dyZWdhdGlvbnMtYnVja2V0LW1pc3NpbmctYWdncmVnYXRpb24uaHRtbA==\">Missing</span></p>\n<p>缺少字段或者字段值为 null 的 <code>document</code>  缺少 <code>bucket</code> ，通过 <code>missing</code>  聚合统计</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;aggs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;products_without_a_price&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;missing&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;price&quot;</span> <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L3NlYXJjaC1hZ2dyZWdhdGlvbnMtYnVja2V0LWlwcHJlZml4LWFnZ3JlZ2F0aW9uLmh0bWw=\">IP prefix</span> 和 <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L3NlYXJjaC1hZ2dyZWdhdGlvbnMtYnVja2V0LWlwcmFuZ2UtYWdncmVnYXRpb24uaHRtbA==\">IP range</span></p>\n<blockquote>\n<p>IP 地址相关的聚合，<span class=\"exturl\" data-url=\"aHR0cDovL3h4eC54eHgueHh4Lnh4eA==\">xxx.xxx.xxx.xxx</span></p>\n</blockquote>\n</li>\n<li>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L3NlYXJjaC1hZ2dyZWdhdGlvbnMtcmFuZG9tLXNhbXBsZXItYWdncmVnYXRpb24uaHRtbA==\">Random sampler</span></p>\n<blockquote>\n<p>随机取样聚合，0 &lt; probability &lt; 0.5 || probability = 1</p>\n<p>随机取集合 * probability 的集合，每次结果可能不相同</p>\n</blockquote>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;aggregations&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;sampling&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;random_sampler&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;probability&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">0.1</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;aggs&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;price_percentiles&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">          <span class=\"attr\">&quot;percentiles&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">            <span class=\"attr\">&quot;field&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;taxful_total_price&quot;</span></span><br><span class=\"line\">          <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">        <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li></li>\n</ul>\n<h4 id=\"pipeline-aggs\"><a class=\"markdownIt-Anchor\" href=\"#pipeline-aggs\">#</a> pipeline aggs</h4>\n<h3 id=\"other\"><a class=\"markdownIt-Anchor\" href=\"#other\">#</a> Other</h3>\n<h4 id=\"ccrcross-cluster-replication-ccscross-cluster-search\"><a class=\"markdownIt-Anchor\" href=\"#ccrcross-cluster-replication-ccscross-cluster-search\">#</a> CCR（Cross-cluster replication） &amp; CCS（Cross-cluster search）</h4>\n<p>配置  <code>elasticsearch.yml</code></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">transport.host:</span> <span class=\"string\">xxx.xxx.xxx.xxx</span></span><br><span class=\"line\"><span class=\"attr\">transport.port:</span> <span class=\"number\">9300</span></span><br></pre></td></tr></table></figure>\n<p>证书问题</p>\n<p>1）使用相同的 CA 证书：复制  <code>ca.crt</code>  和  <code>ca.key</code></p>\n<p>2）使用不同证书</p>\n<h5 id=\"创建集群远程连接\"><a class=\"markdownIt-Anchor\" href=\"#创建集群远程连接\">#</a> 创建集群远程连接</h5>\n<p>Stack Management &gt;&gt;&gt; Remote Clusters</p>\n<p>或通过 Dev Tools 实现</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">PUT _cluster/settings</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;persistent&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;cluster.remote&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">      <span class=\"attr\">&quot;remote_cluster&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;seeds&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span></span><br><span class=\"line\">          <span class=\"string\">&quot;192.168.0.8:9300&quot;</span></span><br><span class=\"line\">        <span class=\"punctuation\">]</span></span><br><span class=\"line\">      <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\">  <span class=\"punctuation\">&#125;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<h5 id=\"配置跨集群复制\"><a class=\"markdownIt-Anchor\" href=\"#配置跨集群复制\">#</a> 配置跨集群复制</h5>\n<p>Stack Management &gt;&gt;&gt; Cross Cluster Replication</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>Remote cluster</strong></td>\n<td>添加的集群名称</td>\n</tr>\n<tr>\n<td><strong>Leader index</strong></td>\n<td>待迁移的索引。</td>\n</tr>\n<tr>\n<td><strong>Follower index</strong></td>\n<td>迁移数据生成的索引。索引名称不可重复。</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2022/05/30/database/rocksDB/",
            "url": "https://ceilzcx.github.io/hexo-blog/2022/05/30/database/rocksDB/",
            "title": "rocksDB",
            "date_published": "2022-05-30T10:40:40.000Z",
            "content_html": "<h2 id=\"rocksdb\"><a class=\"markdownIt-Anchor\" href=\"#rocksdb\">#</a> RocksDB</h2>\n<p>适用环境：内存、<strong>Flash</strong>、hard disks、HDFS</p>\n<h3 id=\"数据结构\"><a class=\"markdownIt-Anchor\" href=\"#数据结构\">#</a> 数据结构</h3>\n<ul>\n<li>\n<p>memtable（<strong>内存</strong>数据结构）</p>\n</li>\n<li>\n<p>sstfile（磁盘）</p>\n</li>\n</ul>\n<p>有序存储，方便查询</p>\n<ul>\n<li>logfile（顺序写）</li>\n</ul>\n<p>数据先写入  <code>memtable</code> ，部分请求内容写入  <code>logfile</code> （WAL：Write-Ahead Logging）</p>\n<p><code>memtable</code>  内存满之后，执行 flush 操作，将数据转移到  <code>sstfile</code> ，同时删除 logfile 的数据</p>\n<p>RocksDB 的 key 和 value 完全是 byte stream（无长度限制）</p>\n<p><strong>DB 的所有数据按照 key 有序存储</strong>（因此  <code>iterator</code>  可以支持 rangeScan 查询）， <code>compare</code>  方法可以用户自定义</p>\n<p><code>Snapshot</code>  可以创建一个时间点的快照（ <code>Get</code>  和  <code>Iterator</code>  可以执行在某一个  <code>Snapshot</code>  上）</p>\n<h4 id=\"读放大-和-写放大\"><a class=\"markdownIt-Anchor\" href=\"#读放大-和-写放大\">#</a> 读放大 和 写放大</h4>\n<ul>\n<li>\n<p>数据存入内存，构建成一棵树</p>\n</li>\n<li>\n<p>内存数据越来越大，flush 到磁盘</p>\n</li>\n<li>\n<p>磁盘定期执行 merge 操作，合并成为一棵更大的树（L0 → LN，L0 的热度最高，LN 的热度最低）</p>\n</li>\n</ul>\n<p>读取数据需要一步步从内存到硬盘，因此称为读放大。</p>\n<h4 id=\"同步写-和-异步写\"><a class=\"markdownIt-Anchor\" href=\"#同步写-和-异步写\">#</a> 同步写 和 异步写</h4>\n<ul>\n<li>同步写：写入磁盘返回</li>\n<li>异步写：写入内存返回，写入磁盘是异步操作</li>\n</ul>\n<p>异步写操作系统崩溃会丢掉部分数据（一般不会发生），同步写效率比异步写差千倍左右。</p>\n<h4 id=\"事务transations\"><a class=\"markdownIt-Anchor\" href=\"#事务transations\">#</a> 事务（Transations）</h4>\n<p>支持乐观和悲观锁</p>\n<h4 id=\"column-family\"><a class=\"markdownIt-Anchor\" href=\"#column-family\">#</a> Column Family</h4>\n<blockquote>\n<p>列族</p>\n</blockquote>\n<p>每个 key 都与唯一的列族结合</p>\n<p>跨列族的原子性操作</p>\n<p>快速删除 / 添加列族（<strong>共享 WAL 日志，不共享 <code>memtable</code>  和 <code>table</code>  文件</strong>）</p>\n<p>一个列族 flush 后，创建新的 WAL 日志，老的 WAL 不删除，等到所有的列族都 flush 后才会删除老的 WAL 文件</p>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2022/05/25/java/lmax-disruptor/",
            "url": "https://ceilzcx.github.io/hexo-blog/2022/05/25/java/lmax-disruptor/",
            "title": "lmax-disruptor",
            "date_published": "2022-05-25T14:30:22.000Z",
            "content_html": "<h2 id=\"lmax-disruptor\"><a class=\"markdownIt-Anchor\" href=\"#lmax-disruptor\">#</a> LMAX Disruptor</h2>\n<h3 id=\"核心概念\"><a class=\"markdownIt-Anchor\" href=\"#核心概念\">#</a> 核心概念</h3>\n<ul>\n<li><strong>Ring Buffer</strong>：version3.0 后，环形缓存仅作为存储和更新数据（事件）</li>\n<li><strong>Sequence</strong>：序列作为识别组件位置，每个消费者维护一个自己的序列</li>\n<li><strong>Sequencer</strong>：序列器接口，有两个实现类（单生产者和多生产者），实现生产者和消费者快速传输的并发算法</li>\n<li><strong>Sequence Barrier</strong>：由  <code>Sequencer</code>  生产，包含对已发布  <code>Sequence</code>  的引用和任何依赖的消费者；也包含是否有数据需要被消费的逻辑</li>\n<li><strong>Wait Strategy</strong>：等待策略决定消费者如何等待事件的处理策略</li>\n<li><strong>Event</strong>：生产者到消费者传输的数据单位。事件完全由用户决定</li>\n<li><strong>Event Processor</strong>：主事件循环处理来自  <code>disruptor</code>  的事件，并拥有消费者序列的所有权</li>\n<li><strong>Event Handler</strong>：一个由用户实现的接口，作为  <code>disruptor</code>  的消费者</li>\n<li><strong>Producer</strong>：用户自己的代码调用  <code>disruptor</code>  进行排队</li>\n</ul>\n",
            "tags": [
                "java"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2022/03/09/mq/kafka/",
            "url": "https://ceilzcx.github.io/hexo-blog/2022/03/09/mq/kafka/",
            "title": "kafka",
            "date_published": "2022-03-09T20:02:22.000Z",
            "content_html": "<h2 id=\"kafka\"><a class=\"markdownIt-Anchor\" href=\"#kafka\">#</a> Kafka</h2>\n<blockquote>\n<p>发布 - 订阅模式的消息队列中间件</p>\n</blockquote>\n<p>what is 发布 - 订阅模式？生产者发送消息到消息队列，<strong>消费者轮询主动拉取消息</strong></p>\n<h3 id=\"优点\"><a class=\"markdownIt-Anchor\" href=\"#优点\">#</a> 优点</h3>\n<ul>\n<li>解耦：两边独立的修改和可扩展处理</li>\n<li>可恢复性：消息存在队列中，一部分系统挂了，也可以重启继续读取消息队列</li>\n<li>缓冲：解决生产者和消费者速度不一致问题</li>\n<li>削峰：防止流量猛增导致系统崩溃</li>\n<li>异步处理：等待指定时间后处理消息</li>\n</ul>\n<h3 id=\"速度快\"><a class=\"markdownIt-Anchor\" href=\"#速度快\">#</a> 速度快？</h3>\n<ul>\n<li>\n<p>页缓存</p>\n<p>保存在内存</p>\n<p>数据写入磁盘，采用  <code>write-back</code>  机制：先判断是否在页缓存中存在，不存在添加到页缓存，然后再向磁盘中写入。</p>\n</li>\n<li>\n<p>零拷贝：不需要 CPU 拷贝，通过 sendfile 实现 DMA 拷贝，上下文切换从四次变为两次</p>\n</li>\n</ul>\n",
            "tags": [
                "mq"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/12/14/git/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/12/14/git/",
            "title": "git",
            "date_published": "2021-12-14T18:38:15.000Z",
            "content_html": "<h3 id=\"git-init\"><a class=\"markdownIt-Anchor\" href=\"#git-init\">#</a> git init</h3>\n<blockquote>\n<p>初始化本地仓库，创建  <code>.git</code>  文件夹</p>\n</blockquote>\n<h3 id=\"git-add\"><a class=\"markdownIt-Anchor\" href=\"#git-add\">#</a> git add</h3>\n<blockquote>\n<p>将文件添加到暂存区</p>\n</blockquote>\n<h3 id=\"git-commit\"><a class=\"markdownIt-Anchor\" href=\"#git-commit\">#</a> git commit</h3>\n<blockquote>\n<p>将暂存区的文件提交到当前分支（本地仓库）</p>\n</blockquote>\n<h4 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> 常用命令</h4>\n<ul>\n<li><code>-m &lt;info&gt;</code> ：添加提交的说明</li>\n</ul>\n<h3 id=\"git-push\"><a class=\"markdownIt-Anchor\" href=\"#git-push\">#</a> git push</h3>\n<blockquote>\n<p>将当前分支的内容提交到远程分支</p>\n</blockquote>\n<ul>\n<li><code>-f</code> ：</li>\n</ul>\n<h3 id=\"git-log\"><a class=\"markdownIt-Anchor\" href=\"#git-log\">#</a> git log</h3>\n<blockquote>\n<p>查询提交的日志（按时间近到远排序），不包括已经被删除的 commit 记录和 reset 操作</p>\n</blockquote>\n<h4 id=\"常用命令-2\"><a class=\"markdownIt-Anchor\" href=\"#常用命令-2\">#</a> 常用命令</h4>\n<ul>\n<li><code>--pretty=oneline</code> ：只显示一行（id + 提交的信息）</li>\n</ul>\n<h3 id=\"git-reflog\"><a class=\"markdownIt-Anchor\" href=\"#git-reflog\">#</a> git reflog</h3>\n<blockquote>\n<p>显示所有的操作记录，包括提交和回退的操作</p>\n</blockquote>\n<h3 id=\"git-branch\"><a class=\"markdownIt-Anchor\" href=\"#git-branch\">#</a> git branch</h3>\n<blockquote>\n<p>查看本地所以分支</p>\n</blockquote>\n<ul>\n<li><code>-r</code> ：查看所有远程分支</li>\n<li><code>-d &lt;branch&gt;</code> ：删除指定 branch 分支</li>\n<li><code>--set-upstream-to=origin/dev</code> ：将本地 dev 和远程 dev 链接</li>\n</ul>\n<h3 id=\"git-fetch\"><a class=\"markdownIt-Anchor\" href=\"#git-fetch\">#</a> git fetch</h3>\n<blockquote>\n<p>更新远程的所有分支到本地</p>\n</blockquote>\n<h3 id=\"git-reset\"><a class=\"markdownIt-Anchor\" href=\"#git-reset\">#</a> git reset</h3>\n<blockquote>\n<p>版本回退</p>\n<p>git 的版本回退是将 hard 指针指向另一个版本，因此速度极快</p>\n</blockquote>\n<h4 id=\"常用命令-3\"><a class=\"markdownIt-Anchor\" href=\"#常用命令-3\">#</a> 常用命令</h4>\n<ul>\n<li><code>--hard &lt;commit id&gt;</code> ：id 为 commit id，可以通过  <code>git log</code>  或者  <code>git reflog</code>  查看，不需要补全全部，git 会自动去查找对应的 id。</li>\n<li><code>HEAD &lt;file&gt;</code> ：将暂存区的修改撤销，放回工作区</li>\n</ul>\n<h3 id=\"git-checkout\"><a class=\"markdownIt-Anchor\" href=\"#git-checkout\">#</a> git checkout</h3>\n<blockquote></blockquote>\n<h4 id=\"常用命令-4\"><a class=\"markdownIt-Anchor\" href=\"#常用命令-4\">#</a> 常用命令</h4>\n<ul>\n<li><code>-- &lt;file&gt;</code> ：把指定文件在工作区的修改全部撤销</li>\n<li><code>-b &lt;branch&gt;</code> ：创建并切换分支</li>\n</ul>\n<p>切换分支的原理：创建分支时创建一个新的指针指向当前分支的 Head（如果指定 commit id，指向对应的 commit 提交），切换分支就是将 Head 指向新的分支的指针</p>\n<h3 id=\"git-switch\"><a class=\"markdownIt-Anchor\" href=\"#git-switch\">#</a> git switch</h3>\n<blockquote>\n<p>切换、创建分支</p>\n</blockquote>\n<h4 id=\"常用命令-5\"><a class=\"markdownIt-Anchor\" href=\"#常用命令-5\">#</a> 常用命令</h4>\n<ul>\n<li><code>&lt;branch&gt;</code> ：切换分支，不存在的分支会报错</li>\n<li><code>-c &lt;branch&gt;</code> ：创建并切换分支</li>\n<li><code>-c &lt;branch&gt; &lt;commit id&gt;</code> ：以一个 commit 创建切换分支</li>\n</ul>\n<h3 id=\"git-merge\"><a class=\"markdownIt-Anchor\" href=\"#git-merge\">#</a> git merge</h3>\n<h4 id=\"常用命令-6\"><a class=\"markdownIt-Anchor\" href=\"#常用命令-6\">#</a> 常用命令</h4>\n<ul>\n<li><code>&lt;branch&gt;</code> ：把 branch 分支合并到当前分支（需要处理可能存在的冲突），默认会使用  <code>Fast forward</code>  （删除分支后，会丢掉分支的信息）模式</li>\n<li><code>--no-ff -m &lt;info&gt; &lt;branch&gt;</code> ：强制禁用  <code>Fast forward</code></li>\n</ul>\n<h3 id=\"git-stash\"><a class=\"markdownIt-Anchor\" href=\"#git-stash\">#</a> git stash</h3>\n<blockquote>\n<p>将工作区文件储藏</p>\n<p>当前分支开发到一半，不想或者说没法提交，需要切换分支</p>\n</blockquote>\n<h4 id=\"常用命令-7\"><a class=\"markdownIt-Anchor\" href=\"#常用命令-7\">#</a> 常用命令</h4>\n<ul>\n<li><code>apply</code> ：恢复 stash 储藏的文件，但是不删除 stash 的内容</li>\n<li><code>drop</code> ：删除 stash 的内容</li>\n<li><code>pop</code> ：apply + drop</li>\n<li><code>list</code> ：查看所有的 stash</li>\n</ul>\n<h3 id=\"git-cherry-pick\"><a class=\"markdownIt-Anchor\" href=\"#git-cherry-pick\">#</a> git cherry-pick</h3>\n<blockquote>\n<p>将一次提交所在的修改复制到当前分支</p>\n</blockquote>\n<h4 id=\"常用命令-8\"><a class=\"markdownIt-Anchor\" href=\"#常用命令-8\">#</a> 常用命令</h4>\n<ul>\n<li><code>&lt;commit id&gt;</code></li>\n</ul>\n<h3 id=\"git-remote\"><a class=\"markdownIt-Anchor\" href=\"#git-remote\">#</a> git remote</h3>\n<blockquote>\n<p>操作本地和远程的的关系</p>\n</blockquote>\n<h4 id=\"常见命令\"><a class=\"markdownIt-Anchor\" href=\"#常见命令\">#</a> 常见命令</h4>\n<ul>\n<li><code>add origin &lt;url&gt;</code> ：本地仓库与远程仓库绑定</li>\n<li><code>rm origin</code></li>\n</ul>\n<p><em>origin：可以当成远程仓库的别名，使用链接太过冗长。</em></p>\n<h3 id=\"git-rebase\"><a class=\"markdownIt-Anchor\" href=\"#git-rebase\">#</a> git rebase</h3>\n<blockquote>\n<p>将杂乱的 git log 梳理成一条直线（谨慎使用）</p>\n</blockquote>\n<h3 id=\"git-tag\"><a class=\"markdownIt-Anchor\" href=\"#git-tag\">#</a> git tag</h3>\n<blockquote>\n<p>为 commit 打上标签，使得查找更加方便</p>\n</blockquote>\n<h4 id=\"常用命令-9\"><a class=\"markdownIt-Anchor\" href=\"#常用命令-9\">#</a> 常用命令</h4>\n<ul>\n<li><code>&lt;name&gt;</code></li>\n<li><code>&lt;name&gt; &lt;commit id&gt;</code> ：为指定的 commit 打上 tag 标签</li>\n<li><code>-d &lt;name&gt;</code> ：删除特定的 tag 标签</li>\n</ul>\n<h3 id=\"git-show\"><a class=\"markdownIt-Anchor\" href=\"#git-show\">#</a> git show</h3>\n<blockquote>\n<p>查看标签的具体信息</p>\n</blockquote>\n<h4 id=\"常用命令-10\"><a class=\"markdownIt-Anchor\" href=\"#常用命令-10\">#</a> 常用命令</h4>\n<ul>\n<li><code>&lt;tag name&gt;</code></li>\n</ul>\n<h3 id=\"git-cherry-pick-2\"><a class=\"markdownIt-Anchor\" href=\"#git-cherry-pick-2\">#</a> git cherry-pick</h3>\n<blockquote>\n<p>将一个分支的 commit 转移到另一个分支</p>\n</blockquote>\n<h4 id=\"常用命令-11\"><a class=\"markdownIt-Anchor\" href=\"#常用命令-11\">#</a> 常用命令</h4>\n<ul>\n<li><code>&lt;commit hash&gt;</code> ：当前分支产生一个新的 commit</li>\n<li><code>&lt;branch&gt;</code> ：当前分支产生一个指定分支最新的 commit</li>\n</ul>\n<h3 id=\"git-submodule\"><a class=\"markdownIt-Anchor\" href=\"#git-submodule\">#</a> git submodule</h3>\n",
            "tags": []
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/10/29/big-data/big-data/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/10/29/big-data/big-data/",
            "title": "big-data",
            "date_published": "2021-10-29T14:23:31.000Z",
            "content_html": "<h2 id=\"大数据知识\"><a class=\"markdownIt-Anchor\" href=\"#大数据知识\">#</a> 大数据知识</h2>\n<h3 id=\"olap-和-oltp-的概念和比较\"><a class=\"markdownIt-Anchor\" href=\"#olap-和-oltp-的概念和比较\">#</a> OLAP 和 OLTP 的概念和比较</h3>\n<ul>\n<li>OLAP：联机分析处理。数据仓库的主要应用，支持复杂的数据操作。</li>\n<li>OLTP：连接事务处理。传统的关系型数据库的主要应用，主要是基本的事务处理。强调数据的实时性和内存效率，以及并发的操作</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>OLTP</th>\n<th>OLAP</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数据</td>\n<td>最新的数据</td>\n<td>历史数据；聚合、多维集成的数据</td>\n</tr>\n<tr>\n<td>工作单位</td>\n<td>事务</td>\n<td>查询</td>\n</tr>\n<tr>\n<td>时间</td>\n<td>实时性</td>\n<td>存在一定延迟</td>\n</tr>\n<tr>\n<td>应用</td>\n<td>数据库</td>\n<td>数据仓库</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"hadoop-hdfs-hive-hbase的关系\"><a class=\"markdownIt-Anchor\" href=\"#hadoop-hdfs-hive-hbase的关系\">#</a>  <code>Hadoop</code> 、 <code>HDFS</code> 、 <code>Hive</code> 、 <code>HBase</code>  的关系</h3>\n<ul>\n<li>\n<p><code>Hadoop</code> ：分布式计算的开源框架</p>\n</li>\n<li>\n<p><code>HDFS</code> ：分布式文件系统（ <code>Hadoop</code>  三大组件之一）</p>\n</li>\n<li>\n<p><code>Hive</code> ：存储处理数据的  <code>sql</code> ， <code>Hive</code>  会将  <code>sql</code>  转化为  <code>MapReduce</code>  程序。</p>\n<p>本身并不存储数据，完全依赖于  <code>HDFS</code>   和  <code>MapReduce</code> 。</p>\n</li>\n<li>\n<p><code>HBase</code> ：基于  <code>HDFS</code>  的数据库， <code>NoSQL</code>  数据库，用于海量数据数据（亿）的随机查询</p>\n<p>物理表，提供一个超大的内存  <code>Hash</code>  表，通过他存储索引，方便查询操作</p>\n</li>\n<li>\n<p><code>Sqoop</code> ：为  <code>HBase</code>  提供了方便的  <code>RDBMS</code>  数据导入功能，使得传统的数据向  <code>HBase</code>  迁移变得非常方便</p>\n</li>\n</ul>\n<p><img data-src=\"\" alt=\"hadoop.png\"></p>\n",
            "tags": [
                "大数据"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/10/28/big-data/hadoop/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/10/28/big-data/hadoop/",
            "title": "hadoop",
            "date_published": "2021-10-28T10:01:18.000Z",
            "content_html": "<h2 id=\"hadoop\"><a class=\"markdownIt-Anchor\" href=\"#hadoop\">#</a> Hadoop</h2>\n<blockquote>\n<p>Apache 下密集型数据分布式系统基础架构。</p>\n<p>实现海量数据的存储和分析计算</p>\n</blockquote>\n<p><strong>特点</strong></p>\n<ul>\n<li>高可靠性：多副本存储</li>\n<li>高拓展性：可以方便的动态拓展节点</li>\n<li>高效性：并行计算，汇总 —— MapReduce</li>\n<li>高容错性：自动分配失败的任务（一个节点的计算任务挂掉，会将该节点的计算子任务分配到另一个有该任务资源的节点上进行计算）</li>\n</ul>\n<h3 id=\"一-hdfs\"><a class=\"markdownIt-Anchor\" href=\"#一-hdfs\">#</a> 一、HDFS</h3>\n<blockquote>\n<p>分布式文件系统</p>\n</blockquote>\n<h4 id=\"namenode\"><a class=\"markdownIt-Anchor\" href=\"#namenode\">#</a> NameNode</h4>\n<blockquote>\n<p>存储文件的元数据（存储文件的信息，不存储数据）</p>\n</blockquote>\n<h4 id=\"datanode\"><a class=\"markdownIt-Anchor\" href=\"#datanode\">#</a> DataNode</h4>\n<blockquote>\n<p>存储文件块数据，以及数据的校验和</p>\n</blockquote>\n<h4 id=\"secondary-namenode-2nn\"><a class=\"markdownIt-Anchor\" href=\"#secondary-namenode-2nn\">#</a> Secondary NameNode (2NN)</h4>\n<blockquote>\n<p>NameNode 的数据备份（防止 NameNode 挂掉后，数据无法找到）</p>\n</blockquote>\n<h3 id=\"二-yarn\"><a class=\"markdownIt-Anchor\" href=\"#二-yarn\">#</a> 二、YARN</h3>\n<blockquote>\n<p>资源调度器</p>\n</blockquote>\n<h4 id=\"resourcemanager\"><a class=\"markdownIt-Anchor\" href=\"#resourcemanager\">#</a> ResourceManager</h4>\n<blockquote>\n<p>管理整个集群的资源（内存、CPU、磁盘、网络等）</p>\n</blockquote>\n<h4 id=\"nodemanager\"><a class=\"markdownIt-Anchor\" href=\"#nodemanager\">#</a> NodeManager</h4>\n<blockquote>\n<p>管理单个节点服务器资源</p>\n</blockquote>\n<h4 id=\"application-master\"><a class=\"markdownIt-Anchor\" href=\"#application-master\">#</a> Application Master</h4>\n<blockquote>\n<p>管理任务运行（任务在节点上运行）</p>\n</blockquote>\n<h4 id=\"container\"><a class=\"markdownIt-Anchor\" href=\"#container\">#</a> Container</h4>\n<blockquote>\n<p>容器（相当于任务运行的服务器），封装任务运行所需要的任务</p>\n</blockquote>\n",
            "tags": [
                "大数据"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/10/14/mq/RocketMQ/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/10/14/mq/RocketMQ/",
            "title": "RocketMQ",
            "date_published": "2021-10-14T16:38:36.000Z",
            "content_html": "<h2 id=\"设计架构\"><a class=\"markdownIt-Anchor\" href=\"#设计架构\">#</a> 设计架构</h2>\n<h3 id=\"producer\"><a class=\"markdownIt-Anchor\" href=\"#producer\">#</a> Producer</h3>\n<blockquote>\n<p>消息提供 / 发布者，支持分布式和集群部署</p>\n</blockquote>\n<p>通过  <code>NameServer</code> ，获取  <code>Broker</code>  路由信息，通过负载均衡模块选择对应的  <code>Broker</code>  集群队列，并发布消息。</p>\n<p>投递的过程支持快速失败并且低延迟。</p>\n<h3 id=\"consumer\"><a class=\"markdownIt-Anchor\" href=\"#consumer\">#</a> Consumer</h3>\n<blockquote>\n<p>消息消费者，支持分布式和集群部署</p>\n</blockquote>\n<p>支持 push /pull 进行消费；支持集群（默认消费模式）和广播形式消费</p>\n<ul>\n<li>集群模式：同一个  <code>ConsumerGroup</code>  下，一条消息消费一次</li>\n<li>广播模式：同一个  <code>ConsumerGroup</code>  下，一条消息每个实例都消费一次</li>\n</ul>\n<p>实时消息订阅（订阅 topic）</p>\n<h3 id=\"nameserver\"><a class=\"markdownIt-Anchor\" href=\"#nameserver\">#</a> NameServer</h3>\n<blockquote>\n<p>topic 路由注册中心，（类似 dubbo 的 zookeeper），支持 broker 的注册和发现</p>\n</blockquote>\n<p><strong>AP 的设计：Availability（可用性）+ Partition Tolerance（分区容错性）</strong></p>\n<p><code>NameServer</code>  <strong>节点之间并不通信</strong>，各个时刻数据没法保持一致（不遵循 Consistency（一致性））</p>\n<p><strong>Broker 管理</strong>：接受 Broker 集群注册信息并保存作为路由信息的基本数据</p>\n<p><strong>提供健康检查</strong>：检查 Broker 是否存活</p>\n<p><em>每个  <code>NameServer</code>  将保存关于 Broker 集群的整个路由信息和用于客户端查询的队列信息，然后  <code>Producer</code>  和  <code>Conumser</code>  通过  <code>NameServer</code>  就可以知道整个 Broker 集群的路由信息，从而进行消息的投递和消费。</em></p>\n<p>如何注册 topic？</p>\n<ul>\n<li>\n<p>手动创建，指定对应的 broker 和消息队列数量进行创建</p>\n</li>\n<li>\n<p>自动创建</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">autoCreateTopicEnable = true</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>生产发送消息时，如果指定的 Topic 不存在， <code>NameServer</code>  会返回一个【默认主题： <code>TBW102</code> 】的路由信息，使得生产者能够正常发生消息</p>\n</li>\n<li>\n<p>Broker 收到消息后，发现消息对应 Topic 不存在，且 Broker 允许自动创建 Topic，则会为消息创建 Topic ，并定时把路由信息同步至  <code>NameServer</code></p>\n</li>\n<li>\n<p>生产者也会定时从  <code>NameServer</code>  同步最新的路由信息，缓存至本地</p>\n</li>\n<li>\n<p>后续生产者发送消息时，就可以从本地的缓存中查询到对应 Topic 的路由信息了</p>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"brokerserver\"><a class=\"markdownIt-Anchor\" href=\"#brokerserver\">#</a> BrokerServer</h3>\n<blockquote>\n<p>broker 主要负责消息的存储、传递和查询以及服务高可用保证</p>\n</blockquote>\n<p>broker 分为 Master 和 Slave，对应关系通过相同  <code>BrokerName</code> ，不同的  <code>BrokerId</code>  来定义， <code>BrokerId = 0</code>  表示 Master；broker 支持一主多从，但是<strong>只有  <code>brokerId = 1</code>  的从服务器才会参与消息的读负载</strong> 。</p>\n<p>broker 定时将 topic 信息注册到  <code>NameServer</code></p>\n<h3 id=\"topic和tag\"><a class=\"markdownIt-Anchor\" href=\"#topic和tag\">#</a> Topic 和 Tag</h3>\n<ul>\n<li>topic 为 消费 和 提供者 订阅的一种主题</li>\n<li>tag 为 topic 更细粒度的一种划分。例：topic = order，你想要获取不同类型的订单，可以定义不同的 tag</li>\n</ul>\n<h2 id=\"网络部署\"><a class=\"markdownIt-Anchor\" href=\"#网络部署\">#</a> 网络部署</h2>\n<h3 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\">#</a> 特点</h3>\n<ul>\n<li>Producer 与  <code>NameServer</code>  集群的一个节点建立连接（随机），获取 topic 路由信息，与<strong> Master</strong> 建立长连接，并定时发送心跳</li>\n<li>Consumer 与  <code>NameServer</code>  集群的一个节点建立连接（随机），获取 topic 路由信息，与<strong> Master 和 Slave</strong> 建立长连接，并定时发送心跳</li>\n</ul>\n<h3 id=\"启动流程\"><a class=\"markdownIt-Anchor\" href=\"#启动流程\">#</a> 启动流程</h3>\n<ul>\n<li>NameServer 启动，等待 Broker、Producer、Consumer 连接</li>\n<li>Broker 启动，跟所有的 NameServer 保持长连接，定时发送心跳包。心跳包中包含当前 Broker 信息 (IP + 端口等) 以及存储所有 Topic 信息。注册成功后，NameServer 集群中就有 Topic 跟 Broker 的映射关系。</li>\n<li>收发消息前，先创建 Topic，创建 Topic 时需要指定该 Topic 要存储在哪些 Broker 上，也可以在发送消息时自动创建 Topic。</li>\n<li>Producer 发送消息，启动时先跟 NameServer 集群中的其中一台建立长连接，并从 NameServer 中获取当前发送的 Topic 存在哪些 Broker 上，轮询从队列列表中选择一个队列，然后与队列所在的 Broker 建立长连接从而向 Broker 发消息。</li>\n<li>Consumer 跟 Producer 类似，跟其中一台 NameServer 建立长连接，获取当前订阅 Topic 存在哪些 Broker 上，然后直接跟 Broker 建立连接通道，开始消费消息。</li>\n</ul>\n<h2 id=\"消息传输\"><a class=\"markdownIt-Anchor\" href=\"#消息传输\">#</a> 消息传输</h2>\n<h3 id=\"消息刷盘\"><a class=\"markdownIt-Anchor\" href=\"#消息刷盘\">#</a> 消息刷盘</h3>\n<ul>\n<li>同步刷盘：等待数据保存到磁盘，broker 返回成功的 ACK 响应</li>\n<li>异步刷盘：数据加载到 PageCache，就返回成功的 ACK 响应，启动一个新的新的进程将 PageCache 加载到磁盘</li>\n</ul>\n<h3 id=\"消息重复\"><a class=\"markdownIt-Anchor\" href=\"#消息重复\">#</a> 消息重复</h3>\n<h4 id=\"补充qos\"><a class=\"markdownIt-Anchor\" href=\"#补充qos\">#</a> 补充：QOS</h4>\n<blockquote>\n<p>Quality of Service，服务质量</p>\n</blockquote>\n<ul>\n<li>至少一次（at least once）</li>\n<li>最多一次（at most once）</li>\n<li>仅一次（Exactly once）</li>\n</ul>\n<p><strong>rocketMQ 支持 at least one</strong>，因此可能存在重复数据</p>\n<h3 id=\"回溯消费\"><a class=\"markdownIt-Anchor\" href=\"#回溯消费\">#</a> 回溯消费</h3>\n<p>注：fllink 中 end back 使用的 ？</p>\n<p>已经消费成功的消息，业务需要回退重新消费，通过时间维度回退（精确到毫秒）</p>\n<h3 id=\"定时消息\"><a class=\"markdownIt-Anchor\" href=\"#定时消息\">#</a> 定时消息</h3>\n<p><strong>定时消息（延迟队列）是指消息发送到 broker 后，不会立即被消费，等待特定时间投递给真正的 topic</strong>。 broker 有配置项 <code>messageDelayLevel</code> ，默认值为 <code>1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h</code> ，18 个 level。</p>\n<h3 id=\"消息回查和消息重试\"><a class=\"markdownIt-Anchor\" href=\"#消息回查和消息重试\">#</a> 消息回查和消息重试</h3>\n<ul>\n<li>消息回查针对 Producer。用于事务的  <code>Haslf Message</code> ，默认回查 15 次。</li>\n<li>消息重试针对 Consumer。Comsumer 消费成功后需要返回  <code>Broker</code>  一个确认消息，<strong>如果没有返回则  <code>Broker</code>  认为这条消息消费失败，失败后会再重试消费该消息，默认重试 16 次</strong></li>\n</ul>\n<h3 id=\"死信消息\"><a class=\"markdownIt-Anchor\" href=\"#死信消息\">#</a> 死信消息</h3>\n<p>消息重试失败后，保持无法正常消费的消息。可以通过 console 控制台对死信队队列的消息进行重发。</p>\n<h3 id=\"消息顺序\"><a class=\"markdownIt-Anchor\" href=\"#消息顺序\">#</a> 消息顺序</h3>\n<p>部分消息按照业务需求需要按顺序进行消费。例：订单状态：订单创建 → 订单付款 → 订单完成</p>\n<ul>\n<li>分区顺序：根据 Sharding key 进行区块区分。可以采用 id 取 hash 放入不同的 消息队列，对消息队列进行先入先出操作，不同 id 之间互不影响</li>\n<li>全局顺序：指定 topic 下的所有消息按照先入先出（FIFO）进行发布和消费。适用性不高</li>\n</ul>\n<h3 id=\"消息过滤\"><a class=\"markdownIt-Anchor\" href=\"#消息过滤\">#</a> 消息过滤</h3>\n<p>通过 tag 进行消息过滤。消息过滤在 broker 实现，减少对 consumer 的网络传输，缺点增加 broker 负担，同时实现困难。</p>\n<h2 id=\"源码解析\"><a class=\"markdownIt-Anchor\" href=\"#源码解析\">#</a> 源码解析</h2>\n<p><img data-src=\"struct.png\" alt=\"代码结构\"></p>\n<h3 id=\"acl\"><a class=\"markdownIt-Anchor\" href=\"#acl\">#</a> acl</h3>\n<h3 id=\"broker\"><a class=\"markdownIt-Anchor\" href=\"#broker\">#</a> broker</h3>\n<h3 id=\"client\"><a class=\"markdownIt-Anchor\" href=\"#client\">#</a> client</h3>\n<p>rocketMQ 客户端实现</p>\n<h4 id=\"producer-2\"><a class=\"markdownIt-Anchor\" href=\"#producer-2\">#</a> Producer</h4>\n<p><img data-src=\"client-producer.PNG\" alt=\"client-producer\"></p>\n<p>主要逻辑在 package：producer 和 impl，真正的实现还是需要远程访问，需要用到 remoting 模块。</p>\n<h3 id=\"filter\"><a class=\"markdownIt-Anchor\" href=\"#filter\">#</a> filter</h3>\n<blockquote>\n<p>消息过滤，在 broker 和 consumer 中间加入了 filter 代理，主要有 broker 负责</p>\n</blockquote>\n<h3 id=\"namesrv\"><a class=\"markdownIt-Anchor\" href=\"#namesrv\">#</a> namesrv</h3>\n<p><code>NamesrvStartup</code>  是  <code>namesrv</code>  的启动类，具体的实现类为  <code>NamesrvController</code>  。</p>\n<p>create NamesrvController （create NamesrvConfig、create NettyServerConfig）</p>\n<p>NamesrvController（initialize、start）</p>\n<p><img data-src=\"namesrv.png\" alt=\"namesrv\"></p>\n<h3 id=\"remoting\"><a class=\"markdownIt-Anchor\" href=\"#remoting\">#</a> remoting</h3>\n<blockquote>\n<p>基于 netty 的底层通信实现</p>\n</blockquote>\n<h4 id=\"netty\"><a class=\"markdownIt-Anchor\" href=\"#netty\">#</a> netty</h4>\n<p>NettyRemotingServer /  NettyRemotingClient</p>\n<ul>\n<li>\n<p>read request 通过 InboundHandler 实现</p>\n</li>\n<li>\n<p>process request -&gt; response</p>\n<p>通过  <code>RequestProcessor</code>  接口，这样不同模块可以编写自己的实现类去转换 request</p>\n</li>\n<li>\n<p>write response 通过 writeAndFlush () 实现</p>\n</li>\n</ul>\n<h4 id=\"protocol\"><a class=\"markdownIt-Anchor\" href=\"#protocol\">#</a> protocol</h4>\n<blockquote>\n<p>协议相关实现，对应  <code>RemotingCommand</code></p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>length</th>\n<th>head length</th>\n<th>head data</th>\n<th>body data</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>4 byte</td>\n<td>4 byte</td>\n<td>head length</td>\n<td>length？</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"运行逻辑\"><a class=\"markdownIt-Anchor\" href=\"#运行逻辑\">#</a> 运行逻辑</h4>\n<ul>\n<li>client 封装 RemotingCommand 类，将消息传输给 Server。消息传输在  <code>AbstractNettyRemoting.invokeSyncImpl</code>  中</li>\n<li>Server 通过 channel 获取消息，再通过  <code>AbstractNettyRemoting.processRequestMessage</code>  将 request 转换为 response，并将结果发送回 client</li>\n<li>client 通过 channel 获取消息，再通过  <code>AbstractNettyRemoting.processResponseMessage</code>  处理返回的结果，获取结果执行其他逻辑。</li>\n</ul>\n<h3 id=\"srvutil\"><a class=\"markdownIt-Anchor\" href=\"#srvutil\">#</a> srvutil</h3>\n<blockquote>\n<p>解析命令行的工具类  <code>ServerUtil</code></p>\n</blockquote>\n<h3 id=\"store\"><a class=\"markdownIt-Anchor\" href=\"#store\">#</a> store</h3>\n<blockquote>\n<p>存储层实现，同时包括了索引服务，高可用 HA 服务实现</p>\n</blockquote>\n<p><code>ConsumeQueue</code>  <strong>不负责存储消息</strong>，只是负责记录它所属 Topic 的消息在 CommitLog 中的偏移量。</p>\n<p><code>DefaultMessageStore</code>  类下  <code>ReputMessageService</code>  的  <code>doReput</code>  ，每隔 1 毫秒循环，通知  <code>ConsumerQueue</code>  进行更新</p>\n<h4 id=\"顺序存储\"><a class=\"markdownIt-Anchor\" href=\"#顺序存储\">#</a> 顺序存储</h4>\n<p>由于  <code>Rocketmq</code>  的信息是存储到文件的，硬盘的存储和读取效率会低于内存，同时顺序读写和随机读写的效率相差极大（顺序写的速度好像比随机写快了千倍）， <code>DefaultMessageStore</code>  也是通过顺序读写实现的，Java 的顺序读写通过  <code>RandomAccessFile</code>  类实现。</p>\n<h3 id=\"tools\"><a class=\"markdownIt-Anchor\" href=\"#tools\">#</a> tools</h3>\n<blockquote>\n<p>mq 集群管理工具，提供了消息查询等功能</p>\n</blockquote>\n<h3 id=\"疑问\"><a class=\"markdownIt-Anchor\" href=\"#疑问\">#</a> 疑问</h3>\n<ul>\n<li><code>rocketmq-namesrv</code>  模块中  <code>KVConfingManager</code>  的作用？</li>\n<li><code>rocketmq-store</code>  模块中，一个 topic 对应多个 Queue</li>\n</ul>\n",
            "tags": [
                "消息队列"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/10/12/database/database/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/10/12/database/database/",
            "title": "database",
            "date_published": "2021-10-12T11:06:30.000Z",
            "content_html": "<h2 id=\"build-a-simple-database\"><a class=\"markdownIt-Anchor\" href=\"#build-a-simple-database\">#</a> build a simple database</h2>\n<h3 id=\"一-设计结构\"><a class=\"markdownIt-Anchor\" href=\"#一-设计结构\">#</a> 一、设计结构</h3>\n<h4 id=\"1tokenizer\"><a class=\"markdownIt-Anchor\" href=\"#1tokenizer\">#</a> 1） <code>Tokenizer</code></h4>\n<p>拆分语法</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9zaGFyZGluZ3NwaGVyZS5hcGFjaGUub3JnL2RvY3VtZW50L2N1cnJlbnQvY24vZmVhdHVyZXMvc2hhcmRpbmcvcHJpbmNpcGxlL3BhcnNlLw==\">解析引擎 :: ShardingSphere (apache.org)</span></p>\n<p>涉及到 AST（抽象语法树）</p>\n<p>词法分析：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXIuYWxpeXVuLmNvbS9hcnRpY2xlLzcxOTc5\">https://developer.aliyun.com/article/71979</span></p>\n<p>不采用纯手写，使用第三方工具：</p>\n<ul>\n<li>\n<p><code>antlr</code> ：自动生成语法树的开源语法分析器，可以适用 Java、C、C++ 等多语言。</p>\n</li>\n<li>\n<p><code>yacc/lex</code> ：参考 <a href=\"https://github.com/westes/flex/\"> <code>Github</code> </a></p>\n</li>\n</ul>\n<h4 id=\"2parser\"><a class=\"markdownIt-Anchor\" href=\"#2parser\">#</a> 2）Parser</h4>\n<p>解析语法</p>\n<p>prepare_statement()</p>\n<p>美团使用 SQL 解析：<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNzA5MzQ2Mw==\">https://zhuanlan.zhihu.com/p/37093463</span></p>\n<h4 id=\"3code-generator\"><a class=\"markdownIt-Anchor\" href=\"#3code-generator\">#</a> 3）Code Generator</h4>\n<p>execute_statement()</p>\n<h4 id=\"4存储结构\"><a class=\"markdownIt-Anchor\" href=\"#4存储结构\">#</a> 4）存储结构</h4>\n<p>内存型：Map</p>\n<p>MongoDB：JSON</p>\n<p>MySQL：B-Tree</p>\n<h4 id=\"5pager\"><a class=\"markdownIt-Anchor\" href=\"#5pager\">#</a> 5）Pager</h4>\n<p>disk 的分页机制，可以参考 MySQL</p>\n<h4 id=\"6os和disk\"><a class=\"markdownIt-Anchor\" href=\"#6os和disk\">#</a> 6）OS 和 disk</h4>\n<h3 id=\"二-设计的难题\"><a class=\"markdownIt-Anchor\" href=\"#二-设计的难题\">#</a> 二、设计的难题</h3>\n<ul>\n<li>\n<p>如何拆分？空格分隔、分号结束</p>\n</li>\n<li>\n<p>解析</p>\n</li>\n<li>\n<p>data 如何存到 disk</p>\n<p>MySQL 采取两个文件存储：一个存放表结构；一个存放表数据</p>\n<p>数据分页、数据检查（check）</p>\n</li>\n<li>\n<p>log 日志</p>\n</li>\n<li>\n<p>事物提交和回滚</p>\n</li>\n<li>\n<p>集群</p>\n</li>\n</ul>\n<h3 id=\"三-思路\"><a class=\"markdownIt-Anchor\" href=\"#三-思路\">#</a> 三、思路</h3>\n<ul>\n<li><code>Tokenizer</code>  和  <code>AST</code>  设计难度偏大，不如采取类似  <code>elastic search</code>  的形式，采取  <code>RestFul</code>  +  <code>JSON</code>  的形式，这样不要考虑词法和解析，而且  <code>GET</code> ， <code>POST</code> ， <code>DELETE</code> ， <code>UPDATE</code>  和数据库的增删改查操作正好对应。</li>\n<li>借鉴  <code>MongoDB</code></li>\n</ul>\n<h3 id=\"四-数据库规则\"><a class=\"markdownIt-Anchor\" href=\"#四-数据库规则\">#</a> 四、数据库规则</h3>\n<h4 id=\"41-数据库和表操作\"><a class=\"markdownIt-Anchor\" href=\"#41-数据库和表操作\">#</a> 4.1、数据库和表操作</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"title function_\">list</span>()\t\t\t\t\t<span class=\"comment\">// 获取所有database</span></span><br><span class=\"line\">db.<span class=\"title function_\">create</span>(<span class=\"string\">&#x27;demo&#x27;</span>, &#123;&#125;)\t\t<span class=\"comment\">// 创建database，第二个参数为config (定义编码等)</span></span><br><span class=\"line\">db.<span class=\"title function_\">tableList</span>()\t\t\t\t<span class=\"comment\">// 获取所有table</span></span><br><span class=\"line\">db.<span class=\"title function_\">createTable</span>(<span class=\"string\">&#x27;demo&#x27;</span>, &#123;&#125;)  <span class=\"comment\">// 创建table，第二个参数为config (定义编码等)</span></span><br><span class=\"line\">db.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;test&#x27;</span>)\t\t\t\t<span class=\"comment\">// 使用test数据库</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"42-数据操作\"><a class=\"markdownIt-Anchor\" href=\"#42-数据操作\">#</a> 4.2、数据操作</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">db.<span class=\"title function_\">table</span>(<span class=\"string\">&#x27;test&#x27;</span>).<span class=\"title function_\">select</span>(&#123;&#125;)\t\t\t\t\t\t\t<span class=\"comment\">// 查询</span></span><br><span class=\"line\">db.<span class=\"title function_\">table</span>(<span class=\"string\">&#x27;test&#x27;</span>).<span class=\"title function_\">insertOne</span>(&#123;&#125;)\t\t\t\t\t\t<span class=\"comment\">// 添加一条</span></span><br><span class=\"line\">db.<span class=\"title function_\">table</span>(<span class=\"string\">&#x27;test&#x27;</span>).<span class=\"title function_\">insertMany</span>([])\t\t\t\t\t\t<span class=\"comment\">// 批量添加</span></span><br><span class=\"line\">db.<span class=\"title function_\">table</span>(<span class=\"string\">&#x27;test&#x27;</span>).<span class=\"title function_\">updateOne</span>(&#123;&#125;, &#123;<span class=\"attr\">$set</span>:&#123;&#125;&#125;)\t\t\t<span class=\"comment\">// 修改一条</span></span><br><span class=\"line\">db.<span class=\"title function_\">table</span>(<span class=\"string\">&#x27;test&#x27;</span>).<span class=\"title function_\">updateMany</span>(&#123;&#125;, &#123;<span class=\"attr\">$set</span>:&#123;&#125;&#125;)\t\t\t<span class=\"comment\">// 批量修改</span></span><br><span class=\"line\">db.<span class=\"title function_\">table</span>(<span class=\"string\">&#x27;test&#x27;</span>).<span class=\"title function_\">deleteOne</span>(&#123;&#125;)\t\t\t\t\t\t<span class=\"comment\">// 删除一条</span></span><br><span class=\"line\">db.<span class=\"title function_\">table</span>(<span class=\"string\">&#x27;test&#x27;</span>).<span class=\"title function_\">deleteMany</span>(&#123;&#125;)\t\t\t\t\t\t<span class=\"comment\">// 删除全部</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"五-数据库结构\"><a class=\"markdownIt-Anchor\" href=\"#五-数据库结构\">#</a> 五、数据库结构</h3>\n<h4 id=\"参考-mongodb\"><a class=\"markdownIt-Anchor\" href=\"#参考-mongodb\">#</a> 参考  <code>MongoDB</code></h4>\n<p>数据 —— disk 和缓存</p>\n<p>线程一：接收  <code>JavaScript</code>  解析的语句，执行操作，操作缓存</p>\n<p>线程二：将缓存的数据生成  <code>journal</code> ，保存在硬盘，频率  <code>100ms</code>  一次</p>\n<p>线程三：将日志数据同步到硬盘数据区，频率  <code>60s</code>  一次</p>\n<h4 id=\"参考-mysql\"><a class=\"markdownIt-Anchor\" href=\"#参考-mysql\">#</a> 参考  <code>MySQL</code></h4>\n<p>数据存储应该没有缓存的概念，数据直接存储到硬盘。</p>\n<p>查询的优化：创建索引（B+Tree）、<strong>页结构</strong></p>\n<p>一个数据库就是一个文件夹：一张表有两个文件，一张记录表定义（ <code>.frm</code> ），一张保存数据（ <code>.idb</code> ）</p>\n<h4 id=\"参考-redis\"><a class=\"markdownIt-Anchor\" href=\"#参考-redis\">#</a> 参考  <code>Redis</code></h4>\n<p>redis 有持久化机制 —— RDB 和 AOF</p>\n<p>RDB：将缓存数据复制一份一模一样的，另起一个线程保存到磁盘。（数据存在延迟，而且同步一份，需要很多内容）</p>\n<p>AOF：将操作以日志的方式记录。（次、秒、不记录）</p>\n<h4 id=\"参考-sqlite\"><a class=\"markdownIt-Anchor\" href=\"#参考-sqlite\">#</a> 参考  <code>sqlite</code></h4>\n<p>一个数据库对应一个文件，文件划分为大小一致的页面。</p>\n<p>通过 B 树和二维链表。页面作为 B 树的叶子节点或者链表的节点</p>\n<h3 id=\"其他参考资料\"><a class=\"markdownIt-Anchor\" href=\"#其他参考资料\">#</a> 其他（参考资料）</h3>\n<ul>\n<li>\n<p>MySQL（查询）缓存机制，默认开启，<strong>不建议使用</strong>，对 select 语句进行 Hash 计算并存储，Query Hash 存储 hash 值和结果地址。</p>\n<p>1、使用 hash，必须保证完全一致，大小写也会使得 Hash 结果不一致</p>\n<p>2、表中任何数据或者结构变化都会情况表相关所有缓存</p>\n<p>3、通过 session 保存，多个 client 可以共享同一个缓存</p>\n</li>\n<li></li>\n</ul>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/10/09/big-data/Flink/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/10/09/big-data/Flink/",
            "title": "Flink",
            "date_published": "2021-10-09T15:10:11.000Z",
            "content_html": "<h2 id=\"what-is-flink\"><a class=\"markdownIt-Anchor\" href=\"#what-is-flink\">#</a> what is Flink？</h2>\n<blockquote>\n<p><strong>分布式</strong> 处理引擎</p>\n</blockquote>\n<h3 id=\"流\"><a class=\"markdownIt-Anchor\" href=\"#流\">#</a> 流</h3>\n<blockquote>\n<p>无边界 / 有边界 的 <strong>有状态</strong> 的计算</p>\n</blockquote>\n<ul>\n<li><strong>无边界</strong>：只定义开始，没有结束，数据摄入后立即执行（输入无限）</li>\n<li><strong>有边界</strong>：定义开始和结束。可以数据摄入后立即立即执行（<strong>实时</strong>），也可以等待全部输入（存储在存储引擎中）后批量执行（<strong>历史记录</strong>）</li>\n</ul>\n<p>任务 —— 并行处理</p>\n<h3 id=\"状态\"><a class=\"markdownIt-Anchor\" href=\"#状态\">#</a> 状态</h3>\n<blockquote>\n<p>只有在每一个单独的事件上进行转换操作的应用才不需要状态</p>\n</blockquote>\n<ul>\n<li><strong>多种状态基础类型</strong>：数据类型（value、map、list 等）</li>\n<li><strong> <code>State Backend</code> </strong>：管理状态。内存 /  <code>RocksDB</code></li>\n<li><strong>精确一次语义</strong>：处理故障，保证状态一致性</li>\n<li><strong>超大数据量状态</strong>：利用其异步以及增量式的 checkpoint 算法，存储数 TB 级别的应用状态。</li>\n<li><strong>可弹性伸缩的应用</strong>：在更多或更少的工作节点上对状态进行重新分布，支持有状态应用的分布式的横向伸缩。</li>\n</ul>\n<h3 id=\"时间\"><a class=\"markdownIt-Anchor\" href=\"#时间\">#</a> 时间</h3>\n<blockquote>\n<p>事件总是在特定时间点发生，所以大多数的事件流都拥有事件本身所固有的时间语义</p>\n</blockquote>\n<ul>\n<li>\n<p><strong>事件时间模式</strong>：本身自带的时间戳进行结果的计算。保证准确性和一致性</p>\n<p>为什么自带时间戳？例如窗口模式，将同一个范围的时间戳放在一个 bucket 里面</p>\n</li>\n<li>\n<p><strong>Watermark 支持</strong>：衡量事件时间进展。平衡处理延时和完整性的灵活机制（Future）</p>\n<p>什么是 watermark？简单的举例：时间戳为 1-10 的数据按顺序进入 task Manager 执行，如果按照 5 的范围设置，那么等到 5 的时间戳到达说明 1-5 的数据都已经拿到，关闭对应的 bucket，执行任务；但是数据存在乱序的可能，可能 5 的数据已经拿到，但是 3 的数据在后面，如果关闭了 bucket 那么 3 的数据就丢失，因此可以通过设置 watermark，如果设置 watermark 为 2，拿到 5 的数据时，判断 5-2=3，不关闭 bucket，等到拿到 7 的数据关闭 1-5 的 bucket。因此设置合理的 watermark 可以解决大部分低延迟的数据。</p>\n</li>\n<li>\n<p><strong>迟到数据处理</strong>：当以带有 watermark 的事件时间模式处理数据流时，在计算完成之后仍会有相关数据到达。这样的事件被称为迟到事件。Flink 提供了多种处理迟到数据的选项，例如将这些数据重定向到旁路输出（side output）或者更新之前完成计算的结果。</p>\n</li>\n<li>\n<p><strong>处理时间模式</strong>：处理时间语义。处理时间模式根据处理引擎的机器时钟触发计算，一般适用于有着严格的低延迟需求，并且能够容忍近似结果的流处理应用。</p>\n</li>\n</ul>\n<h3 id=\"分层-api\"><a class=\"markdownIt-Anchor\" href=\"#分层-api\">#</a> 分层 API</h3>\n<ul>\n<li>High-level Analytics API：只需要写 SQL / Table API</li>\n<li>DataStream API：写数据流和批处理，可以调用 streams 和 windows</li>\n<li>ProcessFunction：Stateful Event-Driven Applications，可以调用 events、state 和 time</li>\n</ul>\n<h3 id=\"运行架构\"><a class=\"markdownIt-Anchor\" href=\"#运行架构\">#</a> 运行架构</h3>\n<h4 id=\"作业管理器jobmanager\"><a class=\"markdownIt-Anchor\" href=\"#作业管理器jobmanager\">#</a> 作业管理器（JobManager）</h4>\n<h3 id=\"流处理\"><a class=\"markdownIt-Anchor\" href=\"#流处理\">#</a> 流处理</h3>\n<h4 id=\"特点\"><a class=\"markdownIt-Anchor\" href=\"#特点\">#</a> 特点</h4>\n<ul>\n<li>event：事件触发，具有极强的时间性（事件发生、事件进入、事件处理时间 等）</li>\n<li>Stream：事件流，无界</li>\n<li>Process：流处理，</li>\n</ul>\n<h3 id=\"双流join操作\"><a class=\"markdownIt-Anchor\" href=\"#双流join操作\">#</a> 双流 Join 操作</h3>\n<ul>\n<li>join()</li>\n<li>coGroup()</li>\n<li>intervalJoin()</li>\n</ul>\n<h4 id=\"1-join\"><a class=\"markdownIt-Anchor\" href=\"#1-join\">#</a> 1、join()</h4>\n<blockquote>\n<p>对应 mysql 的 inner join</p>\n</blockquote>\n<p>通过一个窗口，进行 join 操作，简单易用。</p>\n<p>存在问题：一个流的数据存在延迟时，另一个流的数据没有对应的 join 数据。</p>\n<h4 id=\"2-cogroup\"><a class=\"markdownIt-Anchor\" href=\"#2-cogroup\">#</a> 2、coGroup()</h4>\n<blockquote>\n<p>对应 mysql 的 left/right outer join</p>\n</blockquote>\n<p>双重循环</p>\n<h4 id=\"3-intervaljoin\"><a class=\"markdownIt-Anchor\" href=\"#3-intervaljoin\">#</a> 3、intervalJoin()</h4>\n<p>按照指定字段以及右流相对左流偏移的时间区间进行关联，即：</p>\n<blockquote>\n<p>right.timestamp ∈ [left.timestamp + lowerBound; left.timestamp + upperBound]</p>\n</blockquote>\n<h2 id=\"架构和源码\"><a class=\"markdownIt-Anchor\" href=\"#架构和源码\">#</a> 架构和源码</h2>\n<h3 id=\"flink-connector-jdbc\"><a class=\"markdownIt-Anchor\" href=\"#flink-connector-jdbc\">#</a> flink-connector-jdbc</h3>\n<h4 id=\"upsert\"><a class=\"markdownIt-Anchor\" href=\"#upsert\">#</a> upsert</h4>\n<p>作为 sink 向外部数据库写入数据时，如果使用 DDL 定义的主键，连接器将在 upsert 模式下操作（需要保证幂等性），否则使用 append 操作（这时插入主键相同的数据会出现主键冲突的异常）。</p>\n<h4 id=\"cache\"><a class=\"markdownIt-Anchor\" href=\"#cache\">#</a> cache</h4>\n<p>JDBC 可以在临时连接中用作查找源。</p>\n<p>默认情况下，不确定缓存查找。可以设置  <code>lookup.cache.max-rows</code>  和  <code>lookup.cache.ttl</code>  设置启动它.</p>\n<p>使用缓存存在数据不是最新的问题，因此需要合理设置最大行和过期时间。</p>\n<h4 id=\"catalog\"><a class=\"markdownIt-Anchor\" href=\"#catalog\">#</a>  <code>catalog</code></h4>\n<blockquote>\n<p>目录</p>\n</blockquote>\n<p>将 database → table 的形式转出类似目录的形式</p>\n<h4 id=\"dialect\"><a class=\"markdownIt-Anchor\" href=\"#dialect\">#</a>  <code>dialect</code></h4>\n<blockquote>\n<p>方言，不同 JDBC 语法的差异</p>\n</blockquote>\n<p>upsert 操作参考： <code>JdbcDialect.getUpsertStatement</code></p>\n<h4 id=\"table\"><a class=\"markdownIt-Anchor\" href=\"#table\">#</a> table</h4>\n<p>Source、Sink、Function</p>\n<p>TableSchema 在 table-common 包中</p>\n<h4 id=\"packageversion113\"><a class=\"markdownIt-Anchor\" href=\"#packageversion113\">#</a> package(version：1.13)</h4>\n<p>maven 包可能不存在，在  <code>settings.xml</code>  添加国际镜像</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;mirror&gt;</span><br><span class=\"line\">\t&lt;id&gt;mapr-public&lt;/id&gt;</span><br><span class=\"line\">\t&lt;mirrorOf&gt;mapr-releases&lt;/mirrorOf&gt;</span><br><span class=\"line\">\t&lt;name&gt;mapr-releases&lt;/name&gt;</span><br><span class=\"line\">\t&lt;url&gt;https://maven.aliyun.com/repository/mapr-public&lt;/url&gt;</span><br><span class=\"line\">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure>\n<p>打包执行  <code>mvn clean install -DskipTests -Dfast -T 4 -Drat.skip=true </code>  ，最后一句一定要加，用来跳过 license，不然会报下面错误</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Failed to execute goal org.apache.rat:apache-rat-plugin:0.12:check (default) on project flink-parent: Too many files with unapproved license: 4 See RAT report in: D:<span class=\"keyword\">\\ffffff</span><span class=\"keyword\">\\flink</span>-release-1.10.0<span class=\"keyword\">\\flink</span>-release-1.10.0<span class=\"keyword\">\\target</span><span class=\"keyword\">\\rat</span>.txt</span><br></pre></td></tr></table></figure>\n<p>flink-runtime-web 下载 node 速度较慢，下载超时失败。修改 pom.xml 的配置信息，如果已经操作，需要删除 web-dashboard 的 node modules</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// 修改</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">arguments</span>&gt;</span>ci --cache-max=0 --no-save<span class=\"tag\">&lt;/<span class=\"name\">arguments</span>&gt;</span></span><br><span class=\"line\">// 替换</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">arguments</span>&gt;</span>install -registry=https://registry.npm.taobao.org --cache-max=0 --no-save<span class=\"tag\">&lt;/<span class=\"name\">arguments</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>代码规范</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn spotless:apply</span><br></pre></td></tr></table></figure>\n<p>node 添加 其他下载源</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">nodeDownloadRoot</span>&gt;</span>https://registry.npm.taobao.org/dist/<span class=\"tag\">&lt;/<span class=\"name\">nodeDownloadRoot</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">npmDownloadRoot</span>&gt;</span>https://registry.npmjs.org/npm/-/<span class=\"tag\">&lt;/<span class=\"name\">npmDownloadRoot</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">nodeVersion</span>&gt;</span>v10.9.0<span class=\"tag\">&lt;/<span class=\"name\">nodeVersion</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>局部打包，例如我要打包 flink-connector 模块， <code>-pl</code> ：指定需要打包的模块， <code>-am</code> ：加载依赖模块</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mvn clean install -pl flink-connectors -am -Drat.skip=true</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "大数据"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/07/21/Essays/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/07/21/Essays/",
            "title": "essays",
            "date_published": "2021-07-21T13:58:12.000Z",
            "content_html": "<h2 id=\"blog-搭建\"><a class=\"markdownIt-Anchor\" href=\"#blog-搭建\">#</a> blog 搭建</h2>\n<ul>\n<li><code>hexo</code> ：主题比较多样，需要自己配置，相对比较复杂，可以通过  <code>github actions</code>  或者 <code>hexo d</code>  进行部署。</li>\n<li><code>docsify</code> ：相对简单，只需要配置侧边栏等就可以部署运行（ <code>github pages</code> ）</li>\n</ul>\n<h2 id=\"开源项目\"><a class=\"markdownIt-Anchor\" href=\"#开源项目\">#</a> 开源项目</h2>\n<p>包含了许多开源项目的文章和视频，语言不限。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhbmlzdGVmYW5vdmljL2J1aWxkLXlvdXItb3duLXg=\">github 网址</span></p>\n<h2 id=\"vertx\"><a class=\"markdownIt-Anchor\" href=\"#vertx\">#</a> Vertx</h2>\n<p>是一个基于 JVM、轻量级、高性能的应用平台。（本身并不算一个框架），采用 React 模式开发。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92ZXJ0eC5pby9kb2NzLw==\">doc</span></p>\n<h2 id=\"github-actions\"><a class=\"markdownIt-Anchor\" href=\"#github-actions\">#</a> GitHub Actions</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdpdGh1Yi5jb20vY24vYWN0aW9ucy9xdWlja3N0YXJ0\">github 网址</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5ydWFueWlmZW5nLmNvbS9ibG9nLzIwMTkvMDkvZ2V0dGluZy1zdGFydGVkLXdpdGgtZ2l0aHViLWFjdGlvbnMuaHRtbA==\">阮一峰入门教程</span></p>\n<h2 id=\"java实现微信机器人\"><a class=\"markdownIt-Anchor\" href=\"#java实现微信机器人\">#</a> Java 实现微信机器人</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3dlY2hhdHkvc3VtbWVyLW9mLXdlY2hhdHk=\">github 网址</span></p>\n<p>实现比较简单，个人感觉文档不太健全。可能是版本问题，接口与示例不符。</p>\n<h2 id=\"maven-install未报告的异常错误\"><a class=\"markdownIt-Anchor\" href=\"#maven-install未报告的异常错误\">#</a> Maven install：未报告的异常错误</h2>\n<p>常出现在  <code>orElseThrow</code>  ，肯定是 JDK 的问题，需要显示声明 Exception</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.orElseThrow(Exception::<span class=\"keyword\">new</span>)</span><br><span class=\"line\"><span class=\"comment\">// ↓</span></span><br><span class=\"line\">.&lt;Exception&gt;orElseThrow(Exception::<span class=\"keyword\">new</span>)</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "随笔"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/07/15/algorithm/leetcode/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/07/15/algorithm/leetcode/",
            "title": "leetcode",
            "date_published": "2021-07-15T16:09:58.000Z",
            "content_html": "<h2 id=\"算法心得leetcode\"><a class=\"markdownIt-Anchor\" href=\"#算法心得leetcode\">#</a> 算法心得 ——LeetCode</h2>\n<p>所有题目转载自 LeetCode：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20v\">https://leetcode-cn.com/</span></p>\n<h4 id=\"1-两数之和\"><a class=\"markdownIt-Anchor\" href=\"#1-两数之和\">#</a> 1、两数之和</h4>\n<blockquote>\n<p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。</p>\n<p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p>\n<p>你可以按任意顺序返回答案。</p>\n</blockquote>\n<p>示例 1：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [2,7,11,15], target = 9</span><br><span class=\"line\">输出：[0,1]</span><br><span class=\"line\">解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题\"><a class=\"markdownIt-Anchor\" href=\"#解题\">#</a> 解题：</h4>\n<p>思路一：使用  <code>HashMap</code>  或者  <code>HashTable</code> ，空间换时间。时间复杂度和空间复杂度都为 O (n)。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span>[] twoSum(<span class=\"type\">int</span>[] nums, <span class=\"type\">int</span> target) &#123;</span><br><span class=\"line\">    HashMap&lt;Integer, Integer&gt; map = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (map.containsKey(nums[i])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[]&#123;map.get(nums[i]), i&#125;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        map.put(target - nums[i], i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> nums;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-两数相加\"><a class=\"markdownIt-Anchor\" href=\"#2-两数相加\">#</a> 2、两数相加</h4>\n<blockquote>\n<p>给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。</p>\n<p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p>\n<p>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p>\n</blockquote>\n<p>示例 1：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：l1 = [2,4,3], l2 = [5,6,4]</span><br><span class=\"line\">输出：[7,0,8]</span><br><span class=\"line\">解释：342 + 465 = 807.</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-2\"><a class=\"markdownIt-Anchor\" href=\"#解题-2\">#</a> 解题：</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> ListNode <span class=\"title function_\">addTwoNumbers</span><span class=\"params\">(ListNode l1, ListNode l2)</span> &#123;</span><br><span class=\"line\">       <span class=\"type\">boolean</span> <span class=\"variable\">moreThanTen</span> <span class=\"operator\">=</span> (l1.val + l2.val) &gt;= <span class=\"number\">10</span>;</span><br><span class=\"line\">       <span class=\"type\">ListNode</span> <span class=\"variable\">root</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>((l1.val + l2.val) % <span class=\"number\">10</span>);</span><br><span class=\"line\">       <span class=\"type\">ListNode</span> <span class=\"variable\">now</span> <span class=\"operator\">=</span> root;</span><br><span class=\"line\">       <span class=\"type\">ListNode</span> <span class=\"variable\">zero</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(<span class=\"number\">0</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">       <span class=\"keyword\">while</span> (l1.next != <span class=\"literal\">null</span> || l2.next != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">           l1 = l1.next == <span class=\"literal\">null</span> ? zero : l1.next;</span><br><span class=\"line\">           l2 = l2.next == <span class=\"literal\">null</span> ? zero : l2.next;</span><br><span class=\"line\">           <span class=\"type\">int</span> <span class=\"variable\">val</span> <span class=\"operator\">=</span> l1.val + l2.val;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (moreThanTen) val++;</span><br><span class=\"line\">           moreThanTen = val &gt;= <span class=\"number\">10</span>;</span><br><span class=\"line\">           <span class=\"type\">ListNode</span> <span class=\"variable\">next</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(val % <span class=\"number\">10</span>);</span><br><span class=\"line\">           now.next = next;</span><br><span class=\"line\">           now = next;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (moreThanTen) &#123;</span><br><span class=\"line\">           now.next = <span class=\"keyword\">new</span> <span class=\"title class_\">ListNode</span>(<span class=\"number\">1</span>, <span class=\"literal\">null</span>);</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> root;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"3-无重复字符的最长子串\"><a class=\"markdownIt-Anchor\" href=\"#3-无重复字符的最长子串\">#</a> 3、无重复字符的最长子串</h4>\n<blockquote>\n<p>给定一个字符串，请你找出其中不含有重复字符的 <strong>最长子串</strong> 的长度。</p>\n</blockquote>\n<p>示例 1：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入: s = &quot;abcabcbb&quot;</span><br><span class=\"line\">输出: 3 </span><br><span class=\"line\">解释: 因为无重复字符的最长子串是 &quot;abc&quot;，所以其长度为 3。</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-3\"><a class=\"markdownIt-Anchor\" href=\"#解题-3\">#</a> 解题：</h4>\n<p>思路一：滑动窗口，左右两个 index，存在重复的字符，左下标 + 1，否则右下标 + 1。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">lengthOfLongestSubstring</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (s == <span class=\"literal\">null</span> || s.length() == <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, left = <span class=\"number\">0</span>, right = <span class=\"number\">1</span>, i;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (right != s.length()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = left; i &lt; right; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.charAt(right) == s.charAt(i)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i == right) &#123;</span><br><span class=\"line\">            right++;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            res = Math.max(right - left, res);</span><br><span class=\"line\">            left = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Math.max(right - left, res);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>思路二：在一的基础上，查找字符是否重复，采用数组存储，减少查找时间。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">lengthOfLongestSubstring</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">128</span>];</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">max</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, left = <span class=\"number\">0</span>;</span><br><span class=\"line\">    Arrays.fill(arr, -<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> s.charAt(i);</span><br><span class=\"line\">        left = Math.max(arr[c] + <span class=\"number\">1</span>, left);</span><br><span class=\"line\">        max = Math.max(max, i - left + <span class=\"number\">1</span>);</span><br><span class=\"line\">        arr[c] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> max;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"5-最长回文子串\"><a class=\"markdownIt-Anchor\" href=\"#5-最长回文子串\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvbG9uZ2VzdC1wYWxpbmRyb21pYy1zdWJzdHJpbmcv\">5. 最长回文子串</span></h4>\n<blockquote>\n<p>给你一个字符串  <code>s</code> ，找到  <code>s</code>  中最长的回文子串。</p>\n</blockquote>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：s = &quot;babad&quot;</span><br><span class=\"line\">输出：&quot;bab&quot;</span><br><span class=\"line\">解释：&quot;aba&quot; 同样是符合题意的答案。</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-4\"><a class=\"markdownIt-Anchor\" href=\"#解题-4\">#</a> 解题</h4>\n<p>滑动窗口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">longestPalindrome</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">left</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, right = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">maxSpace</span> <span class=\"operator\">=</span> Math.min(i, s.length() - i - <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; j &lt;= maxSpace; j++) &#123;                <span class=\"comment\">// aba</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.charAt(i - j) == s.charAt(i + j)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (right - left &lt; <span class=\"number\">2</span> * j) &#123;</span><br><span class=\"line\">                    left = i - j;</span><br><span class=\"line\">                    right = i + j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        maxSpace = Math.min(i, s.length() - i - <span class=\"number\">2</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt;= maxSpace; j++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (s.charAt(i - j) == s.charAt(i + j + <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (right - left &lt; <span class=\"number\">2</span> * j + <span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">                    left = i - j;</span><br><span class=\"line\">                    right = i + j + <span class=\"number\">1</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.substring(left, right + <span class=\"number\">1</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"8-字符串转换整数-atoi\"><a class=\"markdownIt-Anchor\" href=\"#8-字符串转换整数-atoi\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvc3RyaW5nLXRvLWludGVnZXItYXRvaS8=\">8. 字符串转换整数 (atoi)</span></h4>\n<blockquote>\n<p>请你来实现一个 myAtoi (string s) 函数，使其能将字符串转换成一个 32 位有符号整数（类似 C/C++ 中的 atoi 函数）。</p>\n<p>函数 myAtoi (string s) 的算法如下：</p>\n<p>读入字符串并丢弃无用的前导空格<br>\n检查下一个字符（假设还未到字符末尾）为正还是负号，读取该字符（如果有）。 确定最终结果是负数还是正数。 如果两者都不存在，则假定结果为正。<br>\n读入下一个字符，直到到达下一个非数字字符或到达输入的结尾。字符串的其余部分将被忽略。<br>\n将前面步骤读入的这些数字转换为整数（即，“123” -&gt; 123， “0032” -&gt; 32）。如果没有读入数字，则整数为 0 。必要时更改符号（从步骤 2 开始）。<br>\n如果整数数超过 32 位有符号整数范围 [−231,  231 − 1] ，需要截断这个整数，使其保持在这个范围内。具体来说，小于 −231 的整数应该被固定为 −231 ，大于 231 − 1 的整数应该被固定为 231 − 1 。<br>\n返回整数作为最终结果。<br>\n注意：</p>\n<p>本题中的空白字符只包括空格字符 ’ ’ 。<br>\n除前导空格或数字后的其余字符串外，请勿忽略 任何其他字符。</p>\n</blockquote>\n<h4 id=\"解题-5\"><a class=\"markdownIt-Anchor\" href=\"#解题-5\">#</a> 解题</h4>\n<p>找规律：（±）（\\d+）</p>\n<p>其他：也可以考虑使用正则匹配</p>\n<p>​\t\t\t考虑使用有限状态机</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">myAtoi</span><span class=\"params\">(String s)</span> &#123;</span><br><span class=\"line\">    s = s.trim();</span><br><span class=\"line\">    <span class=\"type\">long</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"type\">boolean</span> <span class=\"variable\">negative</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"type\">char</span> c;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class=\"line\">        c = s.charAt(i);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span> &amp;&amp; c == <span class=\"string\">&#x27;-&#x27;</span>) &#123;</span><br><span class=\"line\">            negative = <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (i == <span class=\"number\">0</span> &amp;&amp; c == <span class=\"string\">&#x27;+&#x27;</span>) &#123;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (c &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; c &lt;= <span class=\"string\">&#x27;9&#x27;</span>) &#123;</span><br><span class=\"line\">                res = res * <span class=\"number\">10</span> + (c - <span class=\"string\">&#x27;0&#x27;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res &gt; Math.pow(<span class=\"number\">2</span>, <span class=\"number\">31</span>) - <span class=\"number\">1</span> &amp;&amp; !negative) &#123;</span><br><span class=\"line\">            res = (<span class=\"type\">long</span>) (Math.pow(<span class=\"number\">2</span>, <span class=\"number\">31</span>) - <span class=\"number\">1</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (res &gt; Math.pow(<span class=\"number\">2</span>, <span class=\"number\">31</span>) &amp;&amp; negative) &#123;</span><br><span class=\"line\">            res = (<span class=\"type\">long</span>) Math.pow(<span class=\"number\">2</span>, <span class=\"number\">31</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (negative) <span class=\"keyword\">return</span> (<span class=\"type\">int</span>) -res;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"type\">int</span>) res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"11-盛最多水的容器\"><a class=\"markdownIt-Anchor\" href=\"#11-盛最多水的容器\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvY29udGFpbmVyLXdpdGgtbW9zdC13YXRlci8=\">11. 盛最多水的容器</span></h4>\n<blockquote>\n<p>给你 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0) 。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p>\n<p>说明：你不能倾斜容器。</p>\n</blockquote>\n<h4 id=\"解题-6\"><a class=\"markdownIt-Anchor\" href=\"#解题-6\">#</a> 解题</h4>\n<p>采用双指针的方式：left 指向头，right 指向末端。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">maxArea</span><span class=\"params\">(<span class=\"type\">int</span>[] height)</span> &#123;        </span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">left</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, right = height.length - <span class=\"number\">1</span>;        </span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;        </span><br><span class=\"line\">    <span class=\"keyword\">while</span> (left &lt; right) &#123;            </span><br><span class=\"line\">        res = Math.max(res, Math.min(height[left], height[right]) </span><br><span class=\"line\">                       * (right - left));            </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (height[left] &lt; height[right]) &#123;                </span><br><span class=\"line\">            left++;            </span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;                </span><br><span class=\"line\">            right--;            </span><br><span class=\"line\">        &#125;        </span><br><span class=\"line\">    &#125;        </span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;    </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"15-三数之和\"><a class=\"markdownIt-Anchor\" href=\"#15-三数之和\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvM3N1bS8=\">15. 三数之和</span></h4>\n<blockquote>\n<p>给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。</p>\n<p>注意：答案中不可以包含重复的三元组。</p>\n</blockquote>\n<p>示例 1：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [-1,0,1,2,-1,-4]输出：[[-1,-1,2],[-1,0,1]]</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-7\"><a class=\"markdownIt-Anchor\" href=\"#解题-7\">#</a> 解题</h4>\n<p>本题个人感觉最的难点是数据重复问题，使用 HashMap 的话解决数据重复比较困难。</p>\n<p>使用双指针解决，将第二重和第三重循环合并为 O (n) 的复杂度。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> List&lt;List&lt;Integer&gt;&gt; <span class=\"title function_\">threeSum</span><span class=\"params\">(<span class=\"type\">int</span>[] nums)</span> &#123;</span><br><span class=\"line\">    List&lt;List&lt;Integer&gt;&gt; res = <span class=\"keyword\">new</span> <span class=\"title class_\">ArrayList</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.length &lt; <span class=\"number\">3</span>) <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">    <span class=\"type\">int</span> left, right;</span><br><span class=\"line\">    Arrays.sort(nums);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[i] &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">break</span>; <span class=\"comment\">// 第一个数大于 0，后面的数都比它大，肯定不成立了</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span> &amp;&amp; nums[i] == nums[i - <span class=\"number\">1</span>])</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>; <span class=\"comment\">// 去掉重复情况</span></span><br><span class=\"line\">        left = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">        right = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (left &lt; right) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nums[i] + nums[left] + nums[right] &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                right--;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[i] + nums[left] + nums[right] &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                left++;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                res.add(Arrays.asList(nums[i], nums[left], nums[right]));</span><br><span class=\"line\">                left++;</span><br><span class=\"line\">                right--; <span class=\"comment\">// 首先无论如何先要进行加减操作                    </span></span><br><span class=\"line\">                <span class=\"keyword\">while</span> (left &lt; right &amp;&amp; nums[left] == nums[left - <span class=\"number\">1</span>]) left++;</span><br><span class=\"line\">                <span class=\"keyword\">while</span> (left &lt; right &amp;&amp; nums[right] == nums[right + <span class=\"number\">1</span>]) right--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"34-在排序数组中查找元素的第一个和最后一个位置\"><a class=\"markdownIt-Anchor\" href=\"#34-在排序数组中查找元素的第一个和最后一个位置\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvZmluZC1maXJzdC1hbmQtbGFzdC1wb3NpdGlvbi1vZi1lbGVtZW50LWluLXNvcnRlZC1hcnJheS8=\">34. 在排序数组中查找元素的第一个和最后一个位置</span></h4>\n<blockquote>\n<p>给定一个按照升序排列的整数数组 nums，和一个目标值 target。找出给定目标值在数组中的开始位置和结束位置。</p>\n<p>如果数组中不存在目标值 target，返回 [-1, -1]。</p>\n</blockquote>\n<p><strong>示例 1：</strong></p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [5,7,7,8,8,10], target = 8输出：[3,4]</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-8\"><a class=\"markdownIt-Anchor\" href=\"#解题-8\">#</a> 解题</h4>\n<p>作为已排序的数组查找元素，首先想到的是<strong>二分查找</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span>[] searchRange(<span class=\"type\">int</span>[] nums, <span class=\"type\">int</span> target) &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">left</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, right = nums.length - <span class=\"number\">1</span>, middle = (left + right) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"type\">int</span>[] res = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">    res[<span class=\"number\">1</span>] = nums.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (left &lt;= right) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (nums[middle] == target) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> middle; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (nums[i] != target) &#123;</span><br><span class=\"line\">                    res[<span class=\"number\">0</span>] = i + <span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> middle; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (nums[i] != target) &#123;</span><br><span class=\"line\">                    res[<span class=\"number\">1</span>] = i - <span class=\"number\">1</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (nums[middle] &gt; target) &#123;</span><br><span class=\"line\">            right = middle - <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            left = middle + <span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        middle = (left + right) / <span class=\"number\">2</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    res[<span class=\"number\">0</span>] = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    res[<span class=\"number\">1</span>] = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"41-缺失的第一个正数\"><a class=\"markdownIt-Anchor\" href=\"#41-缺失的第一个正数\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvZmlyc3QtbWlzc2luZy1wb3NpdGl2ZS8=\">41. 缺失的第一个正数</span></h4>\n<blockquote>\n<p>给你一个未排序的整数数组  <code>nums</code>  ，请你找出其中没有出现的最小的正整数。</p>\n<p>请你实现时间复杂度为  <code>O(n)</code>  并且只使用常数级别额外空间的解决方案。</p>\n</blockquote>\n<p><strong>示例 1：</strong></p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [1,2,0]输出：3</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-9\"><a class=\"markdownIt-Anchor\" href=\"#解题-9\">#</a> 解题</h4>\n<p>遍历和 HashSet，时间复杂度 O (n)</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">firstMissingPositive</span><span class=\"params\">(<span class=\"type\">int</span>[] nums)</span> &#123;</span><br><span class=\"line\">    HashSet&lt;Integer&gt; set = <span class=\"keyword\">new</span> <span class=\"title class_\">HashSet</span>&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> num : nums) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (num &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            set.add(num);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (!set.contains(i)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        i++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"55-跳跃游戏\"><a class=\"markdownIt-Anchor\" href=\"#55-跳跃游戏\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvanVtcC1nYW1lLw==\">55. 跳跃游戏</span></h4>\n<blockquote>\n<p>给定一个非负整数数组  <code>nums</code>  ，你最初位于数组的 <strong>第一个下标</strong> 。</p>\n<p>数组中的每个元素代表你在该位置可以跳跃的最大长度。</p>\n<p>判断你是否能够到达最后一个下标。</p>\n</blockquote>\n<p>示例 1：</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：nums = [2,3,1,1,4]输出：true解释：可以先跳 1 步，从下标 0 到达下标 1, 然后再从下标 1 跳 3 步到达最后一个下标。</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-10\"><a class=\"markdownIt-Anchor\" href=\"#解题-10\">#</a> 解题</h4>\n<p>采用数组表示，循环向后判断是否可达</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">canJump</span><span class=\"params\">(<span class=\"type\">int</span>[] nums)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (nums.length &lt; <span class=\"number\">2</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"type\">boolean</span>[] isArrive = <span class=\"keyword\">new</span> <span class=\"title class_\">boolean</span>[nums.length];</span><br><span class=\"line\">    isArrive[<span class=\"number\">0</span>] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isArrive[i]) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; j &lt;= nums[i]; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (i + j == nums.length - <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                isArrive[i + j] = <span class=\"literal\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> isArrive[nums.length - <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如果 k 可达，那么 k 之前的所有位置都可达，循环判断可以达到的最大距离，如果当前位置不可达，说明后面位置也不可达。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">canJump</span><span class=\"params\">(<span class=\"type\">int</span>[] nums)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">res</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; res) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        res = Math.max(i + nums[i], res);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"62-不同路径\"><a class=\"markdownIt-Anchor\" href=\"#62-不同路径\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvdW5pcXVlLXBhdGhzLw==\">62. 不同路径</span></h4>\n<blockquote>\n<p>一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为 “Start” ）。</p>\n<p>机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。</p>\n<p>问总共有多少条不同的路径？</p>\n</blockquote>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：m = 3, n = 7</span><br><span class=\"line\">输出：28</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-11\"><a class=\"markdownIt-Anchor\" href=\"#解题-11\">#</a> 解题</h4>\n<p>位置为（i，j）的路径 = （i+1，j）的路径 + （i，j+1）的路径</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">uniquePaths</span><span class=\"params\">(<span class=\"type\">int</span> m, <span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[m][n];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        arr[m - <span class=\"number\">1</span>][i] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        arr[i][n - <span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> m - <span class=\"number\">2</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> n - <span class=\"number\">2</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">            arr[i][j] = arr[i + <span class=\"number\">1</span>][j] + arr[i][j + <span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"64-最小路径和\"><a class=\"markdownIt-Anchor\" href=\"#64-最小路径和\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvbWluaW11bS1wYXRoLXN1bS8=\">64. 最小路径和</span></h4>\n<blockquote>\n<p>给定一个包含非负整数的  <code>*m* x *n*</code>  网格  <code>grid</code>  ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。</p>\n<p>** 说明：** 每次只能向下或者向右移动一步。</p>\n</blockquote>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：grid = [[1,3,1],[1,5,1],[4,2,1]]</span><br><span class=\"line\">输出：7</span><br><span class=\"line\">解释：因为路径 1→3→1→1→1 的总和最小。</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-12\"><a class=\"markdownIt-Anchor\" href=\"#解题-12\">#</a> 解题</h4>\n<p>动态规划的思想： <code>min[i][j] = min(min[i-1][j], min[i][j-1])+grid[i][j]</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">minPathSum</span><span class=\"params\">(<span class=\"type\">int</span>[][] grid)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> grid.length, n = grid[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">    <span class=\"type\">int</span>[][] res = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[m][n];</span><br><span class=\"line\">    res[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = grid[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; n; i++) &#123;</span><br><span class=\"line\">        res[<span class=\"number\">0</span>][i] = res[<span class=\"number\">0</span>][i - <span class=\"number\">1</span>] + grid[<span class=\"number\">0</span>][i];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        res[i][<span class=\"number\">0</span>] = res[i - <span class=\"number\">1</span>][<span class=\"number\">0</span>] + grid[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            res[i][j] = Math.min(res[i - <span class=\"number\">1</span>][j], res[i][j - <span class=\"number\">1</span>]) + grid[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res[m - <span class=\"number\">1</span>][n - <span class=\"number\">1</span>];</span><br></pre></td></tr></table></figure>\n<p>空间优化： <code>min(min[i-1][j], min[i][j-1])</code>  可以通过一个一维数组表示，每次选出一行每个位置的最小距离。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">minPathSum</span><span class=\"params\">(<span class=\"type\">int</span>[][] grid)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> grid.length, n = grid[<span class=\"number\">0</span>].length;</span><br><span class=\"line\">    <span class=\"type\">int</span>[] res = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[n];</span><br><span class=\"line\">    Arrays.fill(res, Integer.MAX_VALUE);</span><br><span class=\"line\">    res[<span class=\"number\">0</span>] = grid[<span class=\"number\">0</span>][<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; m; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            res[<span class=\"number\">0</span>] = res[<span class=\"number\">0</span>] + grid[i][<span class=\"number\">0</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; j &lt; n; j++) &#123;</span><br><span class=\"line\">            res[j] = Math.min(res[j - <span class=\"number\">1</span>], res[j]) + grid[i][j];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res[n - <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"71-简化路径\"><a class=\"markdownIt-Anchor\" href=\"#71-简化路径\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvc2ltcGxpZnktcGF0aC8=\">71. 简化路径</span></h4>\n<blockquote>\n<p>给你一个字符串 path ，表示指向某一文件或目录的 Unix 风格 绝对路径 （以 ‘/’ 开头），请你将其转化为更加简洁的规范路径。</p>\n<p>在 Unix 风格的文件系统中，一个点（.）表示当前目录本身；此外，两个点 （…） 表示将目录切换到上一级（指向父目录）；两者都可以是复杂相对路径的组成部分。任意多个连续的斜杠（即，’//’）都被视为单个斜杠 ‘/’ 。 对于此问题，任何其他格式的点（例如，’…’）均被视为文件 / 目录名称。</p>\n<p>请注意，返回的 规范路径 必须遵循下述格式：</p>\n<p>始终以斜杠 ‘/’ 开头。<br>\n两个目录名之间必须只有一个斜杠 ‘/’ 。<br>\n最后一个目录名（如果存在）不能 以 ‘/’ 结尾。<br>\n此外，路径仅包含从根目录到目标文件或目录的路径上的目录（即，不含 ‘.’ 或 ‘…’）。<br>\n返回简化后得到的 规范路径 。</p>\n</blockquote>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：path = &quot;/home/&quot;</span><br><span class=\"line\">输出：&quot;/home&quot;</span><br><span class=\"line\">解释：注意，最后一个目录名后面没有斜杠。 </span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-13\"><a class=\"markdownIt-Anchor\" href=\"#解题-13\">#</a> 解题</h4>\n<p>路径存在  <code>.</code>  和  <code>..</code>  两种特殊形式，将路径放在栈中，遇到返回上一页就执行 <code>pop</code>  操作，正常路径执行 <code>push</code>  操作。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> String <span class=\"title function_\">simplifyPath</span><span class=\"params\">(String path)</span> &#123;</span><br><span class=\"line\">    Stack&lt;String&gt; stack = <span class=\"keyword\">new</span> <span class=\"title class_\">Stack</span>&lt;&gt;();</span><br><span class=\"line\">    String[] paths = path.split(<span class=\"string\">&quot;/&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String s : paths) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;&quot;</span>) || s.equals(<span class=\"string\">&quot;.&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s.equals(<span class=\"string\">&quot;..&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!stack.empty()) stack.pop();</span><br><span class=\"line\">            <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        stack.push(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">StringBuilder</span> <span class=\"variable\">builder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (String s : stack) &#123;</span><br><span class=\"line\">        builder.append(<span class=\"string\">&quot;/&quot;</span>).append(s);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> builder.length() == <span class=\"number\">0</span> ? <span class=\"string\">&quot;/&quot;</span> : builder.toString();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"72-编辑距离\"><a class=\"markdownIt-Anchor\" href=\"#72-编辑距离\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvZWRpdC1kaXN0YW5jZS8=\">72. 编辑距离</span></h4>\n<blockquote>\n<p>给你两个单词 word1 和 word2，请你计算出将 word1 转换成 word2 所使用的最少操作数 。</p>\n<p>你可以对一个单词进行如下三种操作：</p>\n<p>插入一个字符<br>\n删除一个字符<br>\n替换一个字符</p>\n</blockquote>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：word1 = &quot;horse&quot;, word2 = &quot;ros&quot;</span><br><span class=\"line\">输出：3</span><br><span class=\"line\">解释：</span><br><span class=\"line\">horse -&gt; rorse (将 &#x27;h&#x27; 替换为 &#x27;r&#x27;)</span><br><span class=\"line\">rorse -&gt; rose (删除 &#x27;r&#x27;)</span><br><span class=\"line\">rose -&gt; ros (删除 &#x27;e&#x27;)</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-14\"><a class=\"markdownIt-Anchor\" href=\"#解题-14\">#</a> 解题</h4>\n<p>min (i，j) : word1 的前 i 个元素转化为 word2 的前 i 个元素的最少操作。</p>\n<p>min (i-1，j) 和 min (i，j-1) 和 min (i，j) 的区别是 word1 或者 word2 添加了一个字符（对应上述三种操作的前两种），那必定在基础上 + 1。</p>\n<p>min (i-1，j-1) 和 min (i，j) 的区别是如果 word1 的第 i 个元素和 word2 的第 j 个元素相等，则操作一样，不相等执行替换操作（word1 第 i 个元素替换成 word2 第 j 个元素）。</p>\n<p>因此：min (i，j) = Min (min (i-1，j-1)(+1)，min (i-1，j)，min (i，j-1))</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">minDistance</span><span class=\"params\">(String word1, String word2)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span>[][] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[word1.length() + <span class=\"number\">1</span>][word2.length() + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt;= word1.length(); i++) &#123;</span><br><span class=\"line\">        arr[i][<span class=\"number\">0</span>] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt;= word2.length(); i++) &#123;</span><br><span class=\"line\">        arr[<span class=\"number\">0</span>][i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> t;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= word1.length(); i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; j &lt;= word2.length(); j++) &#123;</span><br><span class=\"line\">            t = arr[i - <span class=\"number\">1</span>][j - <span class=\"number\">1</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (word1.charAt(i - <span class=\"number\">1</span>) != word2.charAt(j - <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">                t++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            arr[i][j] = Math.min(t, Math.min(arr[i][j - <span class=\"number\">1</span>], arr[i - <span class=\"number\">1</span>][j]) + <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr[word1.length()][word2.length()];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>空间优化：需要两个变量，front 存在当前第 i 个元素的值，方便修改第 i 个元素后可以找到；pre 保存 min (i-1, j-1) 的值，获取 min (i, j) 值的时候需要用到。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">minDistance2</span><span class=\"params\">(String word1, String word2)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span>[] arr = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[word1.length() + <span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt;= word1.length(); i++) &#123;</span><br><span class=\"line\">        arr[i] = i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"type\">int</span> front, pre;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; word2.length(); i++) &#123;</span><br><span class=\"line\">        pre = arr[<span class=\"number\">0</span>];</span><br><span class=\"line\">        arr[<span class=\"number\">0</span>]++;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; j &lt;= word1.length(); j++) &#123;</span><br><span class=\"line\">            front = arr[j];</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (word2.charAt(i) != word1.charAt(j - <span class=\"number\">1</span>)) &#123;</span><br><span class=\"line\">                pre++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            arr[j] = Math.min(pre, Math.min(arr[j - <span class=\"number\">1</span>], arr[j]) + <span class=\"number\">1</span>);</span><br><span class=\"line\">            pre = front;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> arr[word1.length()];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"74-搜索二维矩阵\"><a class=\"markdownIt-Anchor\" href=\"#74-搜索二维矩阵\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvc2VhcmNoLWEtMmQtbWF0cml4Lw==\">74. 搜索二维矩阵</span></h4>\n<blockquote>\n<p>编写一个高效的算法来判断 m x n 矩阵中，是否存在一个目标值。</p>\n<p>该矩阵具有如下特性：</p>\n<p>每行中的整数从左到右按升序排列。<br>\n每行的第一个整数大于前一行的最后一个整数。</p>\n</blockquote>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">输入：matrix = [[1,3,5,7],[10,11,16,20],[23,30,34,60]], target = 3</span><br><span class=\"line\">输出：true</span><br></pre></td></tr></table></figure>\n<h4 id=\"解题-15\"><a class=\"markdownIt-Anchor\" href=\"#解题-15\">#</a> 解题</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public boolean searchMatrix(int[][] matrix, int target) &#123;</span><br><span class=\"line\">    if (matrix.length == 0 || matrix[0].length == 0) return false;</span><br><span class=\"line\">    for (int i = 0; i &lt; matrix.length; i++) &#123;</span><br><span class=\"line\">        if (target &gt;= matrix[i][0]) &#123;</span><br><span class=\"line\">            continue;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (i == 0) return false;</span><br><span class=\"line\">        for (int j = 0; j &lt; matrix[i - 1].length; j++) &#123;</span><br><span class=\"line\">            if (target &lt; matrix[i - 1][j]) return false;</span><br><span class=\"line\">            if (target == matrix[i - 1][j]) return true;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    int last = matrix.length - 1;</span><br><span class=\"line\">    // 处理最后一行</span><br><span class=\"line\">    for (int i = 0; i &lt; matrix[last].length; i++) &#123;</span><br><span class=\"line\">        if (target &lt; matrix[last][i]) return false;</span><br><span class=\"line\">        if (target == matrix[last][i]) return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    return false;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"202-快乐数\"><a class=\"markdownIt-Anchor\" href=\"#202-快乐数\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvaGFwcHktbnVtYmVyLw==\">202. 快乐数</span></h4>\n<blockquote>\n<p>编写一个算法来判断一个数 n 是不是快乐数。</p>\n<p>「快乐数」定义为：</p>\n<p>对于一个正整数，每一次将该数替换为它每个位置上的数字的平方和。<br>\n然后重复这个过程直到这个数变为 1，也可能是 无限循环 但始终变不到 1。<br>\n如果 可以变为  1，那么这个数就是快乐数。<br>\n如果 n 是快乐数就返回 true ；不是，则返回 false 。</p>\n</blockquote>\n<h4 id=\"解题-16\"><a class=\"markdownIt-Anchor\" href=\"#解题-16\">#</a> 解题</h4>\n<p>方法一：非快乐数最后一定以某组数进行循环，如何获取重复的数（并不一定第一个数就是循环的数），选取第一个数为可能循环的数，如果超过 10 次，仍在循环，选取当前计算的数为可能循环的数</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isHappy</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (n &lt;= <span class=\"number\">0</span>) <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">       <span class=\"type\">int</span> <span class=\"variable\">next</span> <span class=\"operator\">=</span> getNumber(n), first = next, i = <span class=\"number\">1</span>, pre;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (next == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">       <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">           pre = next;</span><br><span class=\"line\">           next = getNumber(next);</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (next == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">           i++;</span><br><span class=\"line\">           <span class=\"keyword\">if</span> (i % <span class=\"number\">10</span> == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">               first = pre;</span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125; <span class=\"keyword\">while</span> (next != first);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getNumber</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">       <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">       <span class=\"keyword\">while</span> (n != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">           sum += Math.pow(n % <span class=\"number\">10</span>, <span class=\"number\">2</span>);</span><br><span class=\"line\">           n = n / <span class=\"number\">10</span>;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> sum;</span><br><span class=\"line\">   &#125;</span><br></pre></td></tr></table></figure>\n<p>方法二：快慢指针，一个一倍速前进，一个二倍速前进，在循环中，快指针最好肯定能够追上慢的指针并与他相遇。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isHappy2</span><span class=\"params\">(<span class=\"type\">int</span> n)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">slow</span> <span class=\"operator\">=</span> n, fast = n;</span><br><span class=\"line\">    <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">        slow = getNumber(slow);</span><br><span class=\"line\">        fast = getNumber(fast);</span><br><span class=\"line\">        fast = getNumber(fast);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (slow == <span class=\"number\">1</span>) <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">while</span> (slow != fast);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"209-长度最小的子数组\"><a class=\"markdownIt-Anchor\" href=\"#209-长度最小的子数组\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWV0Y29kZS1jbi5jb20vcHJvYmxlbXMvbWluaW11bS1zaXplLXN1YmFycmF5LXN1bS8=\">209. 长度最小的子数组</span></h4>\n<blockquote>\n<p>给定一个含有 n 个正整数的数组和一个正整数 target 。</p>\n<p>找出该数组中满足其和 ≥ target 的长度最小的 连续子数组 [numsl, numsl+1, …, numsr-1, numsr] ，并返回其长度。如果不存在符合条件的子数组，返回 0。</p>\n</blockquote>\n<h4 id=\"解题-17\"><a class=\"markdownIt-Anchor\" href=\"#解题-17\">#</a> 解题</h4>\n<p>滑动窗口</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">minSubArrayLen</span><span class=\"params\">(<span class=\"type\">int</span> target, <span class=\"type\">int</span>[] nums)</span> &#123;</span><br><span class=\"line\">    <span class=\"type\">int</span> <span class=\"variable\">left</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>, right = <span class=\"number\">0</span>, sum = <span class=\"number\">0</span>, res = Integer.MAX_VALUE;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (right &lt; nums.length) &#123;</span><br><span class=\"line\">        sum += nums[right];</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (sum &gt;= target) &#123;</span><br><span class=\"line\">            res = Math.min(res, right - left + <span class=\"number\">1</span>);</span><br><span class=\"line\">            sum -= nums[left++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        right++;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (res == Integer.MAX_VALUE) <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"算法思路\"><a class=\"markdownIt-Anchor\" href=\"#算法思路\">#</a> 算法思路</h3>\n<h4 id=\"一-数组查找\"><a class=\"markdownIt-Anchor\" href=\"#一-数组查找\">#</a> 一、数组查找</h4>\n<ul>\n<li>排序数据查找 ——<strong> 二分查找</strong></li>\n<li>多个（一般为两个，如求和）数据查找 —— 可以使用<strong> Hash</strong> 来实现，空间复杂度增加。（  <code>HashMap</code> 、 <code>HashSet</code>  等）</li>\n</ul>\n<h4 id=\"二-滑动窗口\"><a class=\"markdownIt-Anchor\" href=\"#二-滑动窗口\">#</a> 二、滑动窗口</h4>\n<p>循环后面的元素需要和前面的元素挂钩，左右两个下标挪动。</p>\n<h4 id=\"三-双指针\"><a class=\"markdownIt-Anchor\" href=\"#三-双指针\">#</a> 三、双指针</h4>\n<p>和滑动窗口类似，通过两个下标操作，但双指针的右指针指向末尾。</p>\n<h4 id=\"四-动态规划\"><a class=\"markdownIt-Anchor\" href=\"#四-动态规划\">#</a> 四、动态规划</h4>\n<p>满足类似  <code>f(n) = f(n-1) + f(n-2)</code>  的规律，第 i 个值可以根据前面的值进行计算，一般通过找到规律列出函数，使用二维数组和循环可以解决。最难的部分是<strong>找规律</strong>。二维数组部分可以简化代码，如果只和最近的值相关，一般可以把二维数组转换为一维数组（参考 64、72）</p>\n",
            "tags": [
                "算法"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/07/15/database/redis/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/07/15/database/redis/",
            "title": "redis",
            "date_published": "2021-07-15T15:59:38.000Z",
            "content_html": "<h2 id=\"redis数据库\"><a class=\"markdownIt-Anchor\" href=\"#redis数据库\">#</a> Redis 数据库</h2>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/07/15/database/mysql/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/07/15/database/mysql/",
            "title": "mysql",
            "date_published": "2021-07-15T15:59:33.000Z",
            "content_html": "<h2 id=\"mysql数据库\"><a class=\"markdownIt-Anchor\" href=\"#mysql数据库\">#</a> MySQL 数据库</h2>\n<h3 id=\"二-函数\"><a class=\"markdownIt-Anchor\" href=\"#二-函数\">#</a> 二、函数</h3>\n<h4 id=\"21-递归\"><a class=\"markdownIt-Anchor\" href=\"#21-递归\">#</a> 2.1、递归</h4>\n<p>mysql 的递归比较繁琐，需要通过函数实现，返回的是集合，通过  <code>FIND_IN_SET</code>  进行操作。</p>\n<p>注：递归调用消耗大量时间，在实现中宁可在代码中采用递归，也不要在 SQL 中使用递归。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">create function getChildrenOrg(teamId INT)</span><br><span class=\"line\">    returns varchar(4000)</span><br><span class=\"line\">BEGIN</span><br><span class=\"line\">    DECLARE oTemp VARCHAR(4000);</span><br><span class=\"line\">    DECLARE oTempChild VARCHAR(4000);</span><br><span class=\"line\"></span><br><span class=\"line\">    SET oTemp = &#x27;&#x27;;</span><br><span class=\"line\">    SET oTempChild = CAST(teamId AS CHAR);</span><br><span class=\"line\"></span><br><span class=\"line\">    WHILE oTempChild IS NOT NULL</span><br><span class=\"line\">        DO</span><br><span class=\"line\">            SET oTemp = CONCAT(oTemp,&#x27;,&#x27;,oTempChild);</span><br><span class=\"line\">            SELECT GROUP_CONCAT(team_id) INTO oTempChild FROM team WHERE FIND_IN_SET(parent_id, oTempChild) &gt; 0;</span><br><span class=\"line\">        END WHILE;</span><br><span class=\"line\">    RETURN oTemp;</span><br><span class=\"line\">END</span><br></pre></td></tr></table></figure>\n<h4 id=\"22-now\"><a class=\"markdownIt-Anchor\" href=\"#22-now\">#</a> 2.2 NOW</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select NOW(), NOW(3)</span><br></pre></td></tr></table></figure>\n<p><code>NOW(3)</code> : 获得当前时间，包括毫秒值</p>\n<h3 id=\"三-主从复制\"><a class=\"markdownIt-Anchor\" href=\"#三-主从复制\">#</a> 三、主从复制</h3>\n<h4 id=\"31-类型\"><a class=\"markdownIt-Anchor\" href=\"#31-类型\">#</a> 3.1、类型</h4>\n<ul>\n<li>\n<p>基于语句的复制：将修改数据的 SQL 记录到  <code>binlog</code>  中。从库读取  <code>binlog</code>  写入中继日志  <code>relayLog</code>  中，复制日志时，从库会启动一个<strong>工作线程</strong>，然后将其放入数据库。</p>\n<p>优点：只记录修改数据，日志不大，解决 IO。</p>\n<p>缺点：数据可能存在不一致，例：同步过程主数据库挂了</p>\n</li>\n<li>\n<p>基于行数据的复制：只记录行数据的修改。</p>\n<p>缺点：中间过程全部丢失，产生大量日志（例：alter table）</p>\n</li>\n<li>\n<p>混合复制：一般的复制使用 STATEMENT 模式保存 binlog，对于 STATEMENT 模式无法复制的操作使用 ROW 模式保存 binlog</p>\n</li>\n</ul>\n<h4 id=\"32-模式\"><a class=\"markdownIt-Anchor\" href=\"#32-模式\">#</a> 3.2、模式</h4>\n<ul>\n<li>异步复制模式：主服务器启动 I/O 线程，将数据写到 binlog 中返回给客户端数据更新成功，不考虑数据是否同步。效率高，但数据一致性存在风险。</li>\n<li>同步复制模式：主服务器执行执行完客户端提交的事物后，等待从库执行完后，才返回执行成功。等待过程中，线程被阻塞，性能较慢。</li>\n<li>半同步复制模式：master 的 dump 线程通知从库，从库执行完成后，发送 ACK，主库接收到一个标志码（ACK）后，返回成功。与同步不同的是，只需要一个从库同步成功就返回成功。</li>\n</ul>\n<h3 id=\"四-事务隔离级别\"><a class=\"markdownIt-Anchor\" href=\"#四-事务隔离级别\">#</a> 四、事务隔离级别</h3>\n<h4 id=\"41-查看和修改事务隔离级别\"><a class=\"markdownIt-Anchor\" href=\"#41-查看和修改事务隔离级别\">#</a> 4.1、查看和修改事务隔离级别</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">select @@transaction_isolation;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"mysql-select-transaction.png\" alt=\"mysql-select-transaction\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">update global transaction isolation REPEATABLE READ;</span><br><span class=\"line\">-- global：全局修改</span><br><span class=\"line\">-- session：本次回话修改</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"mysql-update-transaction.png\" alt=\"mysql-update-transaction\"></p>\n<h4 id=\"42-隔离级别\"><a class=\"markdownIt-Anchor\" href=\"#42-隔离级别\">#</a> 4.2、隔离级别</h4>\n<ul>\n<li>\n<p>读未提交（READ UNCOMMITTED）</p>\n<p>读未提交会读到另一个事务未提交的数据，产生脏读，不可重复读数据。一个事务的 update 操作可能会影响另一个事务。</p>\n<p>如下图，可以看到第一个事务修改完后，第二个事务直接可以 select 修改后的值</p>\n<p><img data-src=\"read-uncommitted-1.png\" alt=\"read-uncommitted-1\"></p>\n<p><img data-src=\"read-uncommitted-2.png\" alt=\"read-uncommitted-2\"></p>\n</li>\n<li>\n<p>读提交（READ COMMITTED）</p>\n<p>解决脏读的问题，出现不可重复读。一个事务可以读取另一个事务提交后的数据。一个事务的 update 操作可能会影响另一个事务。</p>\n<p>如下图，可以看到第一个事务 update 后，第二个事务查询的还是原来的数据，等到第一个事务提交后，第二个事务查询的就是第一个事务修改后的数据</p>\n<p><img data-src=\"read-committed-1.png\" alt=\"read-committed-1\"></p>\n<p><img data-src=\"read-committed-2.png\" alt=\"read-committed-2\"></p>\n</li>\n<li>\n<p>可重复读（REPEATABLE READ）</p>\n<p>解决了不可重复读和脏读的问题。但是存在换读的问题（一个事务新增了一条 id=1 的数据，这时另一个事务也新增了一条 id=1 的数据并提交，第一个事务 select 时会发现不存在 id=1 的数据，报主键冲突的错误）。</p>\n<p><img data-src=\"repeatable-read-1.png\" alt=\"repeatable-read-1\"></p>\n<p><img data-src=\"repeatable-read-2.png\" alt=\"repeatable-read-2\"></p>\n</li>\n<li>\n<p>串行化（SERIALIZABLE）</p>\n<p>暂无</p>\n</li>\n</ul>\n<h3 id=\"五-日志binlog\"><a class=\"markdownIt-Anchor\" href=\"#五-日志binlog\">#</a> 五、日志（binlog）</h3>\n<h4 id=\"51使用日志进行数据还原\"><a class=\"markdownIt-Anchor\" href=\"#51使用日志进行数据还原\">#</a> 5.1 使用日志进行数据还原</h4>\n<p>日志未打开，win10 在 my.ini 文件的 [mysqld] 下面添加</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log_bin<span class=\"operator\">=</span>mysql<span class=\"operator\">-</span>bin</span><br><span class=\"line\">binlog<span class=\"operator\">-</span>format<span class=\"operator\">=</span><span class=\"type\">ROW</span></span><br><span class=\"line\">server<span class=\"operator\">-</span>id<span class=\"operator\">=</span><span class=\"number\">1</span></span><br></pre></td></tr></table></figure>\n<p>查找 MySQL 当前 binlog 的配置情况，<strong>第一行 ON 代表日志已经打开</strong>。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> variables <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%log_bin%&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"mysql-binlog-variables.png\" alt=\"mysql-binlog-variables\"></p>\n<p>查看日志文件的使用情况（日志名称、大小 bit、是否加密）</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> <span class=\"type\">binary</span> logs;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"mysql-binlog-show-1.png\" alt=\"mysql-binlog-show-1\"></p>\n<p>查看当前正在使用的日志情况，后续的 DDL 操作都会记录在当前日志中。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> master status;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"mysql-binlog-show-2.png\" alt=\"mysql-binlog-show-2\"></p>\n<p>执行一些测试的 SQL 语句，可以看到创建一个数据库 test2，在数据库中创建了一张表 test，模拟不小心删除了 test2 数据库。</p>\n<p><img data-src=\"mysql-test-1.png\" alt=\"mysql-test-1\"></p>\n<p>在 binlog 中查找之前执行的 SQL 语句</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">show</span> binlog events <span class=\"keyword\">in</span> <span class=\"string\">&#x27;binlog.000012&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"mysql-binlog-show-3.png\" alt=\"mysql-binlog-show-3\"></p>\n<p>第二列的 1300… 表示所在的位置（行数），将这几行数据复制到一个 sql 文件，执行该文件即可恢复数据。</p>\n<p>注：根据需求，可以在恢复数据的时候关闭日志。等到数据恢复后，重新打开日志</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">set</span> sql_log_bin<span class=\"operator\">=</span><span class=\"number\">0</span>;\t#临时关闭日志</span><br><span class=\"line\"><span class=\"keyword\">set</span> sql_log_bin<span class=\"operator\">=</span><span class=\"number\">1</span>;\t#打开日志</span><br></pre></td></tr></table></figure>\n<p>注意这里是 shell，不是 MySQL 中执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysqlbinlog --start-position=1300 --stop-position=1757 ./binlog.000012 &gt;./bin.sql</span><br></pre></td></tr></table></figure>\n<p>注：这里运行可能会报  <code>unknown variable 'default-character-set=utf8'</code>  的错误。加上运行参数  <code>--no-default</code>  ，或者修改配置文件。</p>\n<h3 id=\"六-索引\"><a class=\"markdownIt-Anchor\" href=\"#六-索引\">#</a> 六、索引</h3>\n<h4 id=\"61-聚簇索引\"><a class=\"markdownIt-Anchor\" href=\"#61-聚簇索引\">#</a> 6.1 聚簇索引</h4>\n<ul>\n<li>如果设置了主键，主键为聚簇索引</li>\n<li>否则第一个 NOT NULL and UNIQUE 的字段为聚簇索引</li>\n<li>默认创建一个隐藏的 row_id 为聚簇索引</li>\n</ul>\n<p>聚簇索引指向（存储）的数据是行记录（页结构）</p>\n<p><strong>InnoDB 必须包含一个聚簇索引</strong></p>\n<h4 id=\"62-普通索引\"><a class=\"markdownIt-Anchor\" href=\"#62-普通索引\">#</a> 6.2 普通索引</h4>\n<blockquote>\n<p>二级索引，非聚簇索引</p>\n</blockquote>\n<p>叶子节点存储聚簇索引字段的值</p>\n<h4 id=\"63-回表查询\"><a class=\"markdownIt-Anchor\" href=\"#63-回表查询\">#</a> 6.3 回表查询</h4>\n<blockquote>\n<p>先通过普通索引的值定位聚簇索引值，再通过聚簇索引的值定位行记录数据，需要扫描两次索引 B + 树，它的性能较扫一遍索引树更低。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"operator\">/</span><span class=\"operator\">/</span> <span class=\"keyword\">user</span>表包含 id，name，age字段，其中id为主键（聚簇索引），age为普通索引</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span> <span class=\"keyword\">where</span> age <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br></pre></td></tr></table></figure>\n<p>通过 age 的普通索引查询对应的 id，然后回表查询 id，获得对应的行（两次查询）</p>\n<h4 id=\"64-索引覆盖\"><a class=\"markdownIt-Anchor\" href=\"#64-索引覆盖\">#</a> 6.4 索引覆盖</h4>\n<blockquote>\n<p>只需要在一棵索引树上就能获取 SQL 所需的所有列数据，无需回表，速度快。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> id, age <span class=\"keyword\">from</span> <span class=\"keyword\">user</span> <span class=\"keyword\">where</span> age <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br></pre></td></tr></table></figure>\n<p><strong>如何实现覆盖索引？</strong></p>\n<ul>\n<li>\n<p>创建联合索引</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> index idx_age_name <span class=\"keyword\">on</span> <span class=\"keyword\">user</span>(`age`,`name`);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>适用范围：全表 count、分页查询</p>\n<p>索引结构：age 和 name 放在一个节点，和普通的 B+Tree 一致，比较大小时（<strong>最左匹配原则</strong>：先比较 age，再比较 name）</p>\n<h3 id=\"七-视图\"><a class=\"markdownIt-Anchor\" href=\"#七-视图\">#</a> 七、视图</h3>\n<blockquote>\n<p>作为一张虚拟表，本身不存储数据，作为一条 select 语句存储在数据字典中</p>\n<p>简化设计，可能提高性能、也可能降低性能</p>\n</blockquote>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/07/15/database/elasticsearch/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/07/15/database/elasticsearch/",
            "title": "elasticsearch",
            "date_published": "2021-07-15T15:59:27.000Z",
            "content_html": "<h2 id=\"一-介绍\"><a class=\"markdownIt-Anchor\" href=\"#一-介绍\">#</a> 一、介绍</h2>\n<blockquote>\n<p>分布式文档存储，采用 JSON 文档</p>\n</blockquote>\n<ul>\n<li>\n<p>集群中多个节点，文档分布在整个集群，任何节点可以访问文档。</p>\n</li>\n<li>\n<p>存储文档后，<strong>近实时</strong>地编入索引并完成搜索。</p>\n</li>\n<li>\n<p>倒排索引。支持全文搜索、精确搜索等</p>\n</li>\n<li>\n<p>无模式的能力（不明确字段类型的情况，映射为合适的类型）</p>\n</li>\n<li>\n<p>可拓展性和弹性（集群 -&gt; 节点 -&gt; 分片、索引）</p>\n<ul>\n<li>主分片和副本分片</li>\n<li>主分片创建时固定，副本分片可以随身更改</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\">#</a> 其他</h3>\n<h4 id=\"快捷键\"><a class=\"markdownIt-Anchor\" href=\"#快捷键\">#</a> 快捷键</h4>\n<ul>\n<li><code>ctrl + i</code>  ：格式化代码</li>\n<li><code>ctrl + enter</code> ：运行代码</li>\n</ul>\n<h2 id=\"二-安装和配置es\"><a class=\"markdownIt-Anchor\" href=\"#二-安装和配置es\">#</a> 二、安装和配置 ES</h2>\n<blockquote>\n<p>ES + kibana + plugins</p>\n</blockquote>\n<p>待补充</p>\n<h3 id=\"各配置项\"><a class=\"markdownIt-Anchor\" href=\"#各配置项\">#</a> 各配置项</h3>\n<ul>\n<li>单个分片的最大文档数： <code>2^32-1</code> （约 20 亿）。官方建议分片的大小控制在  <code>30GB - 50GB</code></li>\n</ul>\n<h2 id=\"三-api\"><a class=\"markdownIt-Anchor\" href=\"#三-api\">#</a> 三、API</h2>\n<h3 id=\"1-集群cluster\"><a class=\"markdownIt-Anchor\" href=\"#1-集群cluster\">#</a> 1. 集群（cluster）</h3>\n<h4 id=\"11-集群查询address-_local\"><a class=\"markdownIt-Anchor\" href=\"#11-集群查询address-_local\">#</a> 1.1、集群查询（address /_local）</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /_nodes/_local</span><br><span class=\"line\"></span><br><span class=\"line\">response:</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  &quot;_nodes&quot; : &#123;</span><br><span class=\"line\">    &quot;total&quot; : 1,</span><br><span class=\"line\">    &quot;successful&quot; : 1,</span><br><span class=\"line\">    &quot;failed&quot; : 0</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  &quot;cluster_name&quot; : &quot;elasticsearch&quot;,</span><br><span class=\"line\">  &quot;nodes&quot; : &#123;</span><br><span class=\"line\">    &quot;IebqG-UeTgykeuDuZsMz-w&quot; : &#123;</span><br><span class=\"line\">      &quot;name&quot; : &quot;SK-20210419SSDQ&quot;,</span><br><span class=\"line\">      &quot;transport_address&quot; : &quot;127.0.0.1:9300&quot;,</span><br><span class=\"line\">      &quot;host&quot; : &quot;127.0.0.1&quot;,</span><br><span class=\"line\">      &quot;ip&quot; : &quot;127.0.0.1&quot;,</span><br><span class=\"line\">      &quot;version&quot; : &quot;7.15.2&quot;,</span><br><span class=\"line\">      &quot;build_flavor&quot; : &quot;default&quot;,</span><br><span class=\"line\">      &quot;build_type&quot; : &quot;zip&quot;,</span><br><span class=\"line\">      &quot;build_hash&quot; : &quot;93d5a7f6192e8a1a12e154a2b81bf6fa7309da0c&quot;,</span><br><span class=\"line\">      &quot;total_indexing_buffer&quot; : 103795916,</span><br><span class=\"line\">      &quot;roles&quot; : [</span><br><span class=\"line\">        &quot;data&quot;,</span><br><span class=\"line\">        &quot;data_cold&quot;,</span><br><span class=\"line\">        &quot;data_content&quot;,</span><br><span class=\"line\">        &quot;data_frozen&quot;,</span><br><span class=\"line\">        &quot;data_hot&quot;,</span><br><span class=\"line\">        &quot;data_warm&quot;,</span><br><span class=\"line\">        &quot;ingest&quot;,</span><br><span class=\"line\">        &quot;master&quot;,</span><br><span class=\"line\">        &quot;ml&quot;,</span><br><span class=\"line\">        &quot;remote_cluster_client&quot;,</span><br><span class=\"line\">        &quot;transform&quot;</span><br><span class=\"line\">      ],</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"12-检索当前-hot-thread-的节点信息\"><a class=\"markdownIt-Anchor\" href=\"#12-检索当前-hot-thread-的节点信息\">#</a> 1.2、检索当前 hot thread 的节点信息</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">GET</span> /_nodes/hot_threads</span><br></pre></td></tr></table></figure>\n<h3 id=\"2-索引index\"><a class=\"markdownIt-Anchor\" href=\"#2-索引index\">#</a> 2. 索引（index）</h3>\n<h4 id=\"21-创建索引\"><a class=\"markdownIt-Anchor\" href=\"#21-创建索引\">#</a> 2.1、创建索引</h4>\n<blockquote>\n<p>使用 PUT 方式或者 POST 添加（索引不存在会自动创建索引）</p>\n</blockquote>\n<ul>\n<li><code>settting</code> ：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9lbi9lbGFzdGljc2VhcmNoL3JlZmVyZW5jZS9jdXJyZW50L21hcHBpbmctc2V0dGluZ3MtbGltaXQuaHRtbA==\">index 的配置项</span></li>\n<li><code>mappings</code> ：设置文档的字段类型</li>\n<li><code>aliases</code> ：为索引添加别名</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">PUT</span> &#123;index&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;index&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;number_of_shards&quot;</span>: <span class=\"number\">3</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;number_of_replicas&quot;</span>: <span class=\"number\">2</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;_doc&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;field1&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;aliases&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;alias_1&quot;</span>: &#123;&#125;,</span><br><span class=\"line\">    <span class=\"string\">&quot;alias_2&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;filter&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;term&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;user&quot;</span>: <span class=\"string\">&quot;kimchy&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;routing&quot;</span>: <span class=\"string\">&quot;kimchy&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"22-dynamic-mapping\"><a class=\"markdownIt-Anchor\" href=\"#22-dynamic-mapping\">#</a> 2.2、Dynamic Mapping</h4>\n<blockquote>\n<p>对于文档中未定义的字段，可以通过动态映射来定义是否动态添加。</p>\n</blockquote>\n<p>类型通过字段的值动态推算，需要注意的几个：</p>\n<table>\n<thead>\n<tr>\n<th><code>JSON DataType</code></th>\n<th><code>Elasticsearch datatype</code></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>integer</td>\n<td>long</td>\n</tr>\n<tr>\n<td>array</td>\n<td>第一个非空的 value 的类型数组</td>\n</tr>\n<tr>\n<td>string</td>\n<td>text</td>\n</tr>\n<tr>\n<td>浮点数</td>\n<td>float</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><code>dynamic</code> ：是否开启 动态 Mapping（false、true、7 + 版本添加 runtime）</li>\n<li><code>date_detection</code> ：是否开启 date 类型转换</li>\n<li><code>dynamic_date_formats</code> ：动态将字符串转为 date 类型，这样只有这种格式会转换为 date 类型</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">PUT</span> my_index</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;_doc&quot;</span>: &#123;</span><br><span class=\"line\">\t  <span class=\"string\">&quot;dynamic&quot;</span>: <span class=\"literal\">true</span>\t\t</span><br><span class=\"line\">      <span class=\"string\">&quot;date_detection&quot;</span>: <span class=\"literal\">true</span>\t\t\t\t</span><br><span class=\"line\">      <span class=\"string\">&quot;dynamic_date_formats&quot;</span>: [<span class=\"string\">&quot;MM/dd/yyyy&quot;</span>]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"runtime-fields-和-script-fields\"><a class=\"markdownIt-Anchor\" href=\"#runtime-fields-和-script-fields\">#</a> Runtime Fields 和 Script Fields</h4>\n<ul>\n<li>\n<p>Runtime Fields：运行时字段，可以用于聚合、排序等操作，查询时效率会略微降低（字段值运行时计算），减少磁盘的存储（不被存储和索引）。</p>\n<p>试用场景：日志</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">PUT</span> students/_mapping</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;runtime&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;score_flag&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;keyword&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;script&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;source&quot;</span>: <span class=\"string\">&quot;if (doc[&#x27;score&#x27;].value &gt; 90) emit(&#x27;A&#x27;); else if(doc[&#x27;score&#x27;].value &gt; 75) emit(&#x27;B&#x27;); else if(doc[&#x27;score&#x27;].value &gt; 60) return emit(&#x27;C&#x27;); else emit(&#x27;D&#x27;);&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable constant_\">GET</span> students/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">// 不设置该属性查询时不会显示运行时字段</span></span><br><span class=\"line\">  <span class=\"string\">&quot;fields&quot;</span> : [<span class=\"string\">&quot;*&quot;</span>],</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<ul>\n<li>\n<p>Script Fields：脚本字段，不可用于聚合等操作，数据查询时进行操作。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> students/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;script_fields&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;score_flag&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;script&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;lang&quot;</span>: <span class=\"string\">&quot;painless&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;source&quot;</span>: <span class=\"string\">&quot;if (doc[&#x27;score&#x27;].value &gt; 90) return &#x27;A&#x27;; else if(doc[&#x27;score&#x27;].value &gt; 75) return &#x27;B&#x27;; else if(doc[&#x27;score&#x27;].value &gt; 60) return &#x27;C&#x27;; else return &#x27;D&#x27;;&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<h4 id=\"23-查询索引\"><a class=\"markdownIt-Anchor\" href=\"#23-查询索引\">#</a> 2.3、查询索引</h4>\n<h5 id=\"查询索引是否存在\"><a class=\"markdownIt-Anchor\" href=\"#查询索引是否存在\">#</a> 查询索引是否存在</h5>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">head /customer</span><br></pre></td></tr></table></figure>\n<h5 id=\"表格形式返回索引信息\"><a class=\"markdownIt-Anchor\" href=\"#表格形式返回索引信息\">#</a> 表格形式返回索引信息</h5>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">GET</span> /_cat/indices</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">response</span>:</span><br><span class=\"line\">healthy status index\t\t\t\t\t\t   uuid\t\t\t\t\t  pri rep docs.<span class=\"property\">count</span> docs.<span class=\"property\">deleted</span> store.<span class=\"property\">size</span> pri.<span class=\"property\">store</span>.<span class=\"property\">size</span></span><br><span class=\"line\">green   open   .<span class=\"property\">geoip_databases</span>                F0S_AfxbS4qnRfmUZYGyBg <span class=\"number\">1</span>   <span class=\"number\">0</span>   <span class=\"number\">42</span>         <span class=\"number\">39</span>           <span class=\"number\">40.</span>6mb     <span class=\"number\">40.</span>6mb</span><br><span class=\"line\">yellow open    my_index_01                     <span class=\"title class_\">HU0</span>-D83QQMasMtdlfPIUAw <span class=\"number\">1</span>   <span class=\"number\">1</span>   <span class=\"number\">0</span>          <span class=\"number\">0</span>            230b       230b</span><br><span class=\"line\">yellow open  chapter                         nouKVwjsToaPqQR4QS4D-w <span class=\"number\">1</span> <span class=\"number\">1</span>  <span class=\"number\">3</span>     <span class=\"number\">0</span>  <span class=\"number\">8.</span>7kb  <span class=\"number\">8.</span>7kb</span><br><span class=\"line\">yellow close my_index_02                     to-6fbc0QsyMsBuwyOELKA <span class=\"number\">1</span> <span class=\"number\">1</span>                       </span><br><span class=\"line\">green  open  .<span class=\"property\">apm</span>-custom-link                zCu-<span class=\"title class_\">FR7</span>oR3CLVvdEp-<span class=\"variable constant_\">JSRQ</span> <span class=\"number\">1</span> <span class=\"number\">0</span>  <span class=\"number\">0</span>     <span class=\"number\">0</span>   208b   208b</span><br><span class=\"line\">yellow open  schools                         8YMa4HV0T1CxvZSVcEVoWw <span class=\"number\">1</span> <span class=\"number\">1</span>  <span class=\"number\">1</span>     <span class=\"number\">0</span>  <span class=\"number\">4.</span>6kb  <span class=\"number\">4.</span>6kb</span><br><span class=\"line\">green  open  .<span class=\"property\">kibana</span>-event-log-<span class=\"number\">7.15</span><span class=\"number\">.2</span>-<span class=\"number\">000001</span> <span class=\"title class_\">WloRRcBOSfOmeS</span>-<span class=\"title class_\">Sc8N3</span>vw <span class=\"number\">1</span> <span class=\"number\">0</span>  <span class=\"number\">2</span>     <span class=\"number\">0</span> <span class=\"number\">11.</span>9kb <span class=\"number\">11.</span>9kb</span><br><span class=\"line\">green  open  .<span class=\"property\">apm</span>-agent-configuration        Y9bRJgbiR06TwsQzCQqG4g <span class=\"number\">1</span> <span class=\"number\">0</span>  <span class=\"number\">0</span>     <span class=\"number\">0</span>   208b   208b</span><br><span class=\"line\">green  open  .<span class=\"property\">kibana_pre6</span><span class=\"number\">.5</span><span class=\"number\">.0_001</span>            L8NwjI1bSPGfA7XfPVWGgA <span class=\"number\">1</span> <span class=\"number\">0</span>  <span class=\"number\">1</span>     <span class=\"number\">0</span>  <span class=\"number\">5.</span>5kb  <span class=\"number\">5.</span>5kb</span><br><span class=\"line\">green  open  .<span class=\"property\">kibana_7</span><span class=\"number\">.15</span><span class=\"number\">.2_001</span>              7nAFYuyRSa6Tj5tGbM85bg <span class=\"number\">1</span> <span class=\"number\">0</span> <span class=\"number\">47</span>    <span class=\"number\">16</span>  <span class=\"number\">2.</span>3mb  <span class=\"number\">2.</span>3mb</span><br><span class=\"line\">green  open  .<span class=\"property\">tasks</span>                          1zbUv88mTim-<span class=\"number\">0</span>--gLetpTQ <span class=\"number\">1</span> <span class=\"number\">0</span>  <span class=\"number\">4</span>     <span class=\"number\">0</span> <span class=\"number\">27.</span>2kb <span class=\"number\">27.</span>2kb</span><br><span class=\"line\">green  open  .<span class=\"property\">kibana_task_manager_7</span><span class=\"number\">.15</span><span class=\"number\">.2_001</span> <span class=\"title class_\">Adr8ANIjRiWtSbFVo2PGGg</span> <span class=\"number\">1</span> <span class=\"number\">0</span> <span class=\"number\">15</span> <span class=\"number\">11785</span>  <span class=\"number\">1.</span>5mb  <span class=\"number\">1.</span>5mb</span><br></pre></td></tr></table></figure>\n<h4 id=\"24-打开和关闭索引\"><a class=\"markdownIt-Anchor\" href=\"#24-打开和关闭索引\">#</a> 2.4、打开和关闭索引</h4>\n<ul>\n<li>关闭索引：只显示元数据，不能够读写数据</li>\n<li>打开索引：允许读写（正常操作）</li>\n</ul>\n<h4 id=\"25-索引生命周期和滚动索引rollover\"><a class=\"markdownIt-Anchor\" href=\"#25-索引生命周期和滚动索引rollover\">#</a> 2.5、索引生命周期和滚动索引（rollover）</h4>\n<blockquote>\n<p>滚动索引是  <code>5.X</code>  之后推出的 API，解决以日期作为索引名称大小不均匀的问题</p>\n</blockquote>\n<p>索引的生命周期（ILM）和 冷热架构</p>\n<ul>\n<li>热接点（Hot）：用户最关心的热数据</li>\n<li>温节点（Warm）：存放前一段时间沉淀的热数据</li>\n<li>冷接点（Cold）：用户不太关心的数据，或者很久前的数据</li>\n<li><code>frozen</code></li>\n<li><code>delete</code></li>\n</ul>\n<p>磁盘数据不足时优先删除冷接点数据，硬件资源不足时，热接点优先使用 SSD</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">PUT</span> my-index-<span class=\"number\">2021.12</span><span class=\"number\">.27</span>-<span class=\"number\">000001</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;aliases&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;my-alias&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;is_write_index&quot;</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable constant_\">POST</span> my-alias/_rollover</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;conditions&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;max_age&quot;</span>: <span class=\"string\">&quot;7d&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;max_docs&quot;</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;max_size&quot;</span>: <span class=\"string\">&quot;5gb&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>需要注意配置索引的别名时，必须配置  <code>is_write_index:true</code> ，rollover 只能用于  <code>alias</code>  和  <code>data stream</code>  ，索引名也需要设置为  <code>*-00001</code>  类似的格式，这样 rollover 的时候索引名可以累加，否则会报错。</p>\n<p>上述配置中，当索引满足任意一个条件都会生成新的索引（时间间隔超过 7 天 或 最大文档超过 100 个 或 文档总大小超过 5GB）</p>\n<h4 id=\"26-冻结或解除索引freeze\"><a class=\"markdownIt-Anchor\" href=\"#26-冻结或解除索引freeze\">#</a> 2.6、冻结或解除索引（freeze）</h4>\n<blockquote>\n<p>冻结索引后，当前索引不占用内存空间，只占用磁盘。索引可以被查询（效率较低），通常使用在快速缓解集群内存使用率过高的情况导致的熔断上。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> &#123;index_name&#125;/_freeze</span><br><span class=\"line\"><span class=\"variable constant_\">POST</span> &#123;index_name&#125;/_unfreeze</span><br></pre></td></tr></table></figure>\n<h4 id=\"27-重构索引reindex\"><a class=\"markdownIt-Anchor\" href=\"#27-重构索引reindex\">#</a> 2.7、重构索引（ <code>reindex</code> ）</h4>\n<blockquote>\n<p>常用在字段类型变更、分片数量变更、迁移索引等场景。 <code>reindex</code>  执行过程中<strong>索引需要停止写入</strong>，否则会出现数据不一致的问题，如果索引数据量较大，需要添加  <code>wait_for_completion=false</code> ，这样调用 <code>Reindex API</code>  时就异步执行并返回一个  <code>taskId</code>  。我们可以通过该  <code>taskId</code>  来查看  <code>reindex</code>  状态甚至取消该 task</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> _reindex</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;source&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;index&quot;</span>: <span class=\"string\">&quot;&#123;source_index_name&#125;&quot;</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;dest&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;index&quot;</span>: <span class=\"string\">&quot;&#123;dest_index_name&#125;&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"3-文档doc\"><a class=\"markdownIt-Anchor\" href=\"#3-文档doc\">#</a> 3. 文档（doc）</h3>\n<h4 id=\"31-创建和修改文档\"><a class=\"markdownIt-Anchor\" href=\"#31-创建和修改文档\">#</a> 3.1、创建和修改文档</h4>\n<h5 id=\"311创建修改单个文档通过id查找\"><a class=\"markdownIt-Anchor\" href=\"#311创建修改单个文档通过id查找\">#</a> 3.1.1）创建修改单个文档（通过 id 查找）</h5>\n<blockquote>\n<p>使用 POST 和 PUT 的方式添加或者修改文档，与 POST 的 _update 不同的是，如果文档已经存在，覆盖文档，而不会修改文档对应的字段</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> &#123;index&#125;/_doc/&#123;id&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable constant_\">PUT</span> &#123;index&#125;/_doc/&#123;id&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"312query形式修改文档\"><a class=\"markdownIt-Anchor\" href=\"#312query形式修改文档\">#</a> 3.1.2）query 形式修改文档</h5>\n<p>待补充</p>\n<h5 id=\"313批量操作文档_bulk\"><a class=\"markdownIt-Anchor\" href=\"#313批量操作文档_bulk\">#</a> 3.1.3）批量操作文档（_bulk）</h5>\n<blockquote>\n<p>支持批量覆盖、删除、添加和部分字段修改</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> &#123;index&#125;/_bulk?refresh</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;index&quot;</span>:&#123;<span class=\"string\">&quot;_id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>&#125;&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;field&quot;</span>:<span class=\"string\">&quot;TEXT&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"string\">&quot;delete&quot;</span>:&#123;<span class=\"string\">&quot;_id&quot;</span>:<span class=\"string\">&quot;2&quot;</span>&#125;&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"string\">&quot;create&quot;</span>:&#123;<span class=\"string\">&quot;_id&quot;</span>:<span class=\"string\">&quot;3&quot;</span>&#125;&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;field&quot;</span>:<span class=\"string\">&quot;value&quot;</span>&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;<span class=\"string\">&quot;update&quot;</span>:&#123;<span class=\"string\">&quot;_id&quot;</span>:<span class=\"string\">&quot;1&quot;</span>&#125;&#125;</span><br><span class=\"line\">&#123;<span class=\"string\">&quot;doc&quot;</span>:&#123;<span class=\"string\">&quot;field&quot;</span>:<span class=\"string\">&quot;value&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"32-搜索文档\"><a class=\"markdownIt-Anchor\" href=\"#32-搜索文档\">#</a> 3.2、搜索文档</h4>\n<h5 id=\"321_search-搜索\"><a class=\"markdownIt-Anchor\" href=\"#321_search-搜索\">#</a> 3.2.1） <code>_search</code>  搜索</h5>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">GET</span> &#123;index&#125;/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;match&quot;</span>: &#123;<span class=\"string\">&quot;address&quot;</span>:<span class=\"string\">&quot;mill lane&quot;</span>&#125;\t<span class=\"comment\">// 匹配到mill或者lane</span></span><br><span class=\"line\">      <span class=\"string\">&quot;match_phrase&quot;</span>: &#123;<span class=\"string\">&quot;address&quot;</span>: <span class=\"string\">&quot;mill lane&quot;</span>&#125;\t<span class=\"comment\">// 匹配到mill lane这条语句</span></span><br><span class=\"line\">      <span class=\"string\">&quot;bool&quot;</span>: &#123;<span class=\"string\">&quot;must&quot;</span>:[], <span class=\"string\">&quot;must_not&quot;</span>:[], <span class=\"string\">&quot;should&quot;</span>:[]&#125;</span><br><span class=\"line\">  &#125;,\t<span class=\"comment\">// 查询，类似where</span></span><br><span class=\"line\">  <span class=\"string\">&quot;sort&quot;</span>: [],\t<span class=\"comment\">// 排序</span></span><br><span class=\"line\">  <span class=\"string\">&quot;from&quot;</span>: <span class=\"number\">0</span>,\t<span class=\"comment\">// 分页</span></span><br><span class=\"line\">  <span class=\"string\">&quot;size&quot;</span>: <span class=\"number\">20</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">response：</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;took&quot;</span> : <span class=\"number\">3</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;timed_out&quot;</span> : <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;_shards&quot;</span> : &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;total&quot;</span> : <span class=\"number\">5</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;successful&quot;</span> : <span class=\"number\">5</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;skipped&quot;</span> : <span class=\"number\">0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;failed&quot;</span> : <span class=\"number\">0</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&quot;hits&quot;</span> : &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;total&quot;</span> : <span class=\"number\">1</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;max_score&quot;</span> : <span class=\"number\">1.0</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;hits&quot;</span> : [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;_index&quot;</span> : <span class=\"string\">&quot;customer&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;_type&quot;</span> : <span class=\"string\">&quot;_doc&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;_id&quot;</span> : <span class=\"string\">&quot;1&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;_score&quot;</span> : <span class=\"number\">1.0</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;_source&quot;</span> : &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;name&quot;</span> : <span class=\"string\">&quot;zcx&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;sno&quot;</span> : <span class=\"string\">&quot;31701028&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 精准查询schools索引中，username=zcx的数据</span></span><br><span class=\"line\"><span class=\"variable constant_\">GET</span> schools/_search?q=<span class=\"attr\">username</span>:zcx</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>took</code> ：执行时间（毫秒）</li>\n<li><code>time_out</code> ：请求是否超时</li>\n<li><code>_shards</code> ：分片总数、成功、失败、跳过</li>\n<li><code>max_score</code> ：最相关文档的总数</li>\n<li><code>hits</code> ：命中</li>\n</ul>\n<p><strong>query</strong></p>\n<ul>\n<li>\n<p><code>wildcard query</code> （查询速度可能会较慢，尽量防止通配符出现在开头位置）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;wildcard&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;test*&quot;</span></span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>通配符 * ：类似 MySQL【 <code>where field like 'test%'</code> 】</li>\n<li>通配符？：类似 MySQL【 <code>where field like 'test_'</code> 】</li>\n</ul>\n</li>\n<li>\n<p><code>prefix query</code></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;prefix&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: <span class=\"string\">&quot;test&quot;</span></span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>等价于  <code>&quot;wildcard&quot;: &#123;&quot;name&quot;: &quot;test*&quot;&#125;</code></p>\n</li>\n<li>\n<p><code>fuzzy query</code></p>\n<p>模糊查询使用基于 Levenshtein 编辑距离的相似度，用于查询误拼写的 fuzzy 模糊搜索技术。</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;fuzzy&quot;</span> : &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;name&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;value&quot;</span>: <span class=\"string\">&quot;test&quot;</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;fuzziness&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;prefix_length&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">                <span class=\"string\">&quot;max_expansions&quot;</span>: <span class=\"number\">100</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>fuzziness：最大编辑距离【一个字符串变成另一个字符串的需要操作的步数】。默认为 AUTO</li>\n<li>prefix_length：不会被初始化的字符串。默认为 0</li>\n<li>max_expansions：控制与前缀匹配的词的数量。默认为 50</li>\n<li>transpositions：是否支持模糊转置（ab → ba）。默认为 false</li>\n</ul>\n</li>\n<li>\n<p><code>boolean query</code></p>\n<ul>\n<li><code>must</code> ：查询条件必须出现在文档中，并计算分数。使用  <code>match_all</code>  返回全部，score 全部为 1.0</li>\n<li><code>filter</code> ：与 must 类似。但不计算分数，同时 filter 的计算结果可以缓存</li>\n<li><code>should</code> ：查询条件应该出现在文档，并计算分数。通过  <code>minimum_should_match </code>  设置满足 should 几个条件，当设置为 0 时，可以不满足任何 should 也可以被查询</li>\n<li><code>must_not</code> ：查询条件必须不出现在文档，不会计算分数，结果可以被缓存</li>\n</ul>\n</li>\n<li>\n<p><code>boosting query</code></p>\n</li>\n<li></li>\n</ul>\n<h5 id=\"322获取索引相关的统计数据\"><a class=\"markdownIt-Anchor\" href=\"#322获取索引相关的统计数据\">#</a> 3.2.2）获取索引相关的统计数据</h5>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">GET</span> /school/_stats</span><br></pre></td></tr></table></figure>\n<h5 id=\"323分页搜索\"><a class=\"markdownIt-Anchor\" href=\"#323分页搜索\">#</a> 3.2.3）分页搜索</h5>\n<ul>\n<li>\n<p><strong>From + Size 查询</strong></p>\n<ul>\n<li>from：未指定，<strong>默认为 0</strong>，指第一个数据的 index（与传统的第几页不同）</li>\n<li>size：未指定，默认为 10</li>\n</ul>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">GET</span> students/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;from&quot;</span>: <span class=\"number\">1</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;size&quot;</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>优点：支持随机翻页</p>\n<p>缺点：</p>\n<ul>\n<li>受制于  <code>max_result_window</code>  的设置（from + size &lt; max_result_window），不能无限翻页，默认为 10000。</li>\n<li>存在深度翻页的问题（from 前面的数据也会查出），越往后翻页越慢。</li>\n</ul>\n<p>搜素一般会跨越分片进行搜索，每个分片必须将其请求的命中内容以及任何先前页面的命中内容加载到内存（将 from + size 的文档加载到内存）。大量消耗内存和 CPU 使用率。</p>\n</li>\n<li>\n<p><strong>search_after 查询（推荐使用）</strong></p>\n<blockquote>\n<p>使用前一页的一组排序来检索下一页的排序</p>\n</blockquote>\n<p>前置条件：使用 search_after 要求后续的多个请求返回与第一次查询相同的排序结果序列。也就是说，即便在后续翻页的过程中，可能会有新数据写入等操作，但这些操作不会对原有结果集构成影响。</p>\n<p>实现：创建一个 Point in Time（PIT，类似快照的方式，在 7.10 之后才有的新特性）</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> students/_pit?keep_alive=1m</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> _search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;track_total_hits&quot;</span>: <span class=\"literal\">true</span>, </span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class=\"line\">  &#125;, </span><br><span class=\"line\">   <span class=\"string\">&quot;pit&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">&quot;xxx&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>keep_alive 过期是报错而不是重新创建新的 PIT？</p>\n<p>返回的 sort，第一个字段表示排序方式，以某个字段升序或者降序排序的意思；第二个字段为 tiebreaker（参考官方文档）</p>\n<p>缺点：只支持向后翻页</p>\n</li>\n<li>\n<p><strong>scroll</strong></p>\n<blockquote>\n<p>适用于遍历查询，搜索大量结果甚至于所有结果</p>\n</blockquote>\n<p>搜索时创建一个快照</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> students/_search?scroll=3m</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;size&quot;</span>: <span class=\"number\">100</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;match_all&quot;</span>: &#123;&#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable constant_\">POST</span> _search/scroll                                   </span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;scroll&quot;</span> : <span class=\"string\">&quot;3m&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;scroll_id&quot;</span>:<span class=\"string\">&quot;xxx&quot;</span> </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>非实时的响应，同时快照需要消耗大量堆内存</p>\n</li>\n</ul>\n<h4 id=\"33-聚合分析\"><a class=\"markdownIt-Anchor\" href=\"#33-聚合分析\">#</a> 3.3、聚合分析</h4>\n<blockquote>\n<p>底层使用倒排索引 + 正排索引（参考四 - 2 和 3）</p>\n</blockquote>\n<p>aggs → name（自定义）→ type（histogram、terms 等）→ 聚合字典、其他信息</p>\n<h5 id=\"331bucket-aggregations桶聚合\"><a class=\"markdownIt-Anchor\" href=\"#331bucket-aggregations桶聚合\">#</a> 3.3.1）bucket aggregations（桶聚合）</h5>\n<h5 id=\"332histogram-aggregations直方图统计\"><a class=\"markdownIt-Anchor\" href=\"#332histogram-aggregations直方图统计\">#</a> 3.3.2）histogram aggregations（直方图统计）</h5>\n<blockquote>\n<p>根据指定的间隔构造存储桶。值应该放入哪个桶？向下舍入最接近的间隔存储桶</p>\n<p>bucket_key = Math.floor((value - offset) / interval) * interval + offset</p>\n</blockquote>\n<p><strong>时间间隔必须为正十进制数，而偏移量必须为 [0，offset] 范围内的十进制</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> students/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;size&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;aggs&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;score_histogram&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;histogram&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;field&quot;</span>: <span class=\"string\">&quot;score&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;interval&quot;</span>: <span class=\"number\">20</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">response</span>:</span><br><span class=\"line\"><span class=\"string\">&quot;aggregations&quot;</span> : &#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;score_histogram&quot;</span> : &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;buckets&quot;</span> : [</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;key&quot;</span> : <span class=\"number\">40.0</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;doc_count&quot;</span> : <span class=\"number\">1</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;key&quot;</span> : <span class=\"number\">60.0</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;doc_count&quot;</span> : <span class=\"number\">2</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;key&quot;</span> : <span class=\"number\">80.0</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;doc_count&quot;</span> : <span class=\"number\">2</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    ]</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"333terms-aggregations术语聚合\"><a class=\"markdownIt-Anchor\" href=\"#333terms-aggregations术语聚合\">#</a> 3.3.3）Terms aggregations（术语聚合）</h5>\n<blockquote>\n<p>搜索指定字段的唯一值构建存储桶。</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">GET</span> students/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;size&quot;</span>: <span class=\"number\">0</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;aggs&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;names&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;terms&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;field&quot;</span>: <span class=\"string\">&quot;score&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;size&quot;</span>: <span class=\"number\">10</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"34-数据类型datatype\"><a class=\"markdownIt-Anchor\" href=\"#34-数据类型datatype\">#</a> 3.4、数据类型（dataType）</h4>\n<h5 id=\"341nested-datatype-object-datatype\"><a class=\"markdownIt-Anchor\" href=\"#341nested-datatype-object-datatype\">#</a> 3.4.1）Nested dataType &amp; Object dataType</h5>\n<blockquote>\n<p>arrays of objects can be indexed</p>\n</blockquote>\n<p>主要用于查询某个对象或者对象数组字段下的某个字段值</p>\n<p><em>username 使用 Object dataType，cources 使用 nested dataType</em></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">PUT</span> students2000</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;username&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;properties&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;first&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">          &#125;,</span><br><span class=\"line\">          <span class=\"string\">&quot;last&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;text&quot;</span></span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;cources&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;nested&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查询</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">GET</span> students2000/_search</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;nested&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;path&quot;</span>: <span class=\"string\">&quot;cources&quot;</span>,</span><br><span class=\"line\">      <span class=\"string\">&quot;query&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;bool&quot;</span>: &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;must&quot;</span>: [</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;match&quot;</span>: &#123;</span><br><span class=\"line\">                <span class=\"string\">&quot;cources.name&quot;</span>: <span class=\"string\">&quot;chinese&quot;</span></span><br><span class=\"line\">              &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          ]</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"4-模板template\"><a class=\"markdownIt-Anchor\" href=\"#4-模板template\">#</a> 4. 模板（template）</h3>\n<h4 id=\"41-dynamic-template\"><a class=\"markdownIt-Anchor\" href=\"#41-dynamic-template\">#</a> 4.1、Dynamic template</h4>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">PUT</span> my_index</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;mappings&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;_doc&quot;</span>: &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;dynamic_templates&quot;</span>: [</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;integers&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;match_mapping_type&quot;</span>: <span class=\"string\">&quot;long&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;mapping&quot;</span>: &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;integer&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;longs_as_strings&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;match_mapping_type&quot;</span>: <span class=\"string\">&quot;string&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;match&quot;</span>:   <span class=\"string\">&quot;long_*&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;unmatch&quot;</span>: <span class=\"string\">&quot;*_text&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;mapping&quot;</span>: &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;long&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"string\">&quot;longs_as_pattern_strings&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;match_mapping_type&quot;</span>: <span class=\"string\">&quot;string&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;match_pattern&quot;</span>: <span class=\"string\">&quot;regex&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;match&quot;</span>: <span class=\"string\">&quot;^profit_\\\\d+$&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;mapping&quot;</span>: &#123;</span><br><span class=\"line\">              <span class=\"string\">&quot;type&quot;</span>: <span class=\"string\">&quot;long&quot;</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      ]</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"5-管道pipeline\"><a class=\"markdownIt-Anchor\" href=\"#5-管道pipeline\">#</a> 5、管道（pipeline）</h3>\n<h3 id=\"6-别名alias\"><a class=\"markdownIt-Anchor\" href=\"#6-别名alias\">#</a> 6、别名（Alias）</h3>\n<blockquote>\n<p>一个索引是一组数据流或者 index 的别名，可以在任何时刻替换数据流或 index</p>\n</blockquote>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> _aliases</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;actions&quot;</span>: [</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"string\">&quot;add&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;index&quot;</span>: <span class=\"string\">&quot;students2020&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;alias&quot;</span>: <span class=\"string\">&quot;students&quot;</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"string\">&quot;remove&quot;</span>: &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;index&quot;</span>: <span class=\"string\">&quot;students2020&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;alias&quot;</span>: <span class=\"string\">&quot;students&quot;</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  ]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-缓存cache\"><a class=\"markdownIt-Anchor\" href=\"#7-缓存cache\">#</a> 7、缓存（Cache）</h3>\n<h4 id=\"71-api\"><a class=\"markdownIt-Anchor\" href=\"#71-api\">#</a> 7.1、API</h4>\n<h5 id=\"711清除缓存\"><a class=\"markdownIt-Anchor\" href=\"#711清除缓存\">#</a> 7.1.1）清除缓存</h5>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">POST</span> /_cache/clear</span><br><span class=\"line\"><span class=\"variable constant_\">POST</span> /&#123;index&#125;/_cache/clear</span><br><span class=\"line\"><span class=\"comment\">// 清理节点查询缓存</span></span><br><span class=\"line\"><span class=\"variable constant_\">POST</span> /&#123;index&#125;/_cache/clear?query=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">// 清理reques缓存</span></span><br><span class=\"line\"><span class=\"variable constant_\">POST</span> /&#123;index&#125;/_cache/clear?request=<span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"comment\">// 清理field data缓存</span></span><br><span class=\"line\"><span class=\"variable constant_\">POST</span> /&#123;index&#125;/_cache/clear?fielddata=<span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<p><strong>缓存应用场景</strong></p>\n<table>\n<thead>\n<tr>\n<th>缓存类型</th>\n<th>缓存内容</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>节点请求缓存</td>\n<td>缓存可维护在 filter 上下文中使用的查询结果。</td>\n</tr>\n<tr>\n<td>分片请求缓存</td>\n<td>缓存 size = 0 时频繁使用的查询的结果，尤其是聚合的结果。</td>\n</tr>\n<tr>\n<td>字段请求缓存 （Field data）</td>\n<td>用于排序和支持某些字段类型上的聚合。</td>\n</tr>\n</tbody>\n</table>\n<h5 id=\"712禁用或启用缓存\"><a class=\"markdownIt-Anchor\" href=\"#712禁用或启用缓存\">#</a> 7.1.2）禁用或启用缓存</h5>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">PUT</span> &#123;index&#125;</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;settings&quot;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;index.requests.cache.enable&quot;</span>: <span class=\"literal\">false</span></span><br><span class=\"line\">  &#125;   </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"713全局查询缓存\"><a class=\"markdownIt-Anchor\" href=\"#713全局查询缓存\">#</a> 7.1.3）全局查询缓存</h5>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"variable constant_\">GET</span> _cat/nodes?v&amp;h=id,queryCacheMemory,queryCacheEvictions,requestCacheMemory,requestCacheHitCount,requestCacheMissCount,flushTotal,flushTotalTime</span><br></pre></td></tr></table></figure>\n<h4 id=\"72-节点查询缓存\"><a class=\"markdownIt-Anchor\" href=\"#72-节点查询缓存\">#</a> 7.2、节点查询缓存</h4>\n<blockquote>\n<p><code>Filter</code>  或者  <code>Term</code>  查询的结果进行缓存，节点的所有分片共享，使用  <code>LRU</code>  策略</p>\n</blockquote>\n<p>默认情况下，节点查询缓存最多容纳 10000 个查询，占总堆空间的 10%</p>\n<h3 id=\"8-text-analysis\"><a class=\"markdownIt-Anchor\" href=\"#8-text-analysis\">#</a> 8、Text analysis</h3>\n<h4 id=\"81-概念concept\"><a class=\"markdownIt-Anchor\" href=\"#81-概念concept\">#</a> 8.1、概念（concept）</h4>\n<h5 id=\"81-词干stemmer\"><a class=\"markdownIt-Anchor\" href=\"#81-词干stemmer\">#</a> 8.1、词干（Stemmer）</h5>\n<p>查询时词干分析将单词还原为词根，两个具有相同词根的不同单词可以搜索出来（例： <code>working</code>  和  <code>worked</code> ）</p>\n<p><code>stemmer token filters</code></p>\n<h5 id=\"82-token-graph\"><a class=\"markdownIt-Anchor\" href=\"#82-token-graph\">#</a> 8.2、token graph</h5>\n<ul>\n<li>position：每个词（token）的位置</li>\n<li>position length：词（token）跨域的间距</li>\n</ul>\n<p>相似语句【synonyms】（例：fast car 和 quick car）</p>\n<p><code>Multi-position tokens</code> （例：简称，domain name system 和 dns）</p>\n<h4 id=\"tokenization\"><a class=\"markdownIt-Anchor\" href=\"#tokenization\">#</a> Tokenization</h4>\n<p>将一个 text 拆分成更小的块。大部分情况下这些 token 都是一个独立的单词。</p>\n<p>text： <code>the quick brown fox jumps</code> ，查询语句  <code>quick fox</code></p>\n<p>匹配查询中独立的一些词</p>\n<h4 id=\"normalization\"><a class=\"markdownIt-Anchor\" href=\"#normalization\">#</a> Normalization</h4>\n<p>匹配近似语义的词</p>\n<ul>\n<li>大小写：big、Big</li>\n<li>前后缀</li>\n</ul>\n<h2 id=\"四-底层原理\"><a class=\"markdownIt-Anchor\" href=\"#四-底层原理\">#</a> 四、底层原理</h2>\n<h3 id=\"1-文档的创建\"><a class=\"markdownIt-Anchor\" href=\"#1-文档的创建\">#</a> 1、<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuZWxhc3RpYy5jby9ndWlkZS9jbi9lbGFzdGljc2VhcmNoL2d1aWRlL2N1cnJlbnQvdHJhbnNsb2cuaHRtbA==\">文档的创建</span></h3>\n<ul>\n<li>doc 写入到 in-memory buffer，同时将操作写入到 Translog（应该是在硬盘，防止系统中断等操作导致内存丢失，通过 Translog 复原数据）</li>\n<li>每隔一秒执行 refresh 操作：将 in-memory buffer 的数据写入到 segment（内存，查询时轮询分片的所有 segment，segment 太多会导致查询效率降低，es 会自动合并 segment 到一个大的 segment，等到大的 segment 被写入磁盘，删除所有小的 segment）</li>\n<li>每隔 30 分钟执行一次 fresh 操作（或者 Translog 太大）：将 segment 的数据存入到磁盘</li>\n</ul>\n<p><code>Translog</code> ：默认 5 秒加载被  <code>fsync</code>  加载到硬盘，或者每次写请求完成后也会执行（index、update、bulk 等）。这个过程在主分片和副本分片都会发生，因此需要等到所有操作都执行完成后才会执行  <code>200 OK</code>  的响应</p>\n<p><img data-src=\"image-20220315162821232.png\" alt=\"image-20220315162859107\"></p>\n<h3 id=\"2-倒排索引\"><a class=\"markdownIt-Anchor\" href=\"#2-倒排索引\">#</a> 2、倒排索引</h3>\n<h3 id=\"3-正排索引\"><a class=\"markdownIt-Anchor\" href=\"#3-正排索引\">#</a> 3、正排索引</h3>\n<h3 id=\"4-lucene文件与数据压缩\"><a class=\"markdownIt-Anchor\" href=\"#4-lucene文件与数据压缩\">#</a> 4、Lucene 文件与数据压缩</h3>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Extension</th>\n<th>Brief Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Segment Info</td>\n<td>.si</td>\n<td>segment 的元数据文件</td>\n</tr>\n<tr>\n<td>Compound File</td>\n<td>.cfs, .cfe</td>\n<td>一个 segment 包含了如下表的各个文件，为减少打开文件的数量，在 segment 小的时候，segment 的所有文件内容都保存在 cfs 文件中，cfe 文件保存了 lucene 各文件在 cfs 文件的位置信息</td>\n</tr>\n<tr>\n<td>Fields</td>\n<td>.fnm</td>\n<td>保存了 fields 的相关信息</td>\n</tr>\n<tr>\n<td>Field Index</td>\n<td>.fdx</td>\n<td>正排存储文件的元数据信息</td>\n</tr>\n<tr>\n<td>Field Data</td>\n<td><strong>.fdt</strong></td>\n<td>存储了正排存储数据，写入的原文存储在这</td>\n</tr>\n<tr>\n<td>Term Dictionary</td>\n<td><strong>.tim</strong></td>\n<td>倒排索引的元数据信息</td>\n</tr>\n<tr>\n<td>Term Index</td>\n<td>.tip</td>\n<td>倒排索引文件，存储了所有的倒排索引数据</td>\n</tr>\n<tr>\n<td>Frequencies</td>\n<td>.doc</td>\n<td>保存了每个 term 的 doc id 列表和 term 在 doc 中的词频</td>\n</tr>\n<tr>\n<td>Positions</td>\n<td>.pos</td>\n<td>Stores position information about where a term occurs in the index 全文索引的字段，会有该文件，保存了 term 在 doc 中的位置</td>\n</tr>\n<tr>\n<td>Payloads</td>\n<td>.pay</td>\n<td>Stores additional per-position metadata information such as character offsets and user payloads 全文索引的字段，使用了一些像 payloads 的高级特性会有该文件，保存了 term 在 doc 中的一些高级特性</td>\n</tr>\n<tr>\n<td>Norms</td>\n<td>.nvd, .nvm</td>\n<td>文件保存索引字段加权数据</td>\n</tr>\n<tr>\n<td>Per-Document Values</td>\n<td><strong>.dvd, .dvm</strong></td>\n<td>lucene 的 docvalues 文件，即数据的列式存储，用作聚合和排序</td>\n</tr>\n<tr>\n<td>Term Vector Data</td>\n<td>.tvx, .tvd, .tvf</td>\n<td>Stores offset into the document data file 保存索引字段的矢量信息，用在对 term 进行高亮，计算文本相关性中使用</td>\n</tr>\n<tr>\n<td>Live Documents</td>\n<td>.liv</td>\n<td>记录了 segment 中删除的 doc</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"5-索引的压缩机制\"><a class=\"markdownIt-Anchor\" href=\"#5-索引的压缩机制\">#</a> 5、索引的压缩机制</h3>\n<ul>\n<li>\n<p>在倒排索引的基础上建立词典索引（term index）</p>\n<p>为什么需要词典索引？倒排索引创建好词典元素是排好序的，可以通过二分查找快速筛选；但是 ES 的索引是放在内存中的（为了提高效率），因此需要词典索引提交查询效率和压缩大小（主要目的）。</p>\n<p>词典索引使用 <strong>有限状态机</strong>。部分前缀使用有向图的方式。图不会包含所有的 term，只会包含 term 的前缀，通过前缀快速定位到指定的 block，block 中也只会存储去除前缀的部分，大大提高空间利用率。</p>\n</li>\n<li></li>\n</ul>\n<h3 id=\"6-计算文档相关性得分算法\"><a class=\"markdownIt-Anchor\" href=\"#6-计算文档相关性得分算法\">#</a> 6、计算文档相关性得分算法</h3>\n<blockquote>\n<p><code>TF-IDF</code>  算法（词频、逆文档频率）</p>\n</blockquote>\n<ul>\n<li>词频：所查找的单词在文档种出现的次数越多，得分越高。</li>\n<li>逆文档词频：如果某个单词在所有文档中比较少见，那么该词的权重越高，得分也越高。</li>\n</ul>\n<h2 id=\"五-elasticsearch-对比-solr\"><a class=\"markdownIt-Anchor\" href=\"#五-elasticsearch-对比-solr\">#</a> 五、elasticsearch 对比 solr</h2>\n<h3 id=\"configuration\"><a class=\"markdownIt-Anchor\" href=\"#configuration\">#</a> Configuration</h3>\n<ul>\n<li>es 所有配置保存在 <em>elasticsearch.yml</em>；但是 es 的配置可以通过 API 进行修改</li>\n<li>solr 所有配置保存在 <em>solrconfig.xml</em></li>\n<li>修改配置文件都需要重启生效</li>\n</ul>\n<h3 id=\"node-discovery\"><a class=\"markdownIt-Anchor\" href=\"#node-discovery\">#</a> Node Discovery</h3>\n<ul>\n<li>es 采用自带的 Zen；主节点可以作为协调节点只负责集群的管理</li>\n<li>Solr 使用 zookeeper 集成；zk 负责数据监控和存储配置文件</li>\n</ul>\n<h3 id=\"shard-placement\"><a class=\"markdownIt-Anchor\" href=\"#shard-placement\">#</a> Shard Placement</h3>\n<ul>\n<li>es 索引和分片的放置都是动态的。一个节点添加或删除，都可以动态修改分片的位置（迁移需要一定的时间）</li>\n<li>solr 更倾向于静态的。一个节点添加或删除，通过不做任何处理（solr7 之后通过 AutoScaling API 控制）</li>\n</ul>\n<h3 id=\"cache\"><a class=\"markdownIt-Anchor\" href=\"#cache\">#</a> Cache</h3>\n<ul>\n<li>es 的 cache 按 segment 进行。segment 发生变化，对应的 cache 失效，进行 refresh</li>\n<li>solr 的 cache 按分片划分。segment 发生变化，整个 cache 刷新（非常耗费时间和硬件资源）</li>\n</ul>\n",
            "tags": [
                "数据库"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/07/15/Hexo/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/07/15/Hexo/",
            "title": "Hexo",
            "date_published": "2021-07-15T15:58:00.000Z",
            "content_html": "<h2 id=\"hexo操作手册\"><a class=\"markdownIt-Anchor\" href=\"#hexo操作手册\">#</a> Hexo 操作手册</h2>\n<h3 id=\"一-建站\"><a class=\"markdownIt-Anchor\" href=\"#一-建站\">#</a> 一、建站</h3>\n<h4 id=\"11安装hexo\"><a class=\"markdownIt-Anchor\" href=\"#11安装hexo\">#</a> 1.1 安装 Hexo</h4>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install <span class=\"literal\">-g</span> hexo<span class=\"literal\">-cli</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"12-新建项目\"><a class=\"markdownIt-Anchor\" href=\"#12-新建项目\">#</a> 1.2 新建项目</h4>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init &lt;folder&gt;</span><br></pre></td></tr></table></figure>\n<h4 id=\"13-项目结构\"><a class=\"markdownIt-Anchor\" href=\"#13-项目结构\">#</a> 1.3 项目结构</h4>\n<ul>\n<li><code>_config.yml</code>  ：网站配置信息</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">参数</th>\n<th style=\"text-align:left\">描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\"><code>title</code></td>\n<td style=\"text-align:left\">网站标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>subtitle</code></td>\n<td style=\"text-align:left\">网站副标题</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>description</code></td>\n<td style=\"text-align:left\">网站描述</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>keywords</code></td>\n<td style=\"text-align:left\">网站的关键词。支持多个关键词。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>author</code></td>\n<td style=\"text-align:left\">您的名字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>language</code></td>\n<td style=\"text-align:left\">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有  <code>zh-Hans</code>  和  <code>zh-CN</code> 。</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>timezone</code></td>\n<td style=\"text-align:left\">网站时区。Hexo 默认使用您电脑的时区。请参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGlzdF9vZl90el9kYXRhYmFzZV90aW1lX3pvbmVz\">时区列表</span> 进行设置，如  <code>America/New_York</code> ,  <code>Japan</code> , 和  <code>UTC</code>  。一般的，对于中国大陆地区可以使用  <code>Asia/Shanghai</code> 。</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:left\">参数</td>\n<td style=\"text-align:left\">描述</td>\n<td>默认值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:---------------------------</td>\n<td style=\"text-align:left\">:-----------------------------------------------------------</td>\n<td>:--------------------------</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>url</code></td>\n<td style=\"text-align:left\">网址，必须以  <code>http://</code>  或  <code>https://</code>  开头</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>root</code></td>\n<td style=\"text-align:left\">网站根目录</td>\n<td><code>url's pathname</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>permalink</code></td>\n<td style=\"text-align:left\">文章的 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvcGVybWFsaW5rcw==\">永久链接</span> 格式</td>\n<td><code>:year/:month/:day/:title/</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>permalink_defaults</code></td>\n<td style=\"text-align:left\">永久链接中各部分的默认值</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>pretty_urls</code></td>\n<td style=\"text-align:left\">改写 <a href=\"https://hexo.io/zh-cn/docs/variables\"> <code>permalink</code> </a> 的值来美化 URL</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>pretty_urls.trailing_index</code></td>\n<td style=\"text-align:left\">是否在永久链接中保留尾部的  <code>index.html</code> ，设置为  <code>false</code>  时去除</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>pretty_urls.trailing_html</code></td>\n<td style=\"text-align:left\">是否在永久链接中保留尾部的  <code>.html</code> , 设置为  <code>false</code>  时去除 (<em>对尾部的  <code>index.html</code>  无效</em>)</td>\n<td><code>true</code></td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:left\">参数</td>\n<td style=\"text-align:left\">描述</td>\n<td>默认值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">--------------</td>\n<td style=\"text-align:left\">------------------------------------------------------------</td>\n<td>----------------</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>source_dir</code></td>\n<td style=\"text-align:left\">资源文件夹，这个文件夹用来存放内容。</td>\n<td><code>source</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>public_dir</code></td>\n<td style=\"text-align:left\">公共文件夹，这个文件夹用于存放生成的站点文件。</td>\n<td><code>public</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>tag_dir</code></td>\n<td style=\"text-align:left\">标签文件夹</td>\n<td><code>tags</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>archive_dir</code></td>\n<td style=\"text-align:left\">归档文件夹</td>\n<td><code>archives</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>category_dir</code></td>\n<td style=\"text-align:left\">分类文件夹</td>\n<td><code>categories</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>code_dir</code></td>\n<td style=\"text-align:left\">Include code 文件夹， <code>source_dir</code>  下的子目录</td>\n<td><code>downloads/code</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>i18n_dir</code></td>\n<td style=\"text-align:left\">国际化（i18n）文件夹</td>\n<td><code>:lang</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>skip_render</code></td>\n<td style=\"text-align:left\">跳过指定文件的渲染。匹配到的文件将会被不做改动地复制到  <code>public</code>  目录中。您可使用 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21pY3JvbWF0Y2gvbWljcm9tYXRjaCNleHRlbmRlZC1nbG9iYmluZw==\">glob 表达式</span>来匹配路径。</td>\n<td></td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\"></td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\">:----------------------</td>\n<td style=\"text-align:left\">:-----------------------------------------------------------</td>\n<td>:--------</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">参数</td>\n<td style=\"text-align:left\">描述</td>\n<td>默认值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>new_post_name</code></td>\n<td style=\"text-align:left\">新文章的文件名称</td>\n<td>:title.md</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>default_layout</code></td>\n<td style=\"text-align:left\">预设布局</td>\n<td>post</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>auto_spacing</code></td>\n<td style=\"text-align:left\">在中文和英文之间加入空格</td>\n<td>false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>titlecase</code></td>\n<td style=\"text-align:left\">把标题转换为 title case</td>\n<td>false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>external_link</code></td>\n<td style=\"text-align:left\">在新标签中打开链接</td>\n<td>true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>external_link.enable</code></td>\n<td style=\"text-align:left\">在新标签中打开链接</td>\n<td><code>true</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>external_link.field</code></td>\n<td style=\"text-align:left\">对整个网站（ <code>site</code> ）生效或仅对文章（ <code>post</code> ）生效</td>\n<td><code>site</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>external_link.exclude</code></td>\n<td style=\"text-align:left\">需要排除的域名。主域名和子域名如  <code>www</code>  需分别配置</td>\n<td><code>[]</code></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>filename_case</code></td>\n<td style=\"text-align:left\">把文件名称转换为 (1) 小写或 (2) 大写</td>\n<td>0</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>render_drafts</code></td>\n<td style=\"text-align:left\">显示草稿</td>\n<td>false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>post_asset_folder</code></td>\n<td style=\"text-align:left\">启动 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL3poLWNuL2RvY3MvYXNzZXQtZm9sZGVycw==\">Asset 文件夹</span></td>\n<td>false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>relative_link</code></td>\n<td style=\"text-align:left\">把链接改为与根目录的相对位址</td>\n<td>false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>future</code></td>\n<td style=\"text-align:left\">显示未来的文章</td>\n<td>true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>highlight</code></td>\n<td style=\"text-align:left\">代码块的设置，请参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc3ludGF4LWhpZ2hsaWdodCNIaWdobGlnaHQtanM=\">Highlight.js</span> 进行设置</td>\n<td></td>\n</tr>\n<tr>\n<td style=\"text-align:left\"><code>prismjs</code></td>\n<td style=\"text-align:left\">代码块的设置，请参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9oZXhvLmlvL2RvY3Mvc3ludGF4LWhpZ2hsaWdodCNQcmlzbUpT\">PrismJS</span> 进行设置</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><code>package.json</code>  ：应用程序信息，导入的依赖</li>\n<li><code>scaffolds</code>  ：模板文件夹</li>\n<li><code>source</code>  ：资源文件夹</li>\n<li><code>themes</code>  ：主题文件夹</li>\n</ul>\n",
            "tags": [
                "hexo"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/07/15/java/SpringBoot/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/07/15/java/SpringBoot/",
            "title": "SpringBoot",
            "date_published": "2021-07-15T15:56:32.000Z",
            "content_html": "<h2 id=\"springboot\"><a class=\"markdownIt-Anchor\" href=\"#springboot\">#</a> SpringBoot</h2>\n<h3 id=\"一-跨域问题-cors\"><a class=\"markdownIt-Anchor\" href=\"#一-跨域问题-cors\">#</a> 一、跨域问题 —— CORS</h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 拦截器和其他配置</span></span><br><span class=\"line\">WebMvcConfigurer</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addCorsMappings</span><span class=\"params\">(CorsRegistry registry)</span>;</span><br></pre></td></tr></table></figure>\n<h3 id=\"二-读取配置的几种方式\"><a class=\"markdownIt-Anchor\" href=\"#二-读取配置的几种方式\">#</a> 二、读取配置的几种方式</h3>\n<p>配置文件：Resources 下的文件，一般为 yml 文件或者 properties 文件</p>\n<ul>\n<li>\n<p>资源文件注解： <code>@PropertySource</code></p>\n</li>\n<li>\n<p>默认 yml 文件的注解： <code>@ConfigurationProperties </code></p>\n</li>\n<li>\n<p>读取对应的值： <code>@Value</code></p>\n</li>\n</ul>\n<h3 id=\"三-拦截器和过滤器\"><a class=\"markdownIt-Anchor\" href=\"#三-拦截器和过滤器\">#</a> 三、拦截器和过滤器</h3>\n<ul>\n<li>\n<p>相同点：都使用 AOP 编程思想</p>\n</li>\n<li>\n<p>不同点：</p>\n<ul>\n<li>1、Filter 是 Servlet 规范定义的，拦截器是 Spring 框架的</li>\n<li>2、过滤器在进入 tomcat 容器后，servlet 之前的预处理；拦截器在 servlet 处理后执行</li>\n<li>3、拦截器可以使用 Spring 中的各个 Bean；Filter 依赖 Servlet 容器（可以操作 Request 和 Response）</li>\n<li>4、过滤器的实现基于回调；拦截器的实现基于反射</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"四-spring-event\"><a class=\"markdownIt-Anchor\" href=\"#四-spring-event\">#</a> 四、Spring Event</h3>\n<p>观察者模式、监听器模式</p>\n<p>主要组成：事件（ApplicationEvent）、监听器（ApplicationListener）、事件发布操作（publisher 方法）</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestEvent</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ApplicationEvent</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String msg;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">TestEvent</span><span class=\"params\">(Object source, String msg)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(source);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.msg = msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getMsg</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> msg;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span>\t<span class=\"comment\">// 需要将监听器添加到Spring容器</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestEventListener</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">ApplicationListener</span>&lt;TestEvent&gt; &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">onApplicationEvent</span><span class=\"params\">(TestEvent testEvent)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;触发监听器：&quot;</span> + testEvent.getMsg());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Configuration</span><br><span class=\"line\">public class EventConfig &#123;</span><br><span class=\"line\">\t// 与上述代码实现效果一样，使用注解和接口的区别</span><br><span class=\"line\">    @EventListener(classes = &#123;TestEvent.class&#125;)\t</span><br><span class=\"line\">    public void listen(TestEvent event) &#123;</span><br><span class=\"line\">        System.out.println(&quot;触发监听器：&quot; + event.getMsg());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestPublisher</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Autowired</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ApplicationEventPublisher publisher;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">publish</span><span class=\"params\">(String msg)</span> &#123;</span><br><span class=\"line\">        publisher.publishEvent(<span class=\"keyword\">new</span> <span class=\"title class_\">TestEvent</span>(<span class=\"built_in\">this</span>, msg));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"其他\"><a class=\"markdownIt-Anchor\" href=\"#其他\">#</a> 其他</h3>\n<h4 id=\"一-servlet主要处理-doget和dopost\"><a class=\"markdownIt-Anchor\" href=\"#一-servlet主要处理-doget和dopost\">#</a> 一、Servlet 主要处理 doGet 和 doPost</h4>\n<h4 id=\"配置文件脱敏\"><a class=\"markdownIt-Anchor\" href=\"#配置文件脱敏\">#</a> 配置文件脱敏</h4>\n<h5 id=\"260版本前可以使用-jasypt\"><a class=\"markdownIt-Anchor\" href=\"#260版本前可以使用-jasypt\">#</a> 2.6.0 版本前可以使用  <code>jasypt</code></h5>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>com.github.ulisesbocchio<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>jasypt-spring-boot-starter<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>3.0.3<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p><strong>配置密钥</strong></p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">jasypt:</span></span><br><span class=\"line\">  <span class=\"attr\">encryptor:</span></span><br><span class=\"line\">    <span class=\"attr\">password:</span> <span class=\"string\">XXX</span></span><br></pre></td></tr></table></figure>\n<p><strong>密钥放在配置文件也不是一件很安全的事情，可以通过启动时传参</strong></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar xxx.jar -Djasypt.encryptor.password=***</span><br></pre></td></tr></table></figure>\n<p><strong>对需要加密的属性进行加密</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Autowired</span></span><br><span class=\"line\"><span class=\"keyword\">private</span> StringEncryptor encryptor;</span><br><span class=\"line\">encryptor.encrypt(<span class=\"string\">&quot;xxx&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>如果遇到以下异常</p>\n<figure class=\"highlight tex\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Encryption raised an exception. A possible cause is you are using strong encryption algorithms and you have not installed the Java Cryptography Extension (JCE) Unlimited Strength Jurisdiction Policy Files in this Java Virtual Machine</span><br></pre></td></tr></table></figure>\n<p>下载  <code>jce_policy-8</code> ，将文件放到对应的  <code>jre/lib/security</code>  路径下，覆盖原有的文件</p>\n<p><strong>加密后的密文写入配置</strong></p>\n<p>通过 ENC () 包裹密文并写入</p>\n<h5 id=\"260-后使用-sanitizingfunction\"><a class=\"markdownIt-Anchor\" href=\"#260-后使用-sanitizingfunction\">#</a> 2.6.0+ 后使用  <code>SanitizingFunction</code></h5>\n<p>springboot 的接口，可以自定义指定配置文件的指定规则，对配置文件进行脱敏。</p>\n<p>还在研究中，目前启动并没有执行里面的代码</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Configuration</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MySanitizingFunction</span> &#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"meta\">@Bean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> SanitizingFunction <span class=\"title function_\">sanitizingFunction</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> data -&gt; &#123;</span><br><span class=\"line\">            PropertySource&lt;?&gt; propertySource = data.getPropertySource();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (propertySource.getName().contains(<span class=\"string\">&quot;xxx&quot;</span>)) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// 执行相关操作</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> data;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "java"
            ]
        },
        {
            "id": "https://ceilzcx.github.io/hexo-blog/2021/07/15/java/Java/",
            "url": "https://ceilzcx.github.io/hexo-blog/2021/07/15/java/Java/",
            "title": "Java",
            "date_published": "2021-07-15T15:54:38.000Z",
            "content_html": "<h2 id=\"java语言\"><a class=\"markdownIt-Anchor\" href=\"#java语言\">#</a> Java 语言</h2>\n<h3 id=\"java基础\"><a class=\"markdownIt-Anchor\" href=\"#java基础\">#</a> Java 基础</h3>\n<h4 id=\"一-int-和-integer-区别和比较\"><a class=\"markdownIt-Anchor\" href=\"#一-int-和-integer-区别和比较\">#</a> 一、 <code>int</code>  和  <code>Integer</code>  区别和比较</h4>\n<p><code>int</code>  为基本类型， <code>Integer</code>  为对象类型。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">Integer</span> <span class=\"variable\">i01</span> <span class=\"operator\">=</span> <span class=\"number\">59</span>;</span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"variable\">i02</span> <span class=\"operator\">=</span> <span class=\"number\">59</span>;</span><br><span class=\"line\"><span class=\"type\">Integer</span> <span class=\"variable\">i03</span> <span class=\"operator\">=</span> Integer.valueOf(<span class=\"number\">59</span>);\t<span class=\"comment\">// 和 Integer i03 = 59一样</span></span><br><span class=\"line\"><span class=\"type\">Integer</span> <span class=\"variable\">i04</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Integer</span>(<span class=\"number\">59</span>);</span><br><span class=\"line\">System.out.println(i01 == i02);\t\t<span class=\"comment\">// true，int类型和Integer类型进行比较时，Integer会自动拆箱，变成int值比较</span></span><br><span class=\"line\">System.out.println(i01 == i03);\t\t<span class=\"comment\">// true</span></span><br><span class=\"line\">System.out.println(i01 == i04);\t\t<span class=\"comment\">// false，i04生成了新的对象</span></span><br><span class=\"line\">System.out.println(i03 == i04);\t\t<span class=\"comment\">// false</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"二-string-和-stringbuffer-和-stringbuilder\"><a class=\"markdownIt-Anchor\" href=\"#二-string-和-stringbuffer-和-stringbuilder\">#</a> 二、 <code>String</code>  和  <code>StringBuffer</code>  和  <code>StringBuilder</code></h4>\n<ul>\n<li><code>String</code> ：<strong>不可改变的字符串</strong></li>\n<li><code>StringBuffer</code>  ：修改字符串，动态构建字符串。方法添加  <code>Synchronized</code>  修饰符</li>\n<li><code>StringBuilder</code> ：线程不安全，速度更快</li>\n</ul>\n<h4 id=\"三-synchronized-和-lock\"><a class=\"markdownIt-Anchor\" href=\"#三-synchronized-和-lock\">#</a> 三、 <code>Synchronized</code>  和  <code>Lock</code></h4>\n<ul>\n<li>\n<p><code>Synchronized</code> ：保证最多一个线程同时执行该代码块，抛出异常时，主动释放锁。等待锁的线程无法终端，会一直等待响应。</p>\n<p><strong>修饰静态方法将会锁住类，修饰普通方法会锁住对象的实例。</strong></p>\n</li>\n<li>\n<p><code>Lock</code> ：需要  <code>finally</code>  添加  <code>unlock</code>  释放锁。</p>\n</li>\n</ul>\n<h4 id=\"四-六原则和一法则\"><a class=\"markdownIt-Anchor\" href=\"#四-六原则和一法则\">#</a> 四、六原则和一法则</h4>\n<ul>\n<li>单一职责原则：类实现高内聚，最实现自己的功能</li>\n<li>开闭原则：对外扩展（通过派生新类实现新功能），对内关闭（类本身不进行修改）</li>\n<li>依赖倒转原则：面向接口编程。</li>\n<li>里氏替换原则：任何时候都可以用子类型替换掉父类型（猫不能继承狗）。</li>\n<li>接口隔离原则：接口要小而专，绝不能大而全。</li>\n<li>合成聚合复用原则：优先使用聚合或合成关系复用代码。</li>\n<li>迪米特法则：一个对象应当对其他对象有尽可能少的了解。</li>\n</ul>\n<h4 id=\"五-请说明一下final-finally-finalize的区别\"><a class=\"markdownIt-Anchor\" href=\"#五-请说明一下final-finally-finalize的区别\">#</a> 五、请说明一下 final, finally, finalize 的区别。</h4>\n<ul>\n<li><code>final</code> ： 用于声明属性，方法和类，分别表示属性不可变，方法不可覆盖，类不可继承。</li>\n<li><code>finally</code> ：是异常处理语句结构的一部分，表示总是执行。</li>\n<li><code>finalize</code> ：是  <code>Object</code>  类的一个方法，在垃圾收集器执行的时候会调用被回收对象的此方法，可以覆盖此方法提供垃圾收集时的其他资源</li>\n</ul>\n<h3 id=\"数据结构\"><a class=\"markdownIt-Anchor\" href=\"#数据结构\">#</a> 数据结构</h3>\n<h4 id=\"一-hashtable\"><a class=\"markdownIt-Anchor\" href=\"#一-hashtable\">#</a> 一、 <code>Hashtable</code></h4>\n<h5 id=\"1简介\"><a class=\"markdownIt-Anchor\" href=\"#1简介\">#</a> 1）简介</h5>\n<p>散列表，存储方式：键值对（key-value）映射。</p>\n<p><strong>继承于 Dictionary</strong>，实现了<strong> Map 接口</strong></p>\n<p>函数同步（操作的函数都有 <code>synchronized </code> 修饰符），线程安全</p>\n<p>key 和 value 都不能为 null</p>\n<p><code>Hashtable</code>  的实例有两个参数影响其性能：<strong>初始容量 和 加载因子</strong>。</p>\n<p>数据通过单项链表的实现保存，所有值存在 <code>Entry[] table</code>  中</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Entry</span>&lt;K, V&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">final</span> K key;\t<span class=\"comment\">// 唯一</span></span><br><span class=\"line\">    V value;</span><br><span class=\"line\">    Entry&lt;K, V&gt; next;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"servlet\"><a class=\"markdownIt-Anchor\" href=\"#servlet\">#</a> Servlet</h3>\n<h4 id=\"一-生命周期\"><a class=\"markdownIt-Anchor\" href=\"#一-生命周期\">#</a> 一、生命周期</h4>\n<ul>\n<li>\n<p>初始化  <code>init()</code></p>\n<p><strong>第一次调用 Servlet 时调用</strong></p>\n</li>\n<li>\n<p><code>service()</code></p>\n<p>执行实际任务的方法。每次服务器接收到一个 Servlet 请求，产生一个新的线程并调用服务。通过请求的请求类型选择调用对应的方法，例：doGet，doPost</p>\n</li>\n<li>\n<p><code>destroy()</code></p>\n<p>destroy () 方法只会被调用一次，在 Servlet 生命周期结束时被调用。destroy () 方法可以让您的 Servlet 关闭数据库连接、停止后台线程、把 Cookie 列表或点击计数器写入到磁盘，并执行其他类似的清理活动。</p>\n<p>在调用 destroy () 方法之后，servlet 对象被标记为垃圾回收</p>\n</li>\n</ul>\n<h3 id=\"serviceloader\"><a class=\"markdownIt-Anchor\" href=\"#serviceloader\">#</a> ServiceLoader</h3>\n<blockquote>\n<p>加载接口下的所有实现类</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ServiceLoader.load(Test.class, classLoader);</span><br></pre></td></tr></table></figure>\n<p><strong>需要将  <code>META-INF/services</code>  目录下配置文件</strong>，文件名称就是接口名，文件内容就是具体实现类</p>\n<p>其他：在  <code>Spring</code>  框架中，  <code>getBeansOfType()</code>  也可以实现</p>\n",
            "tags": [
                "java"
            ]
        }
    ]
}